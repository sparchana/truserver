# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# support dashboard
# ~~~~~~~~~~~~~~~~~

GET         /candidateInteraction/:id                                     controllers.Application.candidateInteraction(id : Long)
GET         /candidateSignupSupport/:cId/:isCall                          controllers.Application.candidateSignupSupport(cId: Long,isCall: String)
GET         /clearStaticCache                                             controllers.Application.invalidateDbCache()
GET         /createCandidateForm                                          controllers.Application.createCandidateForm()
GET         /getAll/:id                                                   controllers.Application.getAll(id: Integer)
GET         /getAllCompany                                                controllers.Application.getAllCompany()
GET         /getAllRecruiters                                             controllers.Application.getAllRecruiters()
GET         /createCompany                                                controllers.Application.createCompany()
GET         /getCompanyRecruiters/:id                                     controllers.Application.getCompanyRecruiters(id : Long)
GET         /getRecruiterInfo/:id                                         controllers.Application.getRecruiterInfo(id : Long)
GET         /getCandidateInfo/:id                                         controllers.Application.getCandidateInfo(id : Long)
GET         /companyDetails/:id                                           controllers.Application.companyInfoHome(id : Long)
GET         /recruiterDetails/:id                                         controllers.Application.recruiterInfoHome(id : Long)
GET         /jobPostDetails/:id                                           controllers.Application.jobPostInfoHome(id : Long)
GET         /getCandidateInteraction/:id                                  controllers.Application.getCandidateInteraction(id : Long)
GET         /getCompanyInfo/:id                                           controllers.Application.getCompanyInfo(id : Long)
GET         /getInteractionNote/:leadId/:limit                            controllers.Application.getInteractionNote(leadId: Long,limit: Long)
GET         /getSupportAgent                                              controllers.Application.getSupportAgent()
GET         /getLeadMobile/:id                                            controllers.Application.getLeadMobile(id : Long)
GET         /logout                                                       controllers.Application.logout()
GET         /searchCandidate                                              controllers.Application.searchCandidate()
GET         /showCompanyAndJob                                            controllers.Application.showCompanyAndJob()
GET         /support                                                      controllers.Application.support()
GET         /support/administrator                                        controllers.Application.administrator()
GET         /street                                                       controllers.Application.supportAuth()
GET         /updateLeadType/:leadId/:newStatus                            controllers.Application.updateLeadType(leadId: Long, newStatus: Long)
GET         /updateLeadStatus/:leadId/:leadStatus/:res                    controllers.Application.updateLeadStatus(leadId: Long, leadStatus: Integer,res: String)
GET         /support/administrator/alphaRequest/:mobile                   controllers.Application.removeDuplicateLeadOrCandidate(mobile: String)
GET         /support/administrator/uploadCSV                              controllers.Application.uploadCSV()
GET         /support/ifExists/:mobile                                     controllers.Application.ifExists(mobile: String)
GET         /support/api/getJobPostMatchingParams/:jobPostId              controllers.Application.getJobPostMatchingParams(jobPostId: Long)
GET         /support/workflow/:jobPostId/                                 controllers.Application.renderWorkflow(jobPostId: Long, view: String ?= null)

POST        /addCompany                                                   controllers.Application.addCompany()
POST        /addCompanyLogo                                               controllers.Application.addCompanyLogo()
POST        /addJobPost                                                   controllers.Application.addJobPost()
POST        /addOrUpdateFollowUp                                          controllers.Application.addOrUpdateFollowUp()
POST        /addRecruiter                                                 controllers.Application.addRecruiter()
POST        /api/kw/cdr                                                   controllers.Application.kwCdrInput()
POST        /auth                                                         controllers.Application.auth()
POST        /getAllCompanyStatus                                          controllers.Application.getAllCompanyStatus()
POST        /getAllCompanyType                                            controllers.Application.getAllCompanyType()
POST        /getAllExperience                                             controllers.Application.getAllExperience()
POST        /getAllJobStatus                                              controllers.Application.getAllJobStatus()
POST        /getAllJobExpQuestion                                         controllers.Application.getAllJobExpQuestion()
POST        /getAllPricingPlans                                           controllers.Application.getAllPricingPlans()
POST        /getAllTimeSlots                                              controllers.Application.getAllTimeSlots()
POST        /getJobExpQuestion/:jobRoleIdList                             controllers.Application.getJobExpQuestion(jobRoleIdList : String)
POST        /getRelevantJobsPostsForCandidate/:id                         controllers.Application.getRelevantJobsPostsForCandidate(id : Long)
POST        /getSearchCandidateResult                                     controllers.Application.getSearchCandidateResult()
POST        /processCsv                                                   controllers.Application.processcsv()
POST        /signUpSupport                                                controllers.Application.signUpSupport()
POST        /getAllDeactivationReason                                     controllers.Application.getAllDeactivationReason()
POST        /support/api/getMatchingCandidate/                            controllers.Application.getMatchingCandidate()
POST        /support/api/saveSelectedCandidate/                           controllers.Application.saveSelectedCandidate()
POST        /support/api/getSelectedCandidate/:jpId                       controllers.Application.getSelectedCandidate(jpId: Long)

# user dashboard
# ~~~~~~~~~~~~~~

GET         /checkCandidateSession                                        controllers.Application.checkCandidateSession()
GET         /dashboard                                                    controllers.Application.dashboard()
GET         /dashboard/appliedJobs/                                       controllers.Application.appliedJobs()
GET         /dashboard/editProfile                                        controllers.Application.editProfile()
GET         /getCandidateInfoDashboard                                    controllers.Application.getCandidateInfoDashboard()
GET         /getCandidateJobApplication                                   controllers.Application.getCandidateJobApplication()
GET         /getCandidateJobPrefWithAssessmentStatus/                     controllers.Application.getCandidateJobPrefWithAssessmentStatus(limit: Integer ?= null)
GET         /logoutUser                                                   controllers.Application.logoutUser()
GET         /privacy                                                      controllers.Application.privacy()
GET         /updateIsAssessedToAssessed                                   controllers.Application.updateIsAssessedToAssessed()
GET         /getAssessmentQuestions/                                      controllers.Application.getAssessmentQuestion(jobRoleIds: String ?= null, jobPostIds: String ?= null, limit: Integer ?= null)
GET         /getJobPostAppliedStatus/:jobPostId                           controllers.Application.getJobPostAppliedStatus(jobPostId: Long)

POST        /addLead                                                      controllers.Application.addLead()
POST        /addPassword                                                  controllers.Application.addPassword()
POST        /applyJob                                                     controllers.Application.applyJob()
POST        /candidateUpdateBasicProfile                                  controllers.Application.candidateUpdateBasicProfile()
POST        /candidateUpdateExperienceDetails                             controllers.Application.candidateUpdateExperienceDetails()
POST        /candidateUpdateEducationDetails                              controllers.Application.candidateUpdateEducationDetails()
POST        /findUserAndSendOtp                                           controllers.Application.findUserAndSendOtp()
POST        /loginSubmit                                                  controllers.Application.loginSubmit()
POST        /signUp                                                       controllers.Application.signUp()
POST        /submitAssessment                                             controllers.Application.submitAssessment()

# partner routes
#~~~~~~~~~~~~~~~~~~~~
GET         /logoutPartner                                                controllers.PartnerController.logoutPartner()
GET         /getMyCandidates                                              controllers.PartnerController.getMyCandidates()
GET         /checkPartnerSession                                          controllers.PartnerController.checkPartnerSession()
GET         /partner                                                      controllers.PartnerController.partnerIndex()
GET         /partner/home                                                 controllers.PartnerController.partnerHome()
GET         /partner/editProfile                                          controllers.PartnerController.partnerEditProfile()
GET         /partner/candidate/:id                                        controllers.PartnerController.partnerCreateCandidate(id : Long)
GET         /partner/myCandidates                                         controllers.PartnerController.partnerCandidates()
GET         /partnerNavBar                                                controllers.PartnerController.renderPagePartnerNavBar()
GET         /getPartnerProfileInfo                                        controllers.PartnerController.getPartnerProfileInfo()
GET         /partnerNavBarLoggedIn                                        controllers.PartnerController.renderPagePartnerLoggedInNavbar()
GET         /partner/ifExists/:mobile                                     controllers.Application.ifCandidateExists(mobile: String)
GET         /partner/:candidateId/jobs                                    controllers.PartnerController.renderCandidateJobPage(candidateId: Long)
GET         /getAppliedJobsByPartnerForCandidate/:id                      controllers.PartnerController.getAppliedJobsByPartnerForCandidate(id : Long)

POST        /getJobPostInfoViaPartner/:id/:candidateId                    controllers.PartnerController.getJobPostInfoViaPartner(id : Long, candidateId : Long)
POST        /getCandidateMatchingJobs/:id                                 controllers.PartnerController.getCandidateMatchingJobs(id : Long)
POST        /verifyCandidateUsingOtp                                      controllers.PartnerController.verifyCandidateUsingOtp()
POST        /getPartnerCandidate/:id                                      controllers.PartnerController.getPartnerCandidate(id : Long)
POST        /sendCandidateVerificationSMS/:mobile                         controllers.PartnerController.sendCandidateVerificationSMS(mobile : String)
POST        /partnerCreateCandidateSubmit                                 controllers.PartnerController.partnerCreateCandidateSubmit()
POST        /findPartnerAndSendOtp                                        controllers.PartnerController.findPartnerAndSendOtp()
POST        /getAllPartnerType                                            controllers.PartnerController.getAllPartnerType()
POST        /partnerLoginSubmit                                           controllers.PartnerController.loginSubmit()
POST        /addPartnerPassword                                           controllers.PartnerController.addPassword()
POST        /partnerSignUp                                                controllers.PartnerController.partnerSignUp()
POST        /partnerUpdateBasicProfile                                    controllers.PartnerController.partnerUpdateBasicProfile()
POST        /checkPartnerCandidate/:id                                    controllers.PartnerController.checkPartnerCandidate(id : Long)

# recruiter routes
#~~~~~~~~~~~~~~~~~~~~
GET         /recruiter                                                    controllers.RecruiterController.recruiterIndex()
GET         /recruiter/home                                               controllers.RecruiterController.recruiterHome()
GET         /logoutRecruiter                                              controllers.RecruiterController.logoutRecruiter()
GET         /checkRecruiterSession                                        controllers.RecruiterController.checkRecruiterSession()
GET         /getRecruiterProfileInfo                                      controllers.RecruiterController.getRecruiterProfileInfo()
GET         /recruiter/profile                                            controllers.RecruiterController.recruiterEditProfile()
GET         /recruiter/candidateSearch                                    controllers.RecruiterController.recruiterCandidateSearch()

POST        /getAllJobApplicants/:id                                      controllers.RecruiterController.getAllJobApplicants(id : Long)
POST        /getAllRecruiterJobPosts                                      controllers.RecruiterController.getAllRecruiterJobPosts
POST        /getRecruiterCredits/:id                                      controllers.RecruiterController.getRecruiterCredits(id : Long)
POST        /getAllCreditCategory                                         controllers.RecruiterController.getAllCreditCategory()
POST        /recruiter/unlockCandidateContact/:id                         controllers.RecruiterController.unlockCandidateContact(id : Long)
POST        /addRecruiterLead                                             controllers.RecruiterController.addWebsiteLead()
POST        /recruiterSignUp                                              controllers.RecruiterController.recruiterSignUp()
POST        /addRecruiterPassword                                         controllers.RecruiterController.addPassword()
POST        /recruiterLoginSubmit                                         controllers.RecruiterController.loginSubmit()
POST        /recruiter/api/getMatchingCandidate/                          controllers.RecruiterController.getMatchingCandidate()
POST        /recruiter/api/getUnlockedCandidates/                         controllers.RecruiterController.getUnlockedCandidates()
GET        /sendTestEmail                                                 controllers.RecruiterController.sendTestEmail()

#new routes
#~~~~~~~~~~~~~~~~~~~~
GET         /navBar                                                       controllers.Application.renderPageNavBar()
GET         /navBarLoggedIn                                               controllers.Application.renderPageNavBarLoggedIn()
GET         /footer                                                       controllers.Application.renderPageFooter()
GET         /jobPostCardView                                              controllers.Application.renderJobPostCards()
GET         /showJobs                                                     controllers.Application.renderShowAllJobs()
GET         /pageNotFound                                                 controllers.Application.pageNotFound()
GET         /jobs/:jobTitle/:jobLocation/:jobCompany/:jobId               controllers.Application.renderJobPostDetails( jobTitle: String , jobLocation : String , jobCompany :String , jobId : Long )
GET         /job/:jobTitle/:jobLocation/:jobCompany/:jobId                controllers.Application.getJobPostDetails( jobTitle: String , jobLocation : String , jobCompany :String , jobId : Long )
GET         /job/:rolePara/:idPara                                        controllers.Application.renderJobRoleJobPage( rolePara: String, idPara:Long)
GET         /jobs/:rolePara/:idPara                                       controllers.Application.getJobRoleWiseJobPosts( rolePara: String, idPara:Long)

# Both support and user
# ~~~~~~~~~~~~~~~~~~~~~

GET         /                                                             controllers.Application.index()
GET         /getAllSkills/:id                                             controllers.Application.getAllSkills(id : String)
GET         /getAllJobPosts                                               controllers.Application.getAllJobPosts()
GET         /checkNavBar                                                  controllers.Application.checkNavBar()

POST        /getAllDegree                                                 controllers.Application.getAllDegree()
POST        /getAllEducation                                              controllers.Application.getAllEducation()
POST        /getAllJobsRolesWithJobs                                      controllers.Application.getAllJobsRolesWithJobs()
POST        /getAllNormalJobPosts                                         controllers.Application.getAllNormalJobPosts()
POST        /getAllHotJobPosts                                            controllers.Application.getAllHotJobPosts()
POST        /getAllIdProof                                                controllers.Application.getAllIdProof()
POST        /getAllJobs                                                   controllers.Application.getAllJobs()
POST        /getAllLeadSource                                             controllers.Application.getAllLeadSource()
POST        /getAllLanguage                                               controllers.Application.getAllLanguage()
POST        /getAllLocality                                               controllers.Application.getAllLocality()
POST        /getAllShift                                                  controllers.Application.getAllShift()
POST        /getAllTransportation                                         controllers.Application.getAllTransportation()
POST        /getAllCompanyLogos                                           controllers.Application.getAllCompanyLogos()
POST        /getJobPostInfo/:id/:isSupport                                controllers.Application.getJobPostInfo(id : Long, isSupport : Integer)
# 3rd Party API
# ~~~~~~~~~~~~~

GET         /employer/postJob                                             controllers.Application.postJob()


# Trudroid API
# ~~~~~~~~~~~~
GET         /getTestProto                                                 controllers.TrudroidController.getTestProto()
POST        /mLoginSubmit                                                 controllers.TrudroidController.mLoginSubmit()
POST        /mSignUp                                                      controllers.TrudroidController.mSignUp()
POST        /mResendOtp                                                   controllers.TrudroidController.mResendOtp()
POST        /mAddPassword                                                 controllers.TrudroidController.mAddPassword()
POST        /mFindUserAndSendOtp                                          controllers.TrudroidController.mFindUserAndSendOtp()
POST        /mGetAllJobRoles                                              controllers.TrudroidController.mGetAllJobRoles()
POST        /mGetAllJobPosts                                              controllers.TrudroidController.mGetAllJobPosts()
POST        /mAddHomeLocality                                             controllers.TrudroidController.mAddHomeLocality()
POST        /mApplyJob                                                    controllers.TrudroidController.mApplyJob()
POST        /mAddJobPref                                                  controllers.TrudroidController.mAddJobPref()
POST        /mGetCandidateInformation                                     controllers.TrudroidController.mGetCandidateInformation()
POST        /mGetJobPostInfo                                              controllers.TrudroidController.mGetJobPostInfo()
POST        /mFetchCandidateAlert                                         controllers.TrudroidController.mFetchCandidateAlert()
POST        /mSearchJobs                                                  controllers.TrudroidController.mSearchJobs()
POST        /mGetCandidateJobApplication                                  controllers.TrudroidController.mGetCandidateJobApplication()
POST        /mCandidateUpdateBasicProfile                                 controllers.TrudroidController.mCandidateUpdateBasicProfile()
POST        /mCandidateUpdateExperienceProfile                            controllers.TrudroidController.mCandidateUpdateExperienceProfile()
POST        /mCandidateUpdateEducationProfile                             controllers.TrudroidController.mCandidateUpdateEducationProfile()
POST        /mGetCandidateUpdateBasicProfileStatics                       controllers.TrudroidController.mGetCandidateUpdateBasicProfileStatics()
POST        /mGetCandidateUpdateExperienceProfileStatics/:jobRoles        controllers.TrudroidController.mGetCandidateUpdateExperienceProfileStatics(jobRoles: String)
POST        /mGetCandidateUpdateEducationProfileStatics                   controllers.TrudroidController.mGetCandidateUpdateEducationProfileStatics()
POST        /mGetLocalityForLatLngOrPlaceId                               controllers.TrudroidController.mGetLocalityForLatLngOrPlaceId()

# Test API
# ~~~~~~~~~~~~~
GET         /resolveLatLng/:latlng                                        controllers.TrudroidController.mResolveLatLng(latlng: String)
GET        /support/api/testMatchingCandidate/:jpId                       controllers.Application.testMatchingCandidate(jpId: Long)

# Scrap API
# ~~~~~~~~~~~~~
GET         /support/administrator/scrapCSV/dashboard                     controllers.Application.scrapArena()
POST        /support/administrator/scrapCSV/processBabaJCSV               controllers.Application.processBabaJCSV()

# 3rd Party API
# ~~~~~~~~~~~~~
GET         /employer/postJob                                             controllers.Application.postJob()

# Analytics/Super Admin Panel
# ~~~~~~~~~

## 'R' of CRUD - API
## ---------------
POST        /api/alpha/:vId                                               controllers.AnalyticsController.alphaHandler(vId: Integer)
POST        /api/getDeactivatedCandidateList                              controllers.Application.getDeactivatedCandidateList()
POST        /api/getRelatedJobRole/                                       controllers.Application.getRelatedJobRole(format: String ?=null, jobRoleIds: String ?= null)

## 'U' of CRUD - API
## ---------------
POST        /api/deactiveToActive                                         controllers.Application.deactiveToActive()

## Compute API
GET         /api/compute/updateAllRelevantJobCategories                    controllers.Application.updateAllRelevantJobCategories()
POST        /api/compute/updateAllActivityScores                           controllers.Application.updateAllActivityScores()

# Map static resources from the /public folder to the /assets URL path
GET         /robots.txt                                                   controllers.Assets.at(path="/public", file="robots.txt")
GET         /assets/*file                                                 controllers.Assets.at(path="/public", file)
GET         /sitemap.xml                                                  controllers.Assets.at(path="/public", file="sitemap.xml")
GET         /favicon.ico                                                  controllers.Assets.at(path="/public/img/", file="icon.png")
#GET   /webjars/*file                           controllers.WebJarAssets.at(file)

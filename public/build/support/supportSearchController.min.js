<<<<<<< HEAD
function processDataCheckJobs(e){e.forEach(function(e){var a=e.jobRoleId,t=e.jobName,n={};n.id=a,n.name=t,jobArray.push(n)}),NProgress.done()}function processDataCheckLocality(e){e.forEach(function(e){var a=e.localityId,t=e.localityName,n={};n.id=a,n.name=t,localityArray.push(n)}),NProgress.done()}function getLocality(){return localityArray}function getJob(){return jobArray}function recreateDataTable(){NProgress.start(),$.fn.dataTable.isDataTable("table#candidateSearchResultTable")&&$("table#candidateSearchResultTable").DataTable().clear(),renderSearchResult(),NProgress.done()}function getJobPref(e){var a=[];try{e.forEach(function(e){var t=e.jobRole.jobName;a.push(" "+t)})}catch(e){}return a}function getLocalityPref(e){var a=[];try{e.forEach(function(e){var t=e.locality.localityName;a.push(" "+t)})}catch(e){}return a}function getInYearMonthFormat(e){if(null==e)return"NA";var a=Math.round(parseInt(e)/12*100)/100;return a}function getLanguageKnown(e){var a=[];try{if(null==e||e.length<1)return"NA";e.forEach(function(e){a.push(""+e.language.languageName+" ("+e.understanding+", "+e.verbalAbility+", "+e.readWrite+")")})}catch(e){}return a}function getLastWithdrawnSalary(e){return null==e?"NA":e}function getGender(e){return null==e?"NA":"0"==e?"M":"1"==e?"F":void 0}function getEducation(e){return null!=e&&null!=e.education?e.education.educationName:"NA"}function getSkills(e){var a=[];return null!=e&&(e.forEach(function(e){if(null!=e&&null!=e.candidateSkillResponse){var t;t=1==e.candidateSkillResponse?"Yes":"No",a.push(" "+e.skill.skillName+" : "+t)}}),a.length>0)?a:"NA"}function getHomeLocality(e){return null!=e?e.localityName:"NA"}function getDateTime(e){var a=new Date(e).getUTCFullYear()+"-"+("0"+(new Date(e).getUTCMonth()+1)).slice(-2)+"-"+("0"+new Date(e).getDate()).slice(-2)+" "+("0"+new Date(e).getHours()).slice(-2)+":"+("0"+new Date(e).getMinutes()).slice(-2)+":"+("0"+new Date(e).getSeconds()).slice(-2);return a}function getPastOrCurrentCompanyName(e){var a=[];return null!=e&&e.forEach(function(e){if(null!=e&&null!=e.candidatePastCompany){var t=e.currentJob?" *":"";a.push(" "+e.candidatePastCompany+t)}}),a.length>0?a:"NA"}function getYesNo(e){return null!=e?"0"==e||0==e?"No":"yes":"NA"}function getExperience(e){var a=[];return null!=e?(e.forEach(function(e){null!=e&&null!=e.jobExpQuestion&&null!=e.jobExpResponse&&a.push(" "+e.jobExpQuestion.jobRole.jobName+": "+e.jobExpQuestion.expCategory.expCategoryName+": "+e.jobExpResponse.jobExpResponseOption.jobExpResponseOptionName)}),a):"NA"}function getAge(e){var a=Date.now()-e,t=new Date(a);return Math.abs(t.getUTCFullYear()-1970)}function getProperProfileStatus(e){return null!=e?"1"==e.profileStatusId?"Active":e.profileStatusName:"NA"}function getExpiry(e){return null!=e?e.statusExpiryDate:"NA"}function getLastName(e){return null!=e?e:"NA"}function getFirstName(e){return null!=e?e:"NA"}function getIdProof(e){var a=[];return null!=e&&(e.forEach(function(e){null!=e&&null!=e.idProof&&null!=e.idProof.idProofName&&a.push(" "+e.idProof.idProofName)}),a.length>0)?a:"NA"}function renderSearchResult(e){var a=e.status,t=e.candidateList;if(3==a)$("#searchErrorMsg").text("Looks like you have exhausted your search limit. Please contact your administrator."),$("#searchError").show(),$("#candidateSearchResultTable").hide();else{$("#searchError").hide();var n=[];try{t.forEach(function(e){var a="",t="";null!=e.timeShiftPreference&&(a=e.timeShiftPreference.timeShift.timeShiftName),null!=e.locality&&(t=e.locality.localityName);var i=getVerificationStatus(e);n.push({cLID:'<a href="/candidateSignupSupport/'+e.lead.leadId+'/false" target="_blank">'+e.lead.leadId+"</a>",candidateFirstName:getFirstName(e.candidateFirstName)+" "+getLastName(e.candidateLastName),candidateMobile:e.candidateMobile,candidateLastWithdrawnSalary:getLastWithdrawnSalary(e.candidateLastWithdrawnSalary),candidateJobPref:getJobPref(e.jobPreferencesList),candidateLocalityPref:getLocalityPref(e.localityPreferenceList),locality:getHomeLocality(e.locality),candidateLanguage:getLanguageKnown(e.languageKnownList),candidateEducation:getEducation(e.candidateEducation),candidateSkillList:getSkills(e.candidateSkillList),candidateTimeShiftPref:a,candidateExperience:getInYearMonthFormat(e.candidateTotalExperience),candidateIsAssessmentComplete:getYesNo(e.candidateIsAssessed),candidateGender:getGender(e.candidateGender),candidateIsEmployed:getYesNo(e.candidateIsEmployed),candidateCreateTimestamp:getDateTime(e.candidateCreateTimestamp),pastOrCurrentCompanyName:getPastOrCurrentCompanyName(e.jobHistoryList),isMinProfileComplete:getYesNo(e.isMinProfileComplete),followUp:getYesNo(e.lead.followUp),noOfJobApplication:e.jobApplicationList.length,experience:getExperience(e.candidateExpList),age:getAge(e.candidateDOB),candidateExperienceLetter:getYesNo(e.candidateExperienceLetter),isActive:getProperProfileStatus(e.candidateprofilestatus),candidateExpiry:getExpiry(e.candidateStatusDetail),candidateIdProofs:getIdProof(e.idProofReferenceList),candidateAadhaarNumber:getAadhaarNumber(e.idProofReferenceList),candidateNameVerified:i.Name,candidatePhoneVerified:i.Phone,candidateDOBVerified:i.DOB,candidateGenderVerified:i.Gender,candidateVerifyNow:'<input style="margin-left: 6px" type="button" value="Verify" onclick="verifyAadhaar('+e.candidateMobile+')">'})}),$("#candidateSearchResultTable").show();var i=$("table#candidateSearchResultTable").DataTable({data:n,order:[[15,"desc"]],scrollX:!0,columns:[{data:"cLID"},{data:"candidateFirstName"},{data:"candidateMobile"},{data:"candidateJobPref"},{data:"candidateLocalityPref"},{data:"locality"},{data:"candidateExperience"},{data:"candidateIsEmployed"},{data:"candidateLastWithdrawnSalary"},{data:"candidateLanguage"},{data:"candidateEducation"},{data:"candidateSkillList"},{data:"candidateGender"},{data:"candidateIsAssessmentComplete"},{data:"candidateTimeShiftPref"},{data:"candidateCreateTimestamp"},{data:"pastOrCurrentCompanyName"},{data:"isMinProfileComplete"},{data:"followUp"},{data:"noOfJobApplication"},{data:"experience"},{data:"age"},{data:"candidateExperienceLetter"},{data:"isActive"},{data:"candidateExpiry"},{data:"candidateIdProofs"},{data:"candidateAadhaarNumber"},{data:"candidateNameVerified"},{data:"candidatePhoneVerified"},{data:"candidateDOBVerified"},{data:"candidateGenderVerified"},{data:"candidateVerifyNow"}],deferRender:!0,scroller:!0,scrollY:"48vh",scrollCollapse:!0,language:{emptyTable:"No data available"},destroy:!0,dom:"Bfrtip",buttons:["copy","csv","excel"]});i.columns().every(function(){var e=this;$("input",this.footer()).on("keyup change",function(){e.search()!==this.value&&e.search(this.value).draw()})}),$.fn.dataTable.moment("dd/MM/YYYY HH:mm:ss");var r=$("#candidateSearchResultTable").dataTable();$("#minExp").keyup(function(){r.fnDraw()}),$("#maxExp").keyup(function(){r.fnDraw()}),$("#minSal").keyup(function(){r.fnDraw()}),$("#maxSal").keyup(function(){r.fnDraw()}),$("#minJobApplication").keyup(function(){r.fnDraw()}),$("#maxJobApplication").keyup(function(){r.fnDraw()}),$("#minAge").keyup(function(){r.fnDraw()}),$("#maxAge").keyup(function(){r.fnDraw()})}catch(e){void 0}}NProgress.done()}function searchForm(){var e,a=[],t=[],n=$("#candidateJobPref").val().split(","),i=$("#candidateLocalityPref").val().split(",");for(e=0;e<n.length;e++)""!=n[e]&&t.push(n[e]);for(e=0;e<i.length;e++)""!=i[e]&&a.push(i[e]);var r={candidateFirstName:$("#candidateFirstName").val(),candidateMobile:$("#candidateMobile").val(),candidateLocality:a,candidateJobInterest:t,fromThisDate:$("#fromThisDate").val(),toThisDate:$("#toThisDate").val(),languageKnown:$("#languageMultiSelect").val(),idProofs:$("#idProofMultiSelect").val()};if(r.fromThisDate>r.toThisDate)$.notify({title:"Invalid Date Input: ",message:"Selected Date Range is Incorrect. Please Select valid (from/to) Date",animate:{enter:"animated lightSpeedIn",exit:"animated lightSpeedOut"}},{type:"danger"}),shouldAddFooter=!1;else{shouldAddFooter=!0,NProgress.start();try{$.ajax({type:"POST",url:"/getSearchCandidateResult",contentType:"application/json; charset=utf-8",data:JSON.stringify(r),success:renderSearchResult})}catch(e){void 0}}}function processLanguage(e){if(null!=e){var a=[];e.forEach(function(e){var t={label:e.languageName,value:parseInt(e.languageId)};a.push(t)});var t=$("#languageMultiSelect");t.multiselect({includeSelectAllOption:!0,maxHeight:300}),t.multiselect("dataprovider",a),t.multiselect("rebuild")}}function processIdProof(e){if(null!=e){var a=[];e.forEach(function(e){var t={label:e.idProofName,value:parseInt(e.idProofId)};a.push(t)});var t=$("#idProofMultiSelect");t.multiselect({includeSelectAllOption:!0,maxHeight:300}),t.multiselect("dataprovider",a),t.multiselect("rebuild")}}function getAadhaarNumber(e){var a="N/A";try{null!=e&&e.forEach(function(e){3==e.idProof.idProofId&&"undefined"!=e.idProofNumber&&(a=e.idProofNumber)})}catch(e){void 0}return a}function getVerificationStatus(e){var a=e.candidateVerificationList,t=new Object;return t.Name="N/A",t.Phone="N/A",t.DOB="N/A",t.Gender="N/A",null!=a&&a.length>0&&a.forEach(function(e){3==e.ongridField.fieldId&&(t.Name=e.ongridVerificationStatus.statusName),4==e.ongridField.fieldId&&(t.Phone=e.ongridVerificationStatus.statusName),5==e.ongridField.fieldId&&(t.DOB=e.ongridVerificationStatus.statusName),9==e.ongridField.fieldId&&(t.Gender=e.ongridVerificationStatus.statusName)}),t}function verifyAadhaar(e){NProgress.start();try{$.ajax({type:"POST",crossDomain:!0,url:"/api/compute/verifyAadhar/"+e,async:!0,success:handleAadharVerificationResponse})}catch(e){void 0}}function handleAadharVerificationResponse(e){var a=e.responseMessage;$.notify({title:"Verification response: ",message:a+". Refreshing search results",animate:{enter:"animated lightSpeedIn",exit:"animated lightSpeedOut"}},{type:"danger"}),$("#searchBtn").trigger("click"),NProgress.done()}var localityArray=[],jobArray=[],shouldAddFooter=!0;$.fn.dataTableExt.afnFiltering.push(function(e,a,t){var n=1*document.getElementById("minExp").value,i=1*document.getElementById("maxExp").value,r="-"==a[6]?0:1*a[6];return""==n&&""==i||(""==n&&r<=i||(n<=r&&""==i||n<=r&&r<=i))},function(e,a,t){var n=1*document.getElementById("minSal").value,i=1*document.getElementById("maxSal").value,r="-"==a[8]?0:1*a[8];return""==n&&""==i||(""==n&&r<=i||(n<=r&&""==i||n<=r&&r<=i))},function(e,a,t){var n=$("#minJobApplication").val(),i=$("#maxJobApplication").val(),r="-"==a[19]?0:1*a[19];return""==n&&""==i||(""==n&&r<=i||(n<=r&&""==i||(n<=r&&r<=i||void 0)))},function(e,a,t){var n=$("#minAge").val(),i=$("#maxAge").val(),r="-"==a[21]?0:1*a[21];return""==n&&""==i||(""==n&&r<=i||(n<=r&&""==i||(n<=r&&r<=i||void 0)))}),$(function(){try{$.ajax({type:"POST",url:"/getAllLanguage",data:!1,async:!1,contentType:!1,processData:!1,success:processLanguage})}catch(e){void 0}try{$.ajax({type:"POST",url:"/getAllIdProof",data:!1,async:!1,contentType:!1,processData:!1,success:processIdProof})}catch(e){void 0}NProgress.start();try{$.ajax({type:"POST",url:"/getAllLocality",data:!1,contentType:!1,processData:!1,success:processDataCheckLocality})}catch(e){void 0}try{$.ajax({type:"POST",url:"/getAllJobs",data:!1,contentType:!1,processData:!1,success:processDataCheckJobs})}catch(e){void 0}$("#candidateSearchForm").submit(function(e){e.preventDefault(),searchForm(),shouldAddFooter&&$("#candidateSearchResultTable tfoot th").each(function(){var e=$(this).text();$(this).html('<input type="text" name="'+e+'"  id="'+e+'" placeholder="'+e+'" />')})}),$("#toThisDate").datepicker({dateFormat:"yy-mm-dd",changeYear:!0}),$("#fromThisDate").datepicker({dateFormat:"yy-mm-dd",changeYear:!0})});
=======
var localityArray = [];
var jobArray = [];
var shouldAddFooter = true;

function processDataCheckJobs(returnedData) {
    returnedData.forEach(function(job) {
        var id = job.jobRoleId;
        var name = job.jobName;
        var item = {};
        item["id"] = id;
        item["name"] = name;
        jobArray.push(item);
    });
    NProgress.done();
}

function processDataCheckLocality(returnedData) {
    returnedData.forEach(function(locality) {
        var id = locality.localityId;
        var name = locality.localityName;
        var item = {};
        item["id"] = id;
        item["name"] = name;
        localityArray.push(item);
    });
    NProgress.done();
}

function getLocality() {
    return localityArray;
}

function getJob() {
    return jobArray;
}

function recreateDataTable() {
    NProgress.start();
    if ($.fn.dataTable.isDataTable('table#candidateSearchResultTable')) {
        $('table#candidateSearchResultTable').DataTable().clear();
    }
    renderSearchResult();
    NProgress.done();
}

function getJobPref(jobPrefList) {
    var jobString = [];
    try {
        jobPrefList.forEach(function(individualJob) {
            var name = individualJob.jobRole.jobName;
            jobString.push(" " + name);
        });
    } catch (err) {}
    return jobString;
}

function getLocalityPref(localityPrefList) {
    var localityString = [];
    try {
        localityPrefList.forEach(function(individualLocality) {
            var name = individualLocality.locality.localityName;
            localityString.push(" " + name);
        });
    } catch (err) {}
    return localityString;
}

function getInYearMonthFormat(d) {
    if (d == null) {
        return "NA";
    } else {
        var totalYear = Math.round((parseInt(d) / 12) * 100) / 100;
        /*var yr = Math.floor((parseInt(d)/12)).toString();
        var month =  parseInt(d)%12;
        if(yr == 0){

            return month +" Month";
        } else {
            return yr + " Year " + month +" Month";
        }*/
        return totalYear;
    }
}

function getLanguageKnown(languageKnownList) {
    var languageString = [];
    try {
        if (languageKnownList == null || languageKnownList.length < 1) {
            return "NA";
        }
        languageKnownList.forEach(function(languageKnown) {
            languageString.push('' + languageKnown.language.languageName + ' (' + languageKnown.understanding + ', ' + languageKnown.verbalAbility + ', ' + languageKnown.readWrite + ')');
        });
    } catch (err) {}
    return languageString;

}

function getLastWithdrawnSalary(salary) {
    if (salary == null) {
        return "NA";
    } else {
        return salary;
    }

}

function getGender(gender) {
    if (gender == null) {
        return "NA";
    } else if (gender == "0") {
        return "M";
    } else if (gender == "1") {
        return "F";
    }
}

function getEducation(candidateEducation) {
    if (candidateEducation != null) {
        if (candidateEducation.education != null) {
            return candidateEducation.education.educationName;
        }
    }
    return "NA";
}

function getSkills(skillList) {
    var skills = [];
    if (skillList != null) {
        skillList.forEach(function(candidateSkill) {
            if (candidateSkill != null) {
                if (candidateSkill.candidateSkillResponse != null) {
                    var resp;
                    if (candidateSkill.candidateSkillResponse == true) {
                        resp = "Yes"
                    } else {
                        resp = "No"
                    }
                    skills.push(" " + candidateSkill.skill.skillName + " : " + resp);
                }
            }
        });
        if (skills.length > 0) {
            return skills;
        }
    }
    return "NA";
}

function getHomeLocality(locality) {
    if (locality != null) {
        return locality.localityName;
    } else {
        return "NA";
    }
}

function getDateTime(value) {
    // 2016-07-20 21:18:07
    /*
     * getUTCMonth(): Returns the month according to the UTC (0 - 11).
     * getUTCFullYear(): Returns the four-digit year according to the UTC.
     */
    var dateTime = new Date(value).getUTCFullYear() + "-" + ("0" + (new Date(value).getUTCMonth() + 1)).slice(-2) +
        "-" + ("0" + new Date(value).getDate()).slice(-2) + " " + ("0" + new Date(value).getHours()).slice(-2) + ":" +
        ("0" + new Date(value).getMinutes()).slice(-2) + ":" + ("0" + new Date(value).getSeconds()).slice(-2);
    return dateTime;
}

function getPastOrCurrentCompanyName(jobHistoryList) {
    var expArray = [];
    if (jobHistoryList != null) {
        jobHistoryList.forEach(function(candidateExp) {
            if (candidateExp != null) {
                if (candidateExp.candidatePastCompany != null) {
                    var hint = candidateExp.currentJob ? " *" : "";
                    expArray.push(" " + candidateExp.candidatePastCompany + hint);
                }
            }
        });
    }
    if (expArray.length > 0) {
        return expArray;
    } else {
        return "NA";
    }
}

function getYesNo(assesment) {
    if (assesment != null) {
        if (assesment == '0' || assesment == false) {
            return "No";
        } else {
            return "yes";
        }
    }
    return "NA";
}

function getExperience(candidateExpList) {
    var candidateExpArray = [];
    if (candidateExpList != null) {
        candidateExpList.forEach(function(candidateExp) {
            if (candidateExp != null) {
                if (candidateExp.jobExpQuestion != null && candidateExp.jobExpResponse != null) {
                    candidateExpArray.push(" " + candidateExp.jobExpQuestion.jobRole.jobName + ": " + candidateExp.jobExpQuestion.expCategory.expCategoryName + ": " + candidateExp.jobExpResponse.jobExpResponseOption.jobExpResponseOptionName);
                }
            }
        });
        return candidateExpArray;
    }
    return "NA";
}

function getAge(birthday) { // birthday is in milisec
    var ageDifMs = Date.now() - birthday;
    var ageDate = new Date(ageDifMs); // miliseconds from epoch
    return Math.abs(ageDate.getUTCFullYear() - 1970);
}

function getProperProfileStatus(profileStatus) {
    if (profileStatus != null) {
        if (profileStatus.profileStatusId == "1") { // new or active return active
            return "Active";
        } else {
            return profileStatus.profileStatusName;
        }
    }
    return "NA";
}

function getExpiry(expiryObject) {
    if (expiryObject != null) {
        return expiryObject.statusExpiryDate;
    }
    return "NA";
}


function getLastName(lastName) {
    if (lastName != null) {
        return lastName;
    }
    return "NA";
}

function getFirstName(firstName) {
    if (firstName != null) {
        return firstName;
    }
    return "NA";
}

function getIdProof(idProofList) {
    var idProofArray = [];
    if (idProofList != null) {
        idProofList.forEach(function(candidateIdProof) {
            if (candidateIdProof != null) {
                if (candidateIdProof.idProof != null && candidateIdProof.idProof.idProofName != null) {
                    idProofArray.push(" " + candidateIdProof.idProof.idProofName);
                }
            }
        });
        if (idProofArray.length > 0) {
            return idProofArray;
        }
    }
    return "NA";
}


function renderSearchResult(returnedData) {
    var status = returnedData.status;
    var candidateList = returnedData.candidateList;

    if (status == 3) {
        $('#searchErrorMsg').text("Looks like you have exhausted your search limit. Please contact your administrator.");
        $('#searchError').show();
        $('#candidateSearchResultTable').hide();
    } else {
        $('#searchError').hide();
        var returnedDataArray = [];

        try {
            candidateList.forEach(function(newCandidate) {
                // prep strings for display

                var timeShiftPref = "";
                var locality = "";
                if (newCandidate.timeShiftPreference != null) {
                    timeShiftPref = newCandidate.timeShiftPreference.timeShift.timeShiftName;
                }
                if (newCandidate.locality != null) {
                    locality = newCandidate.locality.localityName;
                }

                var verificationMap = getVerificationStatus(newCandidate);

                returnedDataArray.push({
                    'cLID': '<a href="/candidateSignupSupport/' + newCandidate.lead.leadId + '/false" target="_blank">' + newCandidate.lead.leadId + '</a>',
                    'candidateFirstName': getFirstName(newCandidate.candidateFirstName) + " " + getLastName(newCandidate.candidateLastName),
                    'candidateMobile': newCandidate.candidateMobile,
                    'candidateLastWithdrawnSalary': getLastWithdrawnSalary(newCandidate.candidateLastWithdrawnSalary),
                    'candidateJobPref': getJobPref(newCandidate.jobPreferencesList),
                    'candidateLocalityPref': getLocalityPref(newCandidate.localityPreferenceList),
                    'locality': getHomeLocality(newCandidate.locality),
                    'candidateLanguage': getLanguageKnown(newCandidate.languageKnownList),
                    'candidateEducation': getEducation(newCandidate.candidateEducation),
                    'candidateSkillList': getSkills(newCandidate.candidateSkillList),
                    'candidateTimeShiftPref': timeShiftPref,
                    'candidateExperience': getInYearMonthFormat(newCandidate.candidateTotalExperience),
                    'candidateIsAssessmentComplete': getYesNo(newCandidate.candidateIsAssessed),
                    'candidateGender': getGender(newCandidate.candidateGender),
                    'candidateIsEmployed': getYesNo(newCandidate.candidateIsEmployed),
                    'candidateCreateTimestamp': getDateTime(newCandidate.candidateCreateTimestamp),
                    'pastOrCurrentCompanyName': getPastOrCurrentCompanyName(newCandidate.jobHistoryList),
                    'isMinProfileComplete': getYesNo(newCandidate.isMinProfileComplete),
                    'followUp': getYesNo(newCandidate.lead.followUp),
                    'noOfJobApplication': newCandidate.jobApplicationList.length,
                    'experience': getExperience(newCandidate.candidateExpList),
                    'age': getAge(newCandidate.candidateDOB),
                    'candidateExperienceLetter': getYesNo(newCandidate.candidateExperienceLetter),
                    'isActive': getProperProfileStatus(newCandidate.candidateprofilestatus),
                    'candidateExpiry': getExpiry(newCandidate.candidateStatusDetail),
                    'candidateIdProofs': getIdProof(newCandidate.idProofReferenceList),
                    'candidateAadhaarNumber': getAadhaarNumber(newCandidate.idProofReferenceList),
                    'candidateNameVerified': verificationMap["Name"],
                    'candidatePhoneVerified': verificationMap["Phone"],
                    'candidateDOBVerified': verificationMap["DOB"],
                    'candidateGenderVerified': verificationMap["Gender"],
                    'candidateVerifyNow': '<input style="margin-left: 6px" type="button" value="Verify" onclick="verifyAadhaar(' + newCandidate.candidateMobile + ')">'
                })
            });

            $('#candidateSearchResultTable').show();

            var table = $('table#candidateSearchResultTable').DataTable({
                "data": returnedDataArray,
                "order": [
                    [15, "desc"]
                ],
                "scrollX": true,
                "columns": [{
                    "data": "cLID"
                }, {
                    "data": "candidateFirstName"
                }, {
                    "data": "candidateMobile"
                }, {
                    "data": "candidateJobPref"
                }, {
                    "data": "candidateLocalityPref"
                }, {
                    "data": "locality"
                }, {
                    "data": "candidateExperience"
                }, {
                    "data": "candidateIsEmployed"
                }, {
                    "data": "candidateLastWithdrawnSalary"
                }, {
                    "data": "candidateLanguage"
                }, {
                    "data": "candidateEducation"
                }, {
                    "data": "candidateSkillList"
                }, {
                    "data": "candidateGender"
                }, {
                    "data": "candidateIsAssessmentComplete"
                }, {
                    "data": "candidateTimeShiftPref"
                }, {
                    "data": "candidateCreateTimestamp"
                }, {
                    "data": "pastOrCurrentCompanyName"
                }, {
                    "data": "isMinProfileComplete"
                }, {
                    "data": "followUp"
                }, {
                    "data": "noOfJobApplication"
                }, {
                    "data": "experience"
                }, {
                    "data": "age"
                }, {
                    "data": "candidateExperienceLetter"
                }, {
                    "data": "isActive"
                }, {
                    "data": "candidateExpiry"
                }, {
                    "data": "candidateIdProofs"
                }, {
                    "data": "candidateAadhaarNumber"
                }, {
                    "data": "candidateNameVerified"
                }, {
                    "data": "candidatePhoneVerified"
                }, {
                    "data": "candidateDOBVerified"
                }, {
                    "data": "candidateGenderVerified"
                }, {
                    "data": "candidateVerifyNow"
                }],
                "deferRender": true,
                "scroller": true,
                "scrollY": '48vh',
                "scrollCollapse": true,
                "language": {
                    "emptyTable": "No data available"
                },
                "destroy": true,
                "dom": 'Bfrtip',
                "buttons": [
                    'copy', 'csv', 'excel'
                ]
            });

            // Apply the search filter
            table.columns().every(function() {
                var that = this;
                $('input', this.footer()).on('keyup change', function() {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });

            /* Initialise datatables */
            $.fn.dataTable.moment('dd/MM/YYYY HH:mm:ss');

            var oTable = $('#candidateSearchResultTable').dataTable();

            /* Add event listeners to the two range filtering inputs */
            $('#minExp').keyup(function() {
                oTable.fnDraw();
            });
            $('#maxExp').keyup(function() {
                oTable.fnDraw();
            });
            $('#minSal').keyup(function() {
                oTable.fnDraw();
            });
            $('#maxSal').keyup(function() {
                oTable.fnDraw();
            });
            $('#minJobApplication').keyup(function() {
                oTable.fnDraw();
            });
            $('#maxJobApplication').keyup(function() {
                oTable.fnDraw();
            });
            $('#minAge').keyup(function() {
                oTable.fnDraw();
            });
            $('#maxAge').keyup(function() {
                oTable.fnDraw();
            });

        } catch (exception) {
            console.log("exception occured!!" + exception);
        }
    }
    NProgress.done();
}

function searchForm() {
    var localityArray = [];
    var jobArray = [];

    var i;
    var searchJob = $('#candidateJobPref').val().split(",");
    var searchLocality = $('#candidateLocalityPref').val().split(",");

    for (i = 0; i < searchJob.length; i++) {
        if (searchJob[i] != '') {
            jobArray.push(searchJob[i]);
        }
    }

    for (i = 0; i < searchLocality.length; i++) {
        if (searchLocality[i] != '') {
            localityArray.push(searchLocality[i]);
        }
    }
    /* ajax commands to fetch all localities and jobs*/
    var d = {
        candidateFirstName: $('#candidateFirstName').val(),
        candidateMobile: $('#candidateMobile').val(),
        candidateLocality: localityArray,
        candidateJobInterest: jobArray,
        fromThisDate: $('#fromThisDate').val(),
        toThisDate: $('#toThisDate').val(),
        languageKnown: $('#languageMultiSelect').val(),
        idProofs: $('#idProofMultiSelect').val()
    };
    if (d.fromThisDate > d.toThisDate) {
        $.notify({
            title: "Invalid Date Input: ",
            message: "Selected Date Range is Incorrect. Please Select valid (from/to) Date",
            animate: {
                enter: 'animated lightSpeedIn',
                exit: 'animated lightSpeedOut'
            }
        }, {
            type: 'danger'
        });

        shouldAddFooter = false;
    } else {
        shouldAddFooter = true;
        NProgress.start();
        try {
            $.ajax({
                type: "POST",
                url: "/getSearchCandidateResult",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(d),
                success: renderSearchResult
            });
        } catch (exception) {
            console.log("exception occured!!" + exception);
        }
    }
}

/* Custom filtering function which will filter data in column */
$.fn.dataTableExt.afnFiltering.push(
    function(oSettings, aData, iDataIndex) {
        var iMinExp = document.getElementById('minExp').value * 1;
        var iMaxExp = document.getElementById('maxExp').value * 1;
        var iExpColumnVal = aData[6] == "-" ? 0 : aData[6] * 1;
        if (iMinExp == "" && iMaxExp == "") {
            return true;
        } else if (iMinExp == "" && iExpColumnVal <= iMaxExp) {
            return true;
        } else if (iMinExp <= iExpColumnVal && "" == iMaxExp) {
            return true;
        } else if (iMinExp <= iExpColumnVal && iExpColumnVal <= iMaxExp) {
            return true;
        }
        return false;
    },
    function(oSettings, aData, iDataIndex) {
        var iMinSalary = document.getElementById('minSal').value * 1;
        var iMaxSalary = document.getElementById('maxSal').value * 1;
        var iSalaryColumnVal = aData[8] == "-" ? 0 : aData[8] * 1;
        if (iMinSalary == "" && iMaxSalary == "") {
            return true;
        } else if (iMinSalary == "" && iSalaryColumnVal <= iMaxSalary) {
            return true;
        } else if (iMinSalary <= iSalaryColumnVal && "" == iMaxSalary) {
            return true;
        } else if (iMinSalary <= iSalaryColumnVal && iSalaryColumnVal <= iMaxSalary) {
            return true;
        }
        return false;
    },
    function(oSettings, aData, iDataIndex) {
        var iMinJobApp = $('#minJobApplication').val();
        var iMaxJobApp = $('#maxJobApplication').val();
        var iJobAppColumnVal = aData[19] == "-" ? 0 : aData[19] * 1;
        if (iMinJobApp == "" && iMaxJobApp == "") {
            return true;
        } else if (iMinJobApp == "" && iJobAppColumnVal <= iMaxJobApp) {
            return true;
        } else if (iMinJobApp <= iJobAppColumnVal && "" == iMaxJobApp) {
            return true;
        } else if (iMinJobApp <= iJobAppColumnVal && iJobAppColumnVal <= iMaxJobApp) {
            return true;
        }
    },
    function(oSettings, aData, iDataIndex) {
        var iMinAge = $('#minAge').val();
        var iMaxAge = $('#maxAge').val();
        var iAgeColumnVal = aData[21] == "-" ? 0 : aData[21] * 1;
        if (iMinAge == "" && iMaxAge == "") {
            return true;
        } else if (iMinAge == "" && iAgeColumnVal <= iMaxAge) {
            return true;
        } else if (iMinAge <= iAgeColumnVal && "" == iMaxAge) {
            return true;
        } else if (iMinAge <= iAgeColumnVal && iAgeColumnVal <= iMaxAge) {
            return true;
        }
    }
);

function processLanguage(returnLanguage) {
    if (returnLanguage != null) {
        var data = [];

        returnLanguage.forEach(function(language) {
            var opt = {
                label: language.languageName,
                value: parseInt(language.languageId)
            };
            data.push(opt);
        });

        var selectList = $('#languageMultiSelect');
        selectList.multiselect({
            includeSelectAllOption: true,
            maxHeight: 300
        });
        selectList.multiselect('dataprovider', data);
        selectList.multiselect('rebuild');
    }
}

function processIdProof(responseData) {
    if (responseData != null) {
        var data = [];

        responseData.forEach(function(idproof) {
            var opt = {
                label: idproof.idProofName,
                value: parseInt(idproof.idProofId)
            };
            data.push(opt);
        });

        var selectList = $('#idProofMultiSelect');
        selectList.multiselect({
            includeSelectAllOption: true,
            maxHeight: 300
        });
        selectList.multiselect('dataprovider', data);
        selectList.multiselect('rebuild');
    }
}

function getAadhaarNumber(idProofList) {
    var returnVal = "N/A"
    try {
        if (idProofList != null) {
            idProofList.forEach(function(idProofRef) {
                if (idProofRef.idProof.idProofId == 3) {
                    if (idProofRef.idProofNumber != 'undefined') {
                        returnVal = idProofRef.idProofNumber;
                    }
                }
            });
        }
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }
    return returnVal;
}

function getVerificationStatus(candidate) {

    var verificationList = candidate.candidateVerificationList;
    var resultMap = new Object();
    resultMap["Name"] = "N/A";
    resultMap["Phone"] = "N/A";
    resultMap["DOB"] = "N/A";
    resultMap["Gender"] = "N/A";

    if (verificationList != null && verificationList.length > 0) {

        verificationList.forEach(function(verificationResult) {
            if (verificationResult.ongridField.fieldId == 3) {
                resultMap["Name"] = verificationResult.ongridVerificationStatus.statusName;
            }
            if (verificationResult.ongridField.fieldId == 4) {
                resultMap["Phone"] = verificationResult.ongridVerificationStatus.statusName;
            }
            if (verificationResult.ongridField.fieldId == 5) {
                resultMap["DOB"] = verificationResult.ongridVerificationStatus.statusName;
            }
            if (verificationResult.ongridField.fieldId == 9) {
                resultMap["Gender"] = verificationResult.ongridVerificationStatus.statusName;
            }
        });
    }

    return resultMap;
}

function verifyAadhaar(candidateMobile) {
    NProgress.start();
    try {
        $.ajax({
            type: "POST",
            crossDomain: true,
            url: "/api/compute/verifyAadhar/" + candidateMobile,
            async: true,
            success: handleAadharVerificationResponse
        });
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }
}

function handleAadharVerificationResponse(response) {
    var msg = response.responseMessage;
    $.notify({
        title: "Verification response: ",
        message: msg + ". Refreshing search results",
        animate: {
            enter: 'animated lightSpeedIn',
            exit: 'animated lightSpeedOut'
        }
    }, {
        type: 'danger'
    });

    $("#searchBtn").trigger("click");

    NProgress.done();
}

$(function() {
    // create multiselect for languages
    try {
        $.ajax({
            type: "POST",
            url: "/getAllLanguage",
            data: false,
            async: false,
            contentType: false,
            processData: false,
            success: processLanguage
        });
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }

    // create multiselect for idproof
    try {
        $.ajax({
            type: "POST",
            url: "/getAllIdProof",
            data: false,
            async: false,
            contentType: false,
            processData: false,
            success: processIdProof
        });
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }

    /* ajax commands to fetch all localities and jobs*/
    NProgress.start();
    try {
        $.ajax({
            type: "POST",
            url: "/getAllLocality",
            data: false,
            contentType: false,
            processData: false,
            success: processDataCheckLocality
        });
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }

    try {
        $.ajax({
            type: "POST",
            url: "/getAllJobs",
            data: false,
            contentType: false,
            processData: false,
            success: processDataCheckJobs
        });
    } catch (exception) {
        console.log("exception occured!!" + exception);
    }


    $("#candidateSearchForm").submit(function(eventObj) {
        eventObj.preventDefault();
        searchForm();
        // Setup - add a text input to each footer cell
        if (shouldAddFooter) {
            $('#candidateSearchResultTable tfoot th').each(function() {
                var title = $(this).text();
                $(this).html('<input type="text" name="' + title + '"  id="' + title + '" placeholder="' + title + '" />');
            });
        }
    }); // end of submit


    $("#toThisDate").datepicker({
        dateFormat: 'yy-mm-dd',
        changeYear: true
    });
    $("#fromThisDate").datepicker({
        dateFormat: 'yy-mm-dd',
        changeYear: true
    });

});
>>>>>>> rmp-employee

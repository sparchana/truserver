<<<<<<< HEAD
function processTimeShift(e){if(null!=e){var t=[{label:"None Selected",value:-1}];e.forEach(function(e){var a={label:e.timeShiftName,value:parseInt(e.timeShiftId)};t.push(a)});var a=$("#candidateTimeShiftPref");a.multiselect({nonSelectedText:"None Selected",includeSelectAllOption:!0,maxHeight:300}),a.multiselect("dataprovider",t),a.multiselect("rebuild")}}function processEducation(e){if(null!=e){var t=[{label:"None Selected",value:-1}];e.forEach(function(e){var a={label:e.educationName,value:parseInt(e.educationId)};t.push(a)});var a=$("#candidateHighestEducation");a.multiselect({nonSelectedText:"None Selected",includeSelectAllOption:!0,maxHeight:300}),a.multiselect("dataprovider",t),a.multiselect("rebuild")}}function processDegree(e){if(null!=e){var t=[{label:"None Selected",value:-1}];e.forEach(function(e){var a={label:e.degreeName,value:parseInt(e.degreeId)};t.push(a)});var a=$("#candidateHighestDegree");a.multiselect({nonSelectedText:"None Selected",includeSelectAllOption:!0,maxHeight:300}),a.multiselect("dataprovider",t),a.multiselect("rebuild")}}function processLanguage(e){var t=[],a=[];e.forEach(function(e){void 0;var n=e.languageId,o=e.languageName,l={};l.id=n,l.name=o,t.push(o),a.push(n);$("<option value="+n+"></option>").text(o);langArray.push(l)}),populateLanguages(t.reverse(),a.reverse())}function populateLanguages(e,t){var a,n=document.getElementById("language_details");for(a=0;a<e.length;a++)if(1==t[a]||2==t[a]||3==t[a]||4==t[a]||5==t[a]){var o=document.createElement("div");o.className="col-xs-12 col-sm-3",o.style="padding-top:8px",n.appendChild(o);var l=document.createElement("div");l.className="col-xs-12 col-sm-3",n.appendChild(l);var d=document.createElement("div");d.className="col-xs-12 col-sm-3",n.appendChild(d);var r=document.createElement("div");r.className="col-xs-12 col-sm-3",n.appendChild(r);var i=document.createElement("font");i.style="font-size:16px;font-weight:bold",o.appendChild(i);var c=document.createElement("div");l.appendChild(c);var s=document.createElement("div");d.appendChild(s);var p=document.createElement("div");r.appendChild(p),i.innerHTML='<span style="margin-top:8px">'+e[a]+"</span>",c.innerHTML='<div class="btn-group" style="margin:6px 0px" data-toggle="buttons"><label class="btn btn-custom-check"><input id='+t[a]+' type="checkbox" name="u" value=0 >Understand</label></div>',s.innerHTML='<div class="btn-group" style="margin:6px 0px" data-toggle="buttons"><label class="btn btn-custom-check"><input id='+t[a]+' type="checkbox" name="s" value=0 >Speak</label></div>',p.innerHTML='<div class="btn-group" style="margin:6px 0px"  data-toggle="buttons"><label class="btn btn-custom-check"><input id='+t[a]+' type="checkbox" name="rw" value=0 >Read/Write</label></div>'}}function processDataGetAssets(e){var t=$("#assets_details");e.forEach(function(e){void 0;var a=document.createElement("div");a.className="col-xs-12 col-sm-3 col-md-3",t.append(a);var n=document.createElement("label");n.type="checkbox",n.for="assetsCheckbox_"+e.assetTitle,n.style="margin:4px 10px",a.appendChild(n);var o=document.createElement("input");o.type="checkbox",o.id="assetsCheckboxId_"+e.assetId;var l=document.createElement("font");l.textContent=e.assetTitle,l.style="margin:8% 4%",a.appendChild(l),n.appendChild(o)})}function processIdProofsWithNumbers(e){if(null!=e){var t=$("#document_details");e.forEach(function(e){void 0;var a=document.createElement("div");a.className="col-sm-6 col-md-4",a.id="document_response_checkbox",t.append(a);var n=document.createElement("div");n.className="row",n.id="document_response_checkbox",n.style="padding:2% 0",a.appendChild(n);var o=document.createElement("div");o.className="row",o.id="document_response_input_"+e.idProofId,o.style="padding:2% 2%;display:none;",a.appendChild(o);var l=document.createElement("label");l.type="checkbox",l.for="idProofCheckbox_"+e.idProofId,l.style="margin:4px 10px",n.appendChild(l);var d=document.createElement("input");d.type="checkbox",d.id="idProofCheckbox_"+e.idProofId,d.onclick=function(){1==$("#idProofCheckbox_"+e.idProofId).prop("checked")?$("#document_response_input_"+e.idProofId).css("display","block"):($("#document_response_input_"+e.idProofId).css("display","none"),$("#Invalid_"+e.idProofId).css("display","none"))},l.appendChild(d);var r=document.createElement("font");r.textContent=e.idProofName,r.style="margin:8% 4%",n.appendChild(r);var i=document.createElement("p");i.id="Invalid_"+e.idProofId,i.textContent="(Invalid Number)",i.style="color:#ff1744;display:none;margin:1px 0 1px 42px;font-size:12px",n.appendChild(i);var c=document.createElement("p");c.id="idProofValueTd_"+e.idProofId,o.appendChild(c);var s=document.createElement("INPUT");s.className="form-control",s.setAttribute("type","text"),s.oninput=validateInput,s.placeholder=e.idProofName+" Number",s.setAttribute("id","idProofValue_"+e.idProofId),c.appendChild(s)})}}function validateInput(e,t){return null!=e&&null!=t||(e=this.id.split("_")[1],t=this.value),!$("input#idProofCheckbox_"+e).is(":checked")||(3==e?validateAadhar(t)?($("#Invalid_"+e).css("display","none"),!0):($("#Invalid_"+e).css("display","block"),!1):1==e?validateDL(t)?($("#Invalid_"+e).css("display","none"),!0):($("#Invalid_"+e).css("display","block"),!1):2==e?validatePASSPORT(t)?($("#Invalid_"+e).css("display","none"),!0):($("#Invalid_"+e).css("display","block"),!1):4!=e||(validatePAN(t)?($("#Invalid_"+e).css("display","none"),!0):($("#Invalid_"+e).css("display","block"),!1)))}function processAllJobRole(e,t){var a=[];null!=e&&0==jobRoleArray.length&&e.forEach(function(e){var t=e.jobName,n=parseInt(e.jobRoleId),o={};o.id=n,o.name=t,jobRoleArray.push(o),a.push(o)}),null!=jobRoleArray&&jobRoleArray.length>0&&$("#workedJobRole_"+t).tokenInput(jobRoleArray,{theme:"facebook",placeholder:"Job Role?",hintText:"Select job role",minChars:0,tokenLimit:1,zindex:9999,preventDuplicates:!0})}function getJobRoleArray(){return jobRoleArray}function processLocality(e){var t=[];null!=e&&(e.forEach(function(e){var a=e.localityId,n=e.localityName,o={};o.id=a,o.name=n,localityArray.push(o),t.push(o)}),null!=localityArray&&$("#candidateHomeLocality").tokenInput(getLocalityArray(),{theme:"facebook",placeholder:"job Localities?",hintText:"Start typing Area (eg. BTM Layout, Bellandur..)",minChars:0,tokenLimit:1,zindex:9999,preventDuplicates:!0}))}function getLocalityArray(){return localityArray}function openCandidatePreScreenModal(e,t){if(null!=t){var a="/support/api/getJobPostVsCandidate/";if(t=t.substring(3),null==a||null==e)return;if(a+="?",null!=e&&(a+="jobPostId="+e),null!=t&&(a+="&candidateMobile="+t),a+="&rePreScreen="+!0,1==modalOpenAttempt&&shouldShowPSModal&&$("#preScreenModal").modal(),0==modalOpenAttempt){modalOpenAttempt=1;try{$.ajax({type:"POST",url:"/getJobPostInfo/"+e+"/0",data:!1,contentType:!1,processData:!1,async:!1,success:processDataForJobPostLocationPrescreen})}catch(e){void 0}try{$.ajax({type:"GET",url:a,data:!1,async:!1,contentType:!1,processData:!1,success:processPreScreenData})}catch(e){void 0}}}}function processDataForJobPostLocationPrescreen(e){jobPostInfo=e,$("#ps_jobNameConfirmation").html(e.jobPostTitle),$("#ps_companyNameConfirmation").html(e.company.companyName)}function processPreScreenData(e){if(null==e||"SUCCESS"!=e.status)return null!=e&&"INVALID"==e.status?$.notify("Already Pre Screened","error"):$.notify("Request failed. Something went Wrong! Please Refresh","error"),void(shouldShowPSModal=!1);if(null==e.elementList||0==e.elementList.length){shouldShowPSModal=!1,$("#preScreenModal").modal("hide");var t=!0;return nfy("Interview Submitted successfully. ","success"),null!=jobPostInfo.recruiterProfile?(jobPostInfo.recruiterProfile.contactCreditCount>0&&(t=!0),jobPostInfo.recruiterProfile.interviewCreditCount>0&&(t=!1)):t=!1,t&&($("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on "+jobPostInfo.recruiterProfile.recruiterProfileMobile),$("#confirmationModal").modal("show")),void $.notify("Job Application Successfully Completed ","success")}if(!e.visible)return shouldShowPSModal=!1,void 0,$.notify("Job Application Successfully Completed ","success"),$("#preScreenModal").modal("hide"),void(e.interviewRequired?initInterviewModal(e.candidateId,e.jobPostId,!1):($("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on "+jobPostInfo.recruiterProfile.recruiterProfileMobile),$("#confirmationModal").modal("show")));void 0,$("html").removeClass("modal-open").addClass("modal-open"),$.notify("Please complete Job Application form","success");var a=$("#missingInfo"),n=document.createElement("div");n.className="row",a.append(n);var o=document.createElement("div");o.className="col-sm-12",o.setAttribute("data-toggle","collapse"),o.setAttribute("href","#jobDetailsInfoFillCol"),n.appendChild(o);var l=document.createElement("p");l.textContent="Please provide following details to apply for this job",l.id="panelHeader",l.onclick=function(){1==$("#jobDetailsInfoFillCol").hasClass("in")?$("#collapseIcon").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down"):$("#collapseIcon").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up")},o.appendChild(l);var d=document.createElement("span");d.className="glyphicon glyphicon-chevron-up pull-right",d.id="collapseIcon",d.setAttribute("aria-hidden",!0),l.appendChild(d);var r=document.createElement("div");r.style="padding:0 4%",r.id="jobDetailsInfoFillCol",r.className="col-sm-12 panel-collapse collapse in",n.appendChild(r);var i=document.createElement("ol");if(i.className="list-group",r.appendChild(i),propertyIdArray=[],null!=e){var c=e.elementList;candidateId=e.candidateId,jpId=e.jobPostId,c.forEach(function(e){var t,a,n,o="POST";if(null!=e){if(0==e.propertyId&&0==e.isMatching){propertyIdArray.push(e.propertyId);var l=[],d=e.jobPostElementList;d.forEach(function(e){l.push(e.object)});var r=document.createElement("li");r.textContent="Do you have the following document(s) ?",r.style="color:#09ac58",r.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var s=document.createElement("div");s.className="col-sm-12 col-md-12",s.id="document_details",s.style="padding:2%",c.appendChild(s),r.appendChild(c),n=l,t=null,a=function(){processIdProofsWithNumbers(n)},i.appendChild(r)}else if(1==e.propertyId&&0==e.isMatching){propertyIdArray.push(e.propertyId);var p=[],d=e.jobPostElementList;d.forEach(function(e){p.push(e.object)});var m=document.createElement("li");m.textContent="Do you know following language(s) ?",m.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var u=document.createElement("div");u.className="col-sm-12",u.id="language_details",u.style="padding:1%;",c.appendChild(u),m.appendChild(c),n=p,t=null,a=function(){processLanguage(n)},i.appendChild(m)}else if(2==e.propertyId&&0==e.isMatching){propertyIdArray.push(e.propertyId);var h=[],d=e.jobPostElementList;d.forEach(function(e){h.push(e.object)});var r=document.createElement("li");r.textContent="Do you own any of the following ?",r.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var v=document.createElement("div");v.className="col-md-12",v.id="assets_details",v.style="padding:2% 0",n=h,t=null,a=function(){processDataGetAssets(n)},c.appendChild(v),r.appendChild(c),i.appendChild(r)}else if(3==e.propertyId&&0==e.isMatching&&null==e.candidateElement){propertyIdArray.push(e.propertyId);var y=document.createElement("li");y.textContent="Please mention your date of birth",y.id="property_"+e.propertyId,i.appendChild(y);var c=document.createElement("div");c.className="row";var f=document.createElement("div");f.className="col-xs-12 col-sm-5",f.style="padding:2% 3%",c.appendChild(f);var C=document.createElement("div");C.className="col-xs-12 col-sm-6",C.style="padding:1%",c.appendChild(C);var g=document.createElement("font");g.textContent="Date of birth",g.style="font-weight:bold",f.appendChild(g);var b=document.createElement("select");b.className="selectDropDown",b.id="dob_day",b.style="margin:0 1%",C.appendChild(b);var E=document.createElement("option");E.textContent="Day",b.appendChild(E);var x;for(x=1;x<=31;x++){var I=document.createElement("option");I.value=("0"+x).slice(-2),I.textContent=x,b.appendChild(I)}var N=document.createElement("select");N.className="selectDropDown",N.id="dob_month",N.style="margin:0 1%",C.appendChild(N);var k=document.createElement("option");for(k.textContent="Month",N.appendChild(k),x=1;x<=12;x++){I=document.createElement("option"),I.value=("0"+x).slice(-2);var w;switch(x){case 1:w="January";break;case 2:w="February";break;case 3:w="March";break;case 4:w="April";break;case 5:w="May";break;case 6:w="June";break;case 7:w="July";break;case 8:w="August";break;case 9:w="September";break;case 10:w="October";break;case 11:w="November";break;case 12:w="December"}I.textContent=w,N.appendChild(I)}var S=document.createElement("select");S.className="selectDropDown",S.id="dob_year",S.style="margin:0 1%",C.appendChild(S);var _=document.createElement("option");for(_.textContent="Year",S.appendChild(_),x=(new Date).getFullYear()-19;x>=(new Date).getFullYear()-80;x--)I=document.createElement("option"),I.value=x,I.textContent=x,S.appendChild(I);y.appendChild(c),i.appendChild(y)}else if(4==e.propertyId&&0==e.isMatching&&null==e.candidateElement&&null==e.candidateElementList){propertyIdArray.push(e.propertyId);var P=document.createElement("li");P.textContent="Do you have work experience?",P.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var A=document.createElement("div");A.className="row",A.style="display: none;",A.id="companyDetailsCapture";var D=document.createElement("p");D.textContent="Where all have you worked before? ",D.style="margin-left:10px",A.appendChild(D);var j=document.createElement("div");j.className="row",j.id="row_1",j.style="margin:4px 0",A.appendChild(j);var M=document.createElement("div");M.className="col-sm-3",M.id="companyName",j.appendChild(M);var L=document.createElement("div");L.className="col-sm-3",L.id="workedJobRole",j.appendChild(L);var T=document.createElement("div");T.className="col-sm-4",T.id="workedCurrently",T.style="padding-top:1%;text-align:center",j.appendChild(T);var W=document.createElement("div");W.className="col-sm-2",j.appendChild(W);var R=document.createElement("input");R.className="form-control",R.type="text",R.placeholder="Company Name",R.id="companyName_1",R.onchange=enableAddBtn,M.appendChild(R);var J=document.createElement("input");J.id="workedJobRole_1",J.onchange=enableAddBtn,L.appendChild(J);var H=document.createElement("input");H.type="radio",H.style="margin:0 4%;",H.id="addCurrentlyWorking_1",H.name="addCurrently_Working",H.setAttribute("disabled",!0),H.value=0,T.appendChild(H);var B=document.createElement("button");B.className="form-control",B.type="button",B.setAttribute("disabled",!0),B.id="addCurrentlyWorkingBtn_1",B.value="Add",B.name="Add",B.style="background:#09ac58;color:#fff;font-size:12px",B.textContent="Add Company",B.onclick=addmoreCompany,W.appendChild(B),H.type="radio",H.style="margin:0 4%",H.id="addCurrentlyWorking_"+companyCount,H.name="addCurrently_Working",T.appendChild(H);var F=document.createElement("label");F.textContent="Is this your current company",F.for="addCurrentlyWorking_1",T.appendChild(F),t="/getAllJobs ",a=function(e){processAllJobRole(e,1),t=""};var O=document.createElement("div");O.className="col-xs-12 col-md-12",O.style="padding:2% 0;",c.appendChild(O);var Y=document.createElement("div");Y.className="col-xs-12 col-sm-5",Y.id="experienceQuestion",Y.style="padding:2% 3%;display:none",c.appendChild(Y);var Q=document.createElement("p");Q.textContent="How many year(s) of work experience do you have?",Y.appendChild(Q);var V=document.createElement("div");V.className="col-xs-12 col-md-6",V.id="experienceDuration",V.style="display:none;padding:1%",c.appendChild(V);var z=document.createElement("div");z.className="col-xs-12 col-sm-3 ",O.appendChild(z);var U=document.createElement("div");U.className="col-xs-12 col-sm-4",O.appendChild(U);var G=document.createElement("input");G.type="radio",G.id="candidateFresh",G.name="candidateExperience",G.value=0,G.onchange=hideExperienceCaptureDiv,z.appendChild(G);var q=document.createElement("label");q.textContent="I'm a fresher",q.for="candidateFresh",z.appendChild(q);var K=document.createElement("input");K.type="radio",K.id="candidateExp",K.name="candidateExperience",K.value=1,K.onchange=showExperienceCaptureDiv,U.appendChild(K);var X=document.createElement("label");X.textContent="I have work experience",X.for="candidateExp",U.appendChild(X);var Z=document.createElement("input");Z.className="form-control",Z.type="number",Z.value=0,Z.oninput=showExperienceBox,Z.id="candidateTotalExperienceYear",V.appendChild(Z);var ee=document.createElement("font");ee.textContent="Years",ee.style="font-weight:bold",V.appendChild(ee);var te=document.createElement("input");te.className="form-control",te.type="number",te.value=0,te.id="candidateTotalExperienceMonth",te.oninput=showExperienceBox,V.appendChild(te);var ae=document.createElement("font");ae.textContent="Months",ae.style="font-weight:bold",V.appendChild(ae);var ne=document.createElement("div");ne.className="col-xs-12 col-md-10",ne.id="experienceCurrently",ne.style="padding:2% 3%;display:none",c.appendChild(ne);var oe=document.createElement("p");oe.textContent="Are you currently working : ",ne.appendChild(oe);var le=document.createElement("input");le.id="currentlyWorking",le.type="checkbox",le.style="margin:0 2% 0 4%",le.onclick=disableCurrentCompanyOption,oe.appendChild(le);var de=document.createElement("label");de.textContent="Yes",de.for="currentlyWorking",oe.appendChild(de),P.appendChild(c),P.appendChild(A),i.appendChild(P)}else if(5==e.propertyId&&0==e.isMatching&&null==e.candidateElement&&null==e.candidateElementList){propertyIdArray.push(e.propertyId);var re=document.createElement("li");re.textContent="Please provide your education details",re.id="property_"+e.propertyId;var ie=document.createElement("div");ie.className="row",re.appendChild(ie);var ce=document.createElement("div");ce.className="row",re.appendChild(ce);var se=document.createElement("div");se.className="row",re.appendChild(se);var pe=document.createElement("div");pe.className="row",re.appendChild(pe);var me=document.createElement("div");me.className="col-xs-12 col-sm-5",me.id="education_details",ie.appendChild(me);var ue=document.createElement("div");ue.className="col-xs-12 col-sm-6",ue.id="education_details",ue.style="padding:1%",ie.appendChild(ue);var he=document.createElement("font");he.textContent="Highest education qualification? ",he.style="font-weight:bold;",me.appendChild(he);var ve=document.createElement("select");ve.id="candidateHighestEducation",ue.appendChild(ve);var ye=document.createElement("div");ye.className="col-xs-12 col-sm-5",ye.id="education_details",ce.appendChild(ye);var fe=document.createElement("div");fe.className="col-xs-12 col-sm-6",fe.id="education_details",fe.style="padding-top:3%",ce.appendChild(fe);var Ce=document.createElement("font");Ce.textContent="Have you successfully completed this course? ",Ce.style="font-weight:bold;",ye.appendChild(Ce);var ge=document.createElement("input");ge.type="radio",ge.style="margin:0 4% 0 0",ge.id="successYes",ge.name="candidateEducationCompletionStatus",ge.value=1,fe.appendChild(ge);var be=document.createElement("label");be.textContent="Yes",be.for="successConformationHEQ",fe.appendChild(be);var Ee=document.createElement("input");Ee.type="radio",Ee.style="margin:0 4% 0 8%",Ee.id="successNo",Ee.name="candidateEducationCompletionStatus",Ee.value=0,fe.appendChild(Ee);var xe=document.createElement("label");xe.textContent="No",xe.for="successConformationHEQ",fe.appendChild(xe);var Ie=document.createElement("div");Ie.className="col-xs-12 col-sm-5",Ie.id="education_details",se.appendChild(Ie);var $e=document.createElement("div");$e.className="col-xs-12 col-sm-6",$e.id="education_details",$e.style="padding:1%",se.appendChild($e);var Ne=document.createElement("font");Ne.textContent="Highest education degree? ",Ne.style="font-weight:bold;",Ie.appendChild(Ne);var ke=document.createElement("select");ke.id="candidateHighestDegree",$e.appendChild(ke);var we=document.createElement("div");we.className="col-xs-12 col-sm-5",we.style="padding:2% 3%",pe.appendChild(we);var Se=document.createElement("div");Se.className="col-xs-12 col-sm-6",Se.style="padding:1%",pe.appendChild(Se);var _e=document.createElement("font");_e.textContent="Last attended education institute?",_e.style="margin-top:8px;font-weight:bold",we.appendChild(_e);var Pe=document.createElement("input");Pe.className="form-control",Pe.type="text",Pe.placeholder="School/Institute Name",Pe.id="candidateEducationInstitute",Se.appendChild(Pe),t="/getAllEducation",a=function(e){processEducation(e),t=""},i.appendChild(re)}else if(6==e.propertyId&&0==e.isMatching&&null==e.candidateElement){propertyIdArray.push(e.propertyId);var Ae=document.createElement("li");Ae.textContent="Please mention your gender ",Ae.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var De=document.createElement("div");De.className="col-sm-12 col-md-12",De.id="gender_details",De.style="padding:2% 0;";var je=document.createElement("div");je.className="col-xs-12 col-sm-3",De.appendChild(je);var Me=document.createElement("div");Me.className="col-xs-12 col-sm-3",De.appendChild(Me);var Le=document.createElement("label");Le.textContent="Male",Le.for="genderMale";var Te=document.createElement("input");Te.type="radio",Te.style="margin:0 8%",Te.id="genderMale",Te.name="gender",Te.value=0;var We=document.createElement("label");We.textContent="Female",We.for="genderFemale";var Re=document.createElement("input");Re.type="radio",Re.style="margin:0 8%",Re.id="genderFemale",Re.name="gender",Re.value=1,je.appendChild(Te),je.appendChild(Le),Me.appendChild(Re),Me.appendChild(We),c.appendChild(De),Ae.appendChild(c),i.appendChild(Ae)}else if(7==e.propertyId&&0==e.isMatching&&null==e.candidateElement){propertyIdArray.push(e.propertyId);var Je=document.createElement("li");Je.textContent="Please provide your salary details",Je.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var He=document.createElement("div");He.className="col-xs-12 col-sm-5",He.id="salary_details";var Be=document.createElement("div");Be.className="col-xs-12 col-sm-6",Be.id="salary_response",Be.style="padding:1%";var Fe=document.createElement("font");Fe.textContent="Current/last drawn salary",Fe.style="margin-top:8px;font-weight:bold",He.appendChild(Fe);var Oe=document.createElement("input");Oe.className="form-control",Oe.type="number",Oe.placeholder="Salary",Oe.id="candidateLastWithdrawnSalary",Oe.oninput=invalidSalary,Be.appendChild(Oe);var Ye=document.createElement("p");Ye.id="invalidSalaryNotification",Ye.textContent="Invalid Salary Input Please enter a valid 'Last Withdrawn Salary' (Ex: 15000) in a month",Ye.style="color:#ff1744;display:none;margin:1px 0 1px 2px;font-size:12px",Be.appendChild(Ye);var Qe=document.createElement("span");Qe.className="label label-success",Qe.textContent="(InHand/Month)",Qe.style="margin:8px 16px;font-size:12px",He.appendChild(Qe),c.appendChild(He),c.appendChild(Be),Je.appendChild(c),i.appendChild(Je)}else if(8==e.propertyId&&0==e.isMatching&&null==e.candidateElementList){propertyIdArray.push(e.propertyId);var Ve=document.createElement("li");Ve.textContent="Which is your home locality? ",Ve.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var ze=document.createElement("div");ze.className="col-sm-12 col-md-12",ze.id="locality_details",ze.style="padding:2%";var Ue=document.createElement("p");Ue.textContent="Locality",Ue.style="margin-left:18px;font-weight:bold";var Ge=document.createElement("input");Ge.id="candidateHomeLocality",Ve.appendChild(Ge),t="/getAllLocality",a=function(e){processLocality(e),t=""},Ue.appendChild(Ge),ze.appendChild(Ue),c.appendChild(ze),Ve.appendChild(c),i.appendChild(Ve)}else if(9==e.propertyId&&0==e.isMatching&&null==e.candidateElement){propertyIdArray.push(e.propertyId);var qe=document.createElement("li");qe.textContent="Time shift preferred",qe.id="property_"+e.propertyId;var c=document.createElement("div");c.className="row";var Ke=document.createElement("div");Ke.className="col-xs-12 col-sm-5",Ke.style="padding:2% 3%",c.appendChild(Ke);var Xe=document.createElement("div");Xe.className="col-xs-12 col-sm-6",Xe.style="padding:1%",c.appendChild(Xe);var Ze=document.createElement("font");Ze.textContent="Time shift",Ze.style="font-weight:bold",Ke.appendChild(Ze);var et=document.createElement("select");et.id="candidateTimeShiftPref",Xe.appendChild(et),t="/getAllShift",a=function(e){processTimeShift(e)},qe.appendChild(c),i.appendChild(qe)}if(null!=t)try{$.ajax({type:o,url:t,data:!1,async:!1,contentType:!1,processData:!1,success:a})}catch(e){void 0}else void 0,"function"==typeof a&&(a(),a=null);if(5==e.propertyId)try{$.ajax({type:"POST",url:"/getAllDegree",data:!1,contentType:!1,processData:!1,success:processDegree})}catch(e){void 0}}}),$("#preScreenModal").modal()}}function interviewButtonCondition(e){if(null!=e){var t="/support/api/shouldShowInterview/";if(null==t||null==e)return;t+="?",null!=e&&(t+="jobPostId="+e);try{$.ajax({type:"GET",url:t,data:!1,content:!1,processData:!1,success:function(t){processInterviewBtn(t,e)}})}catch(e){void 0}}}function disableCurrentCompanyOption(){if($("#currentlyWorking").is(":checked")){if($("#currentlyWorking").is(":checked"))for(var e=document.getElementsByName("addCurrently_Working"),t=0;t<e.length;t++)e[t].disabled=!1}else for(var e=document.getElementsByName("addCurrently_Working"),t=0;t<e.length;t++)e[t].disabled=!0,e[t].checked=!1}function enableAddBtn(){var e=this.id.split("_")[1];""==$("#companyName_"+e).val()||""==$("#workedJobRole_"+e).val()?$("#addCurrentlyWorkingBtn_"+e).prop("disabled",!0):$("#addCurrentlyWorkingBtn_"+e).prop("disabled",!1)}function addmoreCompany(){var e,t;if(0!=companyCount&&companyCount<=2){companyCount++;var a=document.createElement("div");a.className="row",a.id="row_"+companyCount,a.style="margin:4px 0";var n=document.createElement("div");n.className="col-sm-3",n.id="companyName",a.appendChild(n);var o=document.createElement("div");o.className="col-sm-3",o.id="workedJobRole",a.appendChild(o);var l=document.createElement("div");l.className="col-sm-4",l.id="workedCurrently",l.style="padding-top:1%;text-align:center",a.appendChild(l);var d=document.createElement("div");d.className="col-sm-2",a.appendChild(d);var r=document.createElement("input");r.className="form-control",r.type="text",r.placeholder="Company Name",r.id="companyName_"+companyCount,n.appendChild(r);var i=document.createElement("input");i.id="workedJobRole_"+companyCount,i.onchange=enableAddBtn,o.appendChild(i);var c=document.createElement("input");$("#currentlyWorking").is(":checked")?c.disabled=!1:c.disabled=!0;var s=document.createElement("button");s.className="form-control",s.type="button",s.setAttribute("disabled",!0),s.id="addCurrentlyWorkingBtn_"+companyCount,s.value="Add",s.style="background:#09ac58;color:#fff;font-size:12px",s.name="Add",s.textContent="Add Company",s.onclick=addmoreCompany,d.appendChild(s),c.type="radio",c.style="margin:0 4%",c.id="addCurrentlyWorking_"+companyCount,c.name="addCurrently_Working",l.appendChild(c);var p=document.createElement("label");p.textContent="Is this your current company",p.for="addCurrentlyWorking_"+companyCount,l.appendChild(p);var m=companyCount-1;$("#companyDetailsCapture").append(a),$("#addCurrentlyWorkingBtn_"+m).prop("disabled",!0),e="/getAllJobs ",t=function(t){processAllJobRole(t,companyCount),e=""}}else $.notify("Max 3 Addition Allowed","error");if(null!=e)if(null==jobRoleArray||0==jobRoleArray.length)try{$.ajax({type:"POST",url:e,data:!1,async:!1,contentType:!1,processData:!1,success:t})}catch(e){void 0}else t(null)}function hideExperienceCaptureDiv(){$("#candidateFresh").is(":checked")&&($("#experienceDuration").css("display","none"),$("#experienceQuestion").css("display","none"),$("#experienceCurrently").css("display","none"),$("#companyDetailsCapture").hide())}function showExperienceCaptureDiv(){$("#candidateExp").is(":checked")&&($("#experienceDuration").css("display","block"),$("#experienceQuestion").css("display","block"))}function showExperienceBox(){var e=$("#candidateTotalExperienceYear").val(),t=$("#candidateTotalExperienceMonth").val();!isNaN(e)&&parseInt(e)>0||!isNaN(t)&&parseInt(t)>0?($("#companyDetailsCapture").css("display","block"),$("#experienceCurrently").css("display","block")):($("#companyDetailsCapture").css("display","none"),$("#experienceCurrently").css("display","none"))}function invalidSalary(){var e=$("#candidateLastWithdrawnSalary").val();!isNaN(e)&&parseInt(e)>=1e3&&parseInt(e)<=99e3?$("#invalidSalaryNotification").css("display","none"):$("#invalidSalaryNotification").css("display","block")}function processInterviewBtn(e,t){null!=e&&(e.status==INTERVIEW_REQUIRED?$("#preScreenInterviewSetBtn").html("Schedule Interview"):$("#preScreenInterviewSetBtn").html("Apply"))}function submitPreScreen(){}var langArray=[],currentLocationArray=[],localityArray=[],jobRoleArray=[],propertyIdArray=[],candidateId,jpId,jobPostInfo,shouldShowPSModal=!0,modalOpenAttempt=0,companyCount=1;!function(){$("#preScreenInterviewSetBtn").click(function(){var e,t,a=!0,n=[],o=[],l={};$.each(propertyIdArray,function(d,r){if(a=!0,0==r){var i=[];$("#document_details").each(function(){$(this).find("input[type=checkbox]").each(function(){var e,o={};e=$(this).attr("id").split("_").slice(-1).pop();var l=$("input#idProofCheckbox_"+e).is(":checked"),d=validateInput(e,$("input#idProofValue_"+e).val().trim());if(d&&l?(o.idProofId=parseInt(e),o.idNumber=$("input#idProofValue_"+e).val().trim()):l&&!d&&(a=!1,$.notify("Please provide valid document details.","error")),jQuery.isEmptyObject(o)||i.push(o),!a){var c={propId:r,message:t,submissionStatus:a};n.push(c)}})}),l.idProofWithIdNumberList=i}else if(1==r){var c,s=[];$("#language_details input:checked").map(function(){c=0;var e,t=this.id,a=this.name,n={};for(var o in s)if(s[o].id==t){e=o,c=1;break}0==c?(n.id=t,n.u=0,n.rw=0,n.s=0,"u"==a?n.u=1:"rw"==a?n.rw=1:n.s=1,s.push(n)):"u"==a?s[e].u=1:"rw"==a?s[e].rw=1:s[e].s=1}).get();if(l.candidateKnownLanguageList=s,!a){var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(2==r){var m=[];if($("#assets_details input:checked").each(function(){var e=parseInt($(this).attr("id").split("_").slice(-1).pop());m.push(e)}),l.assetIdList=m,!a){var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(3==r){if("Day"==$("#dob_day").val()||"Month"==$("#dob_month").val()||"Year"==$("#dob_year").val())a=!1;else var u=$("#dob_year").val()+"-"+$("#dob_month").val()+"-"+$("#dob_day").val();""==u&&(a=!1);var h=String(u),v=new Date(h),y=new Date,f=new Date(y.setFullYear(y.getFullYear()-18));y=new Date;var C=new Date(y.setFullYear(y.getFullYear()-70));if(y=new Date,v>=f&&(e=0,a=!1),v<=C&&(e=0,a=!1),l.candidateDob=h,!a){$.notify("Please provide valid Date of birth","error");var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(4==r){0==$('input:radio[name="candidateExperience"]:checked').length&&(a=!1,$.notify("Please select Fresher/Experienced.","error"));var g=parseInt($("#candidateTotalExperienceMonth").val()),b=parseInt($("#candidateTotalExperienceYear").val()),E=g+12*b,x=0==$("#candidateTotalExperienceMonth").val()&&0==$("#candidateTotalExperienceYear").val();$("input[id=candidateExp]").is(":checked")&&x&&($.notify("Please provide your total years of experience","error"),
a=!1),$("input[id=candidateExp]").is(":checked")&&$("#currentlyWorking").is(":checked")&&!$("input[name=addCurrently_Working]").is(":checked")&&($.notify("Please provide your current company details and mark appropriately.","error"),a=!1);var I=1;for(o=[],I;I<=3;I++){var N={};""==$("#companyName_"+I).val()&&$("#workedJobRole_"+I).val()>0&&(t="please provide company name",$.notify("please provide company name","error"),a=!1),""!=$("#companyName_"+I).val()&&$("#workedJobRole_"+I).val()<0&&(t+=" | please provide Job Role",$.notify("please provide Job Role","error"),a=!1),""!=$("#companyName_"+I).val()&&$("#workedJobRole_"+I).val()>0&&(N.companyName=$("#companyName_"+I).val(),N.jobRoleId=$("#workedJobRole_"+I).val(),N.current=$("#addCurrentlyWorking_"+I).is(":checked")),jQuery.isEmptyObject(N)||o.push(N)}if(l.candidateTotalExperience=E,l.pastCompanyList=o,l.candidateIsEmployed=$("#currentlyWorking").is(":checked"),l.extraDetailAvailable=!0,!a){var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(5==r){if(l.candidateEducationLevel=$("#candidateHighestEducation").val(),l.candidateDegree=$("#candidateHighestDegree").val(),l.candidateEducationInstitute=$("#candidateEducationInstitute").val(),l.candidateEducationCompletionStatus=parseInt($('input:radio[name="candidateEducationCompletionStatus"]:checked').val()),("-1"==$("#candidateHighestEducation").val()||$("#candidateHighestEducation").val()>3||null==$('input:radio[name="candidateEducationCompletionStatus"]:checked').val())&&("-1"!=$("#candidateHighestDegree").val()&&""!=$("#candidateEducationInstitute").val()||(a=!1,$.notify("Please provide full education details","error"))),!a){var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(6==r){if(l.candidateGender=$('input:radio[name="gender"]:checked').val(),0==$('input:radio[name="gender"]:checked').length&&(a=!1,$.notify("Please provide your gender details","error")),!a){var p={propId:r,message:t,submissionStatus:a};n.push(p)}}else if(7==r){var k=$("#candidateLastWithdrawnSalary").val();if(!isNaN(k)&&parseInt(k)>=1e3&&parseInt(k)<=1e5)l.candidateLastWithdrawnSalary=parseInt($("#candidateLastWithdrawnSalary").val());else if(a=!1,$.notify("Please enter a valid 'Last Withdrawn Salary' per month. (Min: 1000, Max: 1,00,000)","error"),!a){var p={propId:r,message:"Please enter a valid 'Last Withdrawn Salary' per month. (Min: 1000, Max: 1,00,000)",submissionStatus:a};n.push(p)}}else if(8==r){var w=$("#candidateHomeLocality").val();if(null==w?(a=!1,$.notify("Please enter a valid Locality","error")):l.candidateHomeLocality=parseInt(w),!a){var p={propId:r,message:"Please enter a valid Home locality",submissionStatus:a};n.push(p)}}else if(9==r){var S=$("#candidateTimeShiftPref").val();if("-1"==S?(a=!1,$.notify("Please enter a valid time/shift preference (ex: Part time, Full time)","error")):l.candidateTimeShiftPref=$("#candidateTimeShiftPref").val(),!a){var p={propId:r,message:"Please enter a valid time preference",submissionStatus:a};n.push(p)}}});var d=!1;if(0==n.length){$("#preScreenInterviewSetBtn").prop("disabled",!0),$("#preScreenInterviewSetBtn").click(function(){return!1}),$("#preScreenInterviewSetBtn").unbind(),$("#preScreenInterviewSetBtn").removeAttr("onclick");try{$.ajax({type:"POST",url:"/updateCandidateDetailsViaPreScreen/?propertyIdList="+propertyIdArray+"&candidateMobile="+localStorage.getItem("mobile")+"&jobPostId="+jpId,contentType:"application/json; charset=utf-8",data:JSON.stringify(l),success:function(e){e.status==INTERVIEW_REQUIRED?($("#preScreenModal").modal("hide"),initInterviewModal(candidateId,jpId,d)):e.status==INTERVIEW_NOT_REQUIRED?($("#preScreenModal").modal("hide"),$("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on "+jobPostInfo.recruiterProfile.recruiterProfileMobile),$("#confirmationModal").modal("show"),$.notify("Successfully Submitted Application form. Thanks !","success")):$.notify("Something went wrong. Please try again !","success")}})}catch(e){void 0}return!0}})}();
=======
/**
 * Created by hawk on 14/11/16.
 */
// aux methods start
var langArray = [];
var currentLocationArray = [];
var localityArray = [];
var jobRoleArray = [];
var propertyIdArray = [];
var candidateId;
var jpId;
var jobPostInfo;

var shouldShowPSModal = true;

function processTimeShift(returnedData) {
    if (returnedData != null) {
        var data = [{
            label: "None Selected",
            value: -1
        }];

        returnedData.forEach(function(timeshift) {
            var opt = {
                label: timeshift.timeShiftName,
                value: parseInt(timeshift.timeShiftId)
            };
            data.push(opt);
        });

        var selectList = $('#candidateTimeShiftPref');
        selectList.multiselect({
            nonSelectedText: 'None Selected',
            includeSelectAllOption: true,
            maxHeight: 300
        });
        selectList.multiselect('dataprovider', data);
        selectList.multiselect('rebuild');
    }
}

function processEducation(returnedEdu) {
    if (returnedEdu != null) {
        var data = [{
            label: "None Selected",
            value: -1
        }];

        returnedEdu.forEach(function(education) {
            var opt = {
                label: education.educationName,
                value: parseInt(education.educationId)
            };
            data.push(opt);
        });

        var selectList = $('#candidateHighestEducation');
        selectList.multiselect({
            nonSelectedText: 'None Selected',
            includeSelectAllOption: true,
            maxHeight: 300
        });
        selectList.multiselect('dataprovider', data);
        selectList.multiselect('rebuild');
    }
}

function processDegree(returnedDegree) {
    if (returnedDegree != null) {
        var data = [{
            label: "None Selected",
            value: -1
        }];

        returnedDegree.forEach(function(degree) {
            var opt = {
                label: degree.degreeName,
                value: parseInt(degree.degreeId)
            };
            data.push(opt);
        });

        var selectList = $('#candidateHighestDegree');
        selectList.multiselect({
            nonSelectedText: 'None Selected',
            includeSelectAllOption: true,
            maxHeight: 300
        });
        selectList.multiselect('dataprovider', data);
        selectList.multiselect('rebuild');
    }
}

function processLanguage(returnedData) {
    var arrayLang = [];
    var arrayLangId = [];

    returnedData.forEach(function(language) {
        console.log(language);
        var id = language.languageId;
        var name = language.languageName;
        var item = {};
        item["id"] = id;
        item["name"] = name;
        arrayLang.push(name);
        arrayLangId.push(id);
        var option = $('<option value=' + id + '></option>').text(name);
        langArray.push(item);
    });
    populateLanguages(arrayLang.reverse(), arrayLangId.reverse());
}

function populateLanguages(l, lId) {
    var i;
    var table = document.getElementById("language_details");
    for (i = 0; i < l.length; i++) {
        if (lId[i] == 1 || lId[i] == 2 || lId[i] == 3 || lId[i] == 4 || lId[i] == 5) {

            var colLanguageTitle = document.createElement("div");
            colLanguageTitle.className = "col-xs-12 col-sm-3";
            colLanguageTitle.style = "padding-top:8px";
            table.appendChild(colLanguageTitle);

            var colLanguageUnder = document.createElement("div");
            colLanguageUnder.className = "col-xs-12 col-sm-3";
            table.appendChild(colLanguageUnder);

            var colLanguageRead = document.createElement("div");
            colLanguageRead.className = "col-xs-12 col-sm-3";
            table.appendChild(colLanguageRead);

            var colLanguageWrite = document.createElement("div");
            colLanguageWrite.className = "col-xs-12 col-sm-3";
            table.appendChild(colLanguageWrite);

            var cell1 = document.createElement("font");
            cell1.style = "font-size:16px;font-weight:bold";
            colLanguageTitle.appendChild(cell1);

            var cell2 = document.createElement("div");
            colLanguageUnder.appendChild(cell2);

            var cell3 = document.createElement("div");
            colLanguageRead.appendChild(cell3);

            var cell4 = document.createElement("div");
            colLanguageWrite.appendChild(cell4);


            cell1.innerHTML = '<span style="margin-top:8px">' + l[i] + '</span>';
            cell2.innerHTML = "<div class=\"btn-group\" style=\"margin:6px 0px\" data-toggle=\"buttons\">" + "<label class=\"btn btn-custom-check\">" + "<input id=" + lId[i] + " type=\"checkbox\" name=\"u\" value=0 >Understand</label></div>";
            cell3.innerHTML = "<div class=\"btn-group\" style=\"margin:6px 0px\" data-toggle=\"buttons\">" + "<label class=\"btn btn-custom-check\">" + "<input id=" + lId[i] + " type=\"checkbox\" name=\"s\" value=0 >Speak</label></div>";
            cell4.innerHTML = "<div class=\"btn-group\" style=\"margin:6px 0px\"  data-toggle=\"buttons\">" + "<label class=\"btn btn-custom-check\">" + "<input id=" + lId[i] + " type=\"checkbox\" name=\"rw\" value=0 >Read/Write</label></div>";
        }
    }
}

function processDataGetAssets(returnedAssets) {
    var selectList = $('#assets_details');

    returnedAssets.forEach(function(asset) {
        console.log(asset);

        var assetsResponseCol = document.createElement("div");
        assetsResponseCol.className = "col-xs-12 col-sm-3 col-md-3";
        selectList.append(assetsResponseCol);

        var checkMatchLabel = document.createElement("label");
        checkMatchLabel.type = "checkbox";
        checkMatchLabel.for = "assetsCheckbox_" + asset.assetTitle;
        checkMatchLabel.style = 'margin:4px 10px';
        assetsResponseCol.appendChild(checkMatchLabel);

        var checkMatch = document.createElement("input");
        checkMatch.type = "checkbox";
        checkMatch.id = "assetsCheckboxId_" + asset.assetId;

        var assetsTitle = document.createElement("font");
        assetsTitle.textContent = asset.assetTitle;
        assetsTitle.style = "margin:8% 4%";
        assetsResponseCol.appendChild(assetsTitle);

        checkMatchLabel.appendChild(checkMatch);
    });
}

function processIdProofsWithNumbers(returnedData) {
    if (returnedData != null) {
        // minReqTable
        var responseInput = $('#document_details');

        returnedData.forEach(function(idProof) {
            console.log(idProof);
            // to do check idproof obj here
            var documentResponseCol = document.createElement("div");
            documentResponseCol.className = "col-sm-6 col-md-4";
            documentResponseCol.id = "document_response_checkbox";
            responseInput.append(documentResponseCol);

            var documentResponseRow1 = document.createElement("div");
            documentResponseRow1.className = "row";
            documentResponseRow1.id = "document_response_checkbox";
            documentResponseRow1.style = "padding:2% 0";
            documentResponseCol.appendChild(documentResponseRow1);

            var documentResponseRow2 = document.createElement("div");
            documentResponseRow2.className = "row";
            documentResponseRow2.id = "document_response_input_" + idProof.idProofId;
            documentResponseRow2.style = "padding:2% 2%;display:none;";
            documentResponseCol.appendChild(documentResponseRow2);

            var checkMatchLabel = document.createElement("label");
            checkMatchLabel.type = "checkbox";
            checkMatchLabel.for = "idProofCheckbox_" + idProof.idProofId;
            checkMatchLabel.style = 'margin:4px 10px';
            documentResponseRow1.appendChild(checkMatchLabel);

            var checkMatch = document.createElement("input");
            checkMatch.type = "checkbox";
            checkMatch.id = "idProofCheckbox_" + idProof.idProofId;
            checkMatch.onclick = function() {
                if ($("#idProofCheckbox_" + idProof.idProofId).prop('checked') == true) {
                    $("#document_response_input_" + idProof.idProofId).css("display", "block");
                } else {
                    $("#document_response_input_" + idProof.idProofId).css("display", "none");
                    $("#Invalid_" + idProof.idProofId).css("display", "none");
                }

            };
            checkMatchLabel.appendChild(checkMatch);

            var idProofTitleTd = document.createElement("font");
            idProofTitleTd.textContent = idProof.idProofName;
            idProofTitleTd.style = "margin:8% 4%";
            documentResponseRow1.appendChild(idProofTitleTd);

            var alertInvalid = document.createElement("p");
            alertInvalid.id = "Invalid_" + idProof.idProofId;
            alertInvalid.textContent = "(Invalid Number)";
            alertInvalid.style = "color:#ff1744;display:none;margin:1px 0 1px 42px;font-size:12px";
            documentResponseRow1.appendChild(alertInvalid);

            var idProofNumberTd = document.createElement("p");
            idProofNumberTd.id = "idProofValueTd_" + idProof.idProofId;
            documentResponseRow2.appendChild(idProofNumberTd);

            var ip = document.createElement("INPUT");
            ip.className = "form-control";
            ip.setAttribute("type", "text");
            ip.oninput = validateInput;
            ip.placeholder = idProof.idProofName + " Number";
            ip.setAttribute("id", "idProofValue_" + idProof.idProofId);
            idProofNumberTd.appendChild(ip);

        });
    }
}

function validateInput(idProofId, value) {
    if (idProofId == null || value == null) {
        idProofId = this.id.split("_")[1];
        value = this.value;
    };
    if (!$('input#idProofCheckbox_' + idProofId).is(':checked')) {
        return true;
    }
    /*else if($('input#idProofValue_'+idProofId).val().trim() == ""){
           $("#Invalid_" + idProofId).css("display", "block");
           return false;
       } else {
           $("#Invalid_" + idProofId).css("display", "none");
       }*/
    // if(value == "") {
    //     $("#Invalid_" + idProofId).css("display", "none");
    //     return true;
    // }
    // aadhaar validation
    if (idProofId == 3) {
        if (!validateAadhar(value)) {
            $("#Invalid_" + idProofId).css("display", "block");
            return false;
        } else {
            $("#Invalid_" + idProofId).css("display", "none");
            return true;
        }
    } else if (idProofId == 1) {
        if (!validateDL(value)) {
            $("#Invalid_" + idProofId).css("display", "block");
            return false;
        } else {
            $("#Invalid_" + idProofId).css("display", "none");
            return true;
        }
    } else if (idProofId == 2) {
        if (!validatePASSPORT(value)) {
            $("#Invalid_" + idProofId).css("display", "block");
            return false;
        } else {
            $("#Invalid_" + idProofId).css("display", "none");
            return true;
        }
    } else if (idProofId == 4) {
        if (!validatePAN(value)) {
            $("#Invalid_" + idProofId).css("display", "block");
            return false;
        } else {
            $("#Invalid_" + idProofId).css("display", "none");
            return true;
        }
    } else {
        return true;
    }
}

function processAllJobRole(returnedData, id) {
    var locArray = [];
    if (returnedData != null && jobRoleArray.length == 0) {
        returnedData.forEach(function(jobRole) {
            var label = jobRole.jobName;
            var value = parseInt(jobRole.jobRoleId);
            var item = {};
            item["id"] = value;
            item["name"] = label;
            jobRoleArray.push(item);
            locArray.push(item);
        });
    }
    if (jobRoleArray != null && jobRoleArray.length > 0) {
        $("#workedJobRole_" + id).tokenInput(jobRoleArray, {
            theme: "facebook",
            placeholder: "Job Role?",
            hintText: "Select job role",
            minChars: 0,
            tokenLimit: 1,
            zindex: 9999,
            preventDuplicates: true
        });
        disableCurrentCompanyOption;
    }
}

function getJobRoleArray() {
    return jobRoleArray;

}

function processLocality(returnedData) {

    var locArray = [];
    if (returnedData != null) {
        returnedData.forEach(function(locality) {
            var id = locality.localityId;
            var name = locality.localityName;
            var item = {};
            item["id"] = id;
            item["name"] = name;
            localityArray.push(item);
            locArray.push(item);
        });

        if (localityArray != null) {
            $("#candidateHomeLocality").tokenInput(getLocalityArray(), {
                theme: "facebook",
                placeholder: "job Localities?",
                hintText: "Start typing Area (eg. BTM Layout, Bellandur..)",
                minChars: 0,
                tokenLimit: 1,
                zindex: 9999,
                preventDuplicates: true
            });
        }
    }
}

function getLocalityArray() {
    return localityArray;
}
// aux methods end
var modalOpenAttempt = 0;

function openCandidatePreScreenModal(jobPostId, candidateMobile) {

    if (candidateMobile != null) {

        var base_api_url = "/support/api/getJobPostVsCandidate/";
        candidateMobile = candidateMobile.substring(3);
        if (base_api_url == null || jobPostId == null) {
            return
        } else {
            base_api_url += "?";
            if (jobPostId != null) {
                base_api_url += "jobPostId=" + jobPostId;
            }
            if (candidateMobile != null) {
                base_api_url += "&candidateMobile=" + candidateMobile;
            }
        }
        base_api_url += "&rePreScreen=" + true;
        if (modalOpenAttempt == 1) {
            if (shouldShowPSModal) {
                $("#preScreenModal").modal();
            }
        }

        if (modalOpenAttempt == 0) {
            modalOpenAttempt = 1;

            try {
                $.ajax({
                    type: "POST",
                    url: "/getJobPostInfo/" + jobPostId + "/0",
                    data: false,
                    contentType: false,
                    processData: false,
                    async: false,
                    success: processDataForJobPostLocationPrescreen
                });
            } catch (exception) {
                console.log("exception occured!!" + exception);
            }

            try {
                $.ajax({
                    type: "GET",
                    url: base_api_url,
                    data: false,
                    async: false,
                    contentType: false,
                    processData: false,
                    success: processPreScreenData
                });
            } catch (exception) {
                console.log("exception occured!!" + exception.stack);
            }
        }

    }
}

function processDataForJobPostLocationPrescreen(returnedData) {

    jobPostInfo = returnedData;
    $('#ps_jobNameConfirmation').html(returnedData.jobPostTitle);
    $('#ps_companyNameConfirmation').html(returnedData.company.companyName);

}

function processPreScreenData(returnedData) {

    if (returnedData == null || returnedData.status != "SUCCESS") {
        if (returnedData != null && returnedData.status == "INVALID") {
            $.notify("Already Pre Screened", 'error');
        } else {
            $.notify("Request failed. Something went Wrong! Please Refresh", 'error');
        }
        shouldShowPSModal = false;
        return;
    }
    if (returnedData.elementList == null || returnedData.elementList.length == 0) {
        shouldShowPSModal = false;
        $("#preScreenModal").modal('hide');

        var showModal = true;

        nfy("Interview Submitted successfully. ", 'success');

        if (jobPostInfo.recruiterProfile != null) {

            if (jobPostInfo.recruiterProfile.contactCreditCount > 0) {
                showModal = true;
            }

            if (jobPostInfo.recruiterProfile.interviewCreditCount > 0) {
                showModal = false;
            }
        } else {
            showModal = false;
        }

        if (showModal) {
            $("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on " +
                jobPostInfo.recruiterProfile.recruiterProfileMobile);

            $("#confirmationModal").modal("show");
        }

        $.notify("Job Application Successfully Completed ", 'success');
        return;
    }
    if (!returnedData.visible) {
        shouldShowPSModal = false;
        console.log("modal visible false, hide modal");
        $.notify("Job Application Successfully Completed ", 'success');
        $("#preScreenModal").modal('hide');

        if (returnedData.interviewRequired) {
            initInterviewModal(returnedData.candidateId, returnedData.jobPostId, false);
        } else {
            $("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on " +
                jobPostInfo.recruiterProfile.recruiterProfileMobile);

            $("#confirmationModal").modal("show");
        }

        return;
    } else {
        console.log("adding modal-open to html");
        $("html").removeClass("modal-open").addClass("modal-open");
    }
    $.notify("Please complete Job Application form", 'success');

    var parent = $('#missingInfo');
    var mainDiv = document.createElement("div");
    mainDiv.className = "row";
    parent.append(mainDiv);

    var subDivOne = document.createElement("div");
    subDivOne.className = "col-sm-12";
    subDivOne.setAttribute("data-toggle", "collapse");
    subDivOne.setAttribute("href", "#jobDetailsInfoFillCol");
    mainDiv.appendChild(subDivOne);

    var hintMessage = document.createElement("p");
    hintMessage.textContent = "Please provide following details to apply for this job";
    hintMessage.id = "panelHeader";
    hintMessage.onclick = function() {
        if ($("#jobDetailsInfoFillCol").hasClass("in") == true) {
            $("#collapseIcon").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down");
        } else {
            $("#collapseIcon").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
        }
    }
    subDivOne.appendChild(hintMessage);

    var spanIcon = document.createElement("span");
    spanIcon.className = "glyphicon glyphicon-chevron-up pull-right";
    spanIcon.id = "collapseIcon";
    spanIcon.setAttribute("aria-hidden", true);
    hintMessage.appendChild(spanIcon);

    var subDivTwo = document.createElement("div");
    subDivTwo.style = "padding:0 4%";
    subDivTwo.id = "jobDetailsInfoFillCol";
    subDivTwo.className = "col-sm-12 panel-collapse collapse in";
    mainDiv.appendChild(subDivTwo);

    var orderList = document.createElement("ol");
    orderList.className = "list-group";
    subDivTwo.appendChild(orderList);
    propertyIdArray = [];

    if (returnedData != null) {
        var elementList = returnedData.elementList;
        candidateId = returnedData.candidateId;
        jpId = returnedData.jobPostId;

        elementList.forEach(function(rowData) {
            var ajax_type = "POST";
            var url;
            var fn;
            var renderData;
            if (rowData != null) {
                // Document criteria follow is_matching (we want to collect documents that the jobpost requires and
                // candidate hasnt provided us with those details)
                if (rowData.propertyId == 0 && rowData.isMatching == false) {
                    propertyIdArray.push(rowData.propertyId);

                    var jobPostIdProofArray = [];
                    var jobPostElementList = rowData.jobPostElementList;
                    jobPostElementList.forEach(function(documentData) {
                        jobPostIdProofArray.push(documentData.object);
                    });

                    var firstproperty = document.createElement("li");
                    firstproperty.textContent = "Do you have the following document(s) ?";
                    firstproperty.style = "color:#09ac58";
                    firstproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var documentDetails = document.createElement("div");
                    documentDetails.className = "col-sm-12 col-md-12";
                    documentDetails.id = "document_details";
                    documentDetails.style = "padding:2%";

                    rowBox.appendChild(documentDetails);
                    firstproperty.appendChild(rowBox);


                    // url = "/support/api/getDocumentReqForJobRole/?job_post_id=" + returnedData.jobPostId;
                    // ajax_type = "GET";
                    renderData = jobPostIdProofArray;
                    url = null;
                    fn = function() {
                        processIdProofsWithNumbers(renderData);
                    };
                    orderList.appendChild(firstproperty);
                } else if (rowData.propertyId == 1 && rowData.isMatching == false) {
                    // Language criteria follow is_matching (we want to collect language proficiency for all those
                    // languages that the jobpost requires but the candidate hasnt provided us the data)
                    propertyIdArray.push(rowData.propertyId);
                    var languageList = [];
                    var jobPostElementList = rowData.jobPostElementList;
                    jobPostElementList.forEach(function(languageData) {
                        languageList.push(languageData.object);
                    });

                    var secondProperty = document.createElement("li");
                    secondProperty.textContent = "Do you know following language(s) ?";
                    secondProperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var languageDetails = document.createElement("div");
                    languageDetails.className = "col-sm-12";
                    languageDetails.id = "language_details";
                    languageDetails.style = "padding:1%;";

                    // var langTable = document.createElement("table");
                    // langTable.id = "langTable";
                    // langTable.className = "";
                    // var thead = document.createElement("thead");
                    // var tbody = document.createElement("tbody");
                    // langTable.appendChild(thead);
                    // langTable.appendChild(tbody);
                    // languageDetails.appendChild(langTable);


                    rowBox.appendChild(languageDetails);
                    secondProperty.appendChild(rowBox);

                    renderData = languageList;
                    url = null;
                    fn = function() {
                        processLanguage(renderData);
                    };
                    // url = "/getAllLanguage";
                    // fn = function (returnedData) {
                    //     url = "";
                    // };
                    orderList.appendChild(secondProperty);
                } else if (rowData.propertyId == 2 && rowData.isMatching == false) {
                    // Assets criteria follow is_matching (we want to collect asset_ownership for all those
                    // assets that the jobpost requires but the candidate hasnt provided us the data)
                    propertyIdArray.push(rowData.propertyId);

                    var assetList = [];
                    var jobPostElementList = rowData.jobPostElementList;
                    jobPostElementList.forEach(function(assetData) {
                        assetList.push(assetData.object);
                    });

                    var firstproperty = document.createElement("li");
                    firstproperty.textContent = "Do you own any of the following ?";
                    firstproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var assetsDetails = document.createElement("div");
                    assetsDetails.className = "col-md-12";
                    assetsDetails.id = "assets_details";
                    assetsDetails.style = "padding:2% 0";

                    renderData = assetList;
                    url = null;
                    fn = function() {
                        processDataGetAssets(renderData);
                    };
                    //
                    // ajax_type = "GET";
                    // url = "/support/api/getAssetReqForJobRole/?job_post_id=" + returnedData.jobPostId;
                    // fn = function (returnedData) {
                    //     url = "";
                    // };

                    rowBox.appendChild(assetsDetails);
                    firstproperty.appendChild(rowBox);
                    orderList.appendChild(firstproperty);
                } else if (rowData.propertyId == 3 && rowData.isMatching == false && rowData.candidateElement == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var thirdproperty = document.createElement("li");
                    thirdproperty.textContent = "Please mention your date of birth";
                    thirdproperty.id = "property_" + rowData.propertyId;
                    orderList.appendChild(thirdproperty);

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var ageTitle = document.createElement("div");
                    ageTitle.className = "col-xs-12 col-sm-5";
                    ageTitle.style = "padding:2% 3%";
                    rowBox.appendChild(ageTitle);

                    var ageResponse = document.createElement("div");
                    ageResponse.className = "col-xs-12 col-sm-6";
                    ageResponse.style = "padding:1%";
                    rowBox.appendChild(ageResponse);

                    var ageText = document.createElement("font");
                    ageText.textContent = ("Date of birth");
                    ageText.style = "font-weight:bold";
                    ageTitle.appendChild(ageText);

                    var dayCandidate = document.createElement("select");
                    dayCandidate.className = "selectDropDown";
                    dayCandidate.id = "dob_day";
                    dayCandidate.style = "margin:0 1%";
                    ageResponse.appendChild(dayCandidate);

                    var dayOption = document.createElement("option");
                    dayOption.textContent = "Day";
                    dayCandidate.appendChild(dayOption);

                    var i;
                    for (i = 1; i <= 31; i++) {
                        var option = document.createElement("option");
                        option.value = ('0' + i).slice(-2);
                        option.textContent = i;
                        dayCandidate.appendChild(option);
                    }

                    var monthCandidate = document.createElement("select");
                    monthCandidate.className = "selectDropDown";
                    monthCandidate.id = "dob_month";
                    monthCandidate.style = "margin:0 1%";
                    ageResponse.appendChild(monthCandidate);

                    var monthOption = document.createElement("option");
                    monthOption.textContent = "Month";
                    monthCandidate.appendChild(monthOption);

                    for (i = 1; i <= 12; i++) {
                        option = document.createElement("option");
                        option.value = ('0' + i).slice(-2);
                        var monthName;
                        switch (i) {
                            case 1:
                                monthName = "January";
                                break;
                            case 2:
                                monthName = "February";
                                break;
                            case 3:
                                monthName = "March";
                                break;
                            case 4:
                                monthName = "April";
                                break;
                            case 5:
                                monthName = "May";
                                break;
                            case 6:
                                monthName = "June";
                                break;
                            case 7:
                                monthName = "July";
                                break;
                            case 8:
                                monthName = "August";
                                break;
                            case 9:
                                monthName = "September";
                                break;
                            case 10:
                                monthName = "October";
                                break;
                            case 11:
                                monthName = "November";
                                break;
                            case 12:
                                monthName = "December";
                                break;
                        }
                        option.textContent = monthName;
                        monthCandidate.appendChild(option);
                    }

                    var yearCandidate = document.createElement("select");
                    yearCandidate.className = "selectDropDown";
                    yearCandidate.id = "dob_year";
                    yearCandidate.style = "margin:0 1%";
                    ageResponse.appendChild(yearCandidate);

                    var yearOption = document.createElement("option");
                    yearOption.textContent = "Year";
                    yearCandidate.appendChild(yearOption);

                    for (i = new Date().getFullYear() - 19; i >= new Date().getFullYear() - 80; i--) {
                        option = document.createElement("option");
                        option.value = i;
                        option.textContent = i;
                        yearCandidate.appendChild(option);
                    }

                    thirdproperty.appendChild(rowBox);
                    orderList.appendChild(thirdproperty);
                } else if (rowData.propertyId == 4 && rowData.isMatching == false && rowData.candidateElement == null && rowData.candidateElementList == null) {
                    propertyIdArray.push(rowData.propertyId);

                    var fourthproperty = document.createElement("li");
                    fourthproperty.textContent = "Do you have work experience?";
                    fourthproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var rowBoxDetails = document.createElement("div");
                    rowBoxDetails.className = "row";
                    rowBoxDetails.style = "display: none;";
                    rowBoxDetails.id = "companyDetailsCapture";


                    var allworkedCompanyDetails = document.createElement("p");
                    allworkedCompanyDetails.textContent = ("Where all have you worked before? ");
                    allworkedCompanyDetails.style = "margin-left:10px";
                    rowBoxDetails.appendChild(allworkedCompanyDetails);

                    var allworkedCompanyDetailsDiv = document.createElement("div");
                    allworkedCompanyDetailsDiv.className = "row";
                    allworkedCompanyDetailsDiv.id = "row_1";
                    allworkedCompanyDetailsDiv.style = "margin:4px 0";
                    rowBoxDetails.appendChild(allworkedCompanyDetailsDiv);


                    var allCompanyNameCol = document.createElement("div");
                    allCompanyNameCol.className = "col-sm-3";
                    allCompanyNameCol.id = "companyName";
                    allworkedCompanyDetailsDiv.appendChild(allCompanyNameCol);

                    var allworkedJobRoleCol = document.createElement("div");
                    allworkedJobRoleCol.className = "col-sm-3";
                    allworkedJobRoleCol.id = "workedJobRole";
                    allworkedCompanyDetailsDiv.appendChild(allworkedJobRoleCol);

                    var allWorkedCurrentltyCol = document.createElement("div");
                    allWorkedCurrentltyCol.className = "col-sm-4"
                    allWorkedCurrentltyCol.id = "workedCurrently";
                    allWorkedCurrentltyCol.style = "padding-top:1%;text-align:center";
                    allworkedCompanyDetailsDiv.appendChild(allWorkedCurrentltyCol);

                    var allWorkedAddMoreCol = document.createElement("div");
                    allWorkedAddMoreCol.className = "col-sm-2";
                    allworkedCompanyDetailsDiv.appendChild(allWorkedAddMoreCol);

                    var addCompanyName = document.createElement("input");
                    addCompanyName.className = "form-control";
                    addCompanyName.type = ("text");
                    addCompanyName.placeholder = ("Company Name");
                    addCompanyName.id = "companyName_1";
                    addCompanyName.onchange = enableAddBtn;
                    allCompanyNameCol.appendChild(addCompanyName);

                    var addJobRole = document.createElement("input");
                    addJobRole.id = "workedJobRole_1";
                    addJobRole.onchange = enableAddBtn;
                    allworkedJobRoleCol.appendChild(addJobRole);

                    var addCurrentlyWorking = document.createElement("input");
                    addCurrentlyWorking.type = ("radio");
                    addCurrentlyWorking.style = "margin:0 4%;";
                    addCurrentlyWorking.id = "addCurrentlyWorking_1";
                    addCurrentlyWorking.name = ("addCurrently_Working");
                    addCurrentlyWorking.setAttribute("disabled", true);
                    addCurrentlyWorking.value = (0);
                    allWorkedCurrentltyCol.appendChild(addCurrentlyWorking);

                    var addMore = document.createElement("button");
                    addMore.className = "form-control";
                    addMore.type = "button";
                    addMore.setAttribute("disabled", true);
                    addMore.id = "addCurrentlyWorkingBtn_1";
                    addMore.value = "Add";
                    addMore.name = "Add";
                    addMore.style = "background:#09ac58;color:#fff;font-size:12px";
                    addMore.textContent = "Add Company";
                    addMore.onclick = addmoreCompany;

                    allWorkedAddMoreCol.appendChild(addMore);
                    addCurrentlyWorking.type = ("radio");
                    addCurrentlyWorking.style = "margin:0 4%";
                    addCurrentlyWorking.id = ("addCurrentlyWorking_" + companyCount);
                    addCurrentlyWorking.name = ("addCurrently_Working");
                    allWorkedCurrentltyCol.appendChild(addCurrentlyWorking);

                    var addCurrentlyWorkingLabel = document.createElement("label");
                    addCurrentlyWorkingLabel.textContent = ("Is this your current company");
                    addCurrentlyWorkingLabel.for = ("addCurrentlyWorking_1");
                    allWorkedCurrentltyCol.appendChild(addCurrentlyWorkingLabel);

                    url = '/getAllJobs ';
                    fn = function(returnedData) {
                        processAllJobRole(returnedData, 1);
                        url = "";
                    };

                    var experienceOption = document.createElement("div");
                    experienceOption.className = "col-xs-12 col-md-12";
                    experienceOption.style = "padding:2% 0;";
                    rowBox.appendChild(experienceOption);

                    var experienceQuestion = document.createElement("div");
                    experienceQuestion.className = "col-xs-12 col-sm-5";
                    experienceQuestion.id = "experienceQuestion";
                    experienceQuestion.style = "padding:2% 3%;display:none";
                    rowBox.appendChild(experienceQuestion);

                    var experienceText = document.createElement("p");
                    experienceText.textContent = ("How many year(s) of work experience do you have?");
                    experienceQuestion.appendChild(experienceText);

                    var experienceDuration = document.createElement("div");
                    experienceDuration.className = "col-xs-12 col-md-6";
                    experienceDuration.id = "experienceDuration";
                    experienceDuration.style = "display:none;padding:1%";
                    rowBox.appendChild(experienceDuration);

                    var colDetailsFresher = document.createElement("div");
                    colDetailsFresher.className = "col-xs-12 col-sm-3 ";
                    experienceOption.appendChild(colDetailsFresher);

                    var colDetailsExperience = document.createElement("div");
                    colDetailsExperience.className = "col-xs-12 col-sm-4";
                    experienceOption.appendChild(colDetailsExperience);

                    var radioFresher = document.createElement("input");
                    radioFresher.type = ("radio");
                    radioFresher.id = ("candidateFresh");
                    radioFresher.name = ("candidateExperience");
                    radioFresher.value = (0);
                    radioFresher.onchange = hideExperienceCaptureDiv;
                    colDetailsFresher.appendChild(radioFresher);

                    var labelFresher = document.createElement("label");
                    labelFresher.textContent = ("I'm a fresher");
                    labelFresher.for = ("candidateFresh");
                    colDetailsFresher.appendChild(labelFresher);

                    var radioExperience = document.createElement("input");
                    radioExperience.type = ("radio");
                    radioExperience.id = ("candidateExp");
                    radioExperience.name = ("candidateExperience");
                    radioExperience.value = (1);
                    radioExperience.onchange = showExperienceCaptureDiv;
                    colDetailsExperience.appendChild(radioExperience);

                    var labelExperience = document.createElement("label");
                    labelExperience.textContent = ("I have work experience");
                    labelExperience.for = ("candidateExp");
                    colDetailsExperience.appendChild(labelExperience);


                    var textYear = document.createElement("input");
                    textYear.className = "form-control";
                    textYear.type = ("number");
                    textYear.value = 0;
                    textYear.oninput = showExperienceBox;
                    textYear.id = ("candidateTotalExperienceYear");
                    experienceDuration.appendChild(textYear);

                    var titleExpYear = document.createElement("font");
                    titleExpYear.textContent = ("Years");
                    titleExpYear.style = "font-weight:bold";
                    experienceDuration.appendChild(titleExpYear);

                    var textMonths = document.createElement("input");
                    textMonths.className = "form-control";
                    textMonths.type = ("number");
                    textMonths.value = 0;
                    textMonths.id = ("candidateTotalExperienceMonth");
                    textMonths.oninput = showExperienceBox;
                    experienceDuration.appendChild(textMonths);

                    var titleExpMonths = document.createElement("font");
                    titleExpMonths.textContent = ("Months");
                    titleExpMonths.style = "font-weight:bold";
                    experienceDuration.appendChild(titleExpMonths);

                    var experienceCurrently = document.createElement("div");
                    experienceCurrently.className = "col-xs-12 col-md-10";
                    experienceCurrently.id = "experienceCurrently";
                    experienceCurrently.style = "padding:2% 3%;display:none";
                    rowBox.appendChild(experienceCurrently);

                    var currentlyWorking = document.createElement("p");
                    currentlyWorking.textContent = ("Are you currently working : ");
                    experienceCurrently.appendChild(currentlyWorking);

                    var checkboxCurrentlyWorking = document.createElement("input");
                    checkboxCurrentlyWorking.id = ("currentlyWorking");
                    checkboxCurrentlyWorking.type = ("checkbox");
                    checkboxCurrentlyWorking.style = "margin:0 2% 0 4%";
                    checkboxCurrentlyWorking.onclick = disableCurrentCompanyOption;
                    currentlyWorking.appendChild(checkboxCurrentlyWorking);

                    var labelYes = document.createElement("label");
                    labelYes.textContent = ("Yes");
                    labelYes.for = ("currentlyWorking");
                    currentlyWorking.appendChild(labelYes);

                    fourthproperty.appendChild(rowBox);
                    fourthproperty.appendChild(rowBoxDetails);
                    orderList.appendChild(fourthproperty);
                } else if (rowData.propertyId == 5 && rowData.isMatching == false && rowData.candidateElement == null && rowData.candidateElementList == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var fifthproperty = document.createElement("li");
                    fifthproperty.textContent = "Please provide your education details";
                    fifthproperty.id = "property_" + rowData.propertyId;

                    var rowBoxHEQ = document.createElement("div");
                    rowBoxHEQ.className = "row";
                    fifthproperty.appendChild(rowBoxHEQ);

                    var rowBoxSuccess = document.createElement("div");
                    rowBoxSuccess.className = "row";
                    fifthproperty.appendChild(rowBoxSuccess);

                    var rowBoxHED = document.createElement("div");
                    rowBoxHED.className = "row";
                    fifthproperty.appendChild(rowBoxHED);

                    var rowBoxLastInstitute = document.createElement("div");
                    rowBoxLastInstitute.className = "row";
                    fifthproperty.appendChild(rowBoxLastInstitute);

                    //Highest Education Qualification

                    var educationDetailsHEQ = document.createElement("div");
                    educationDetailsHEQ.className = "col-xs-12 col-sm-5";
                    educationDetailsHEQ.id = "education_details";
                    rowBoxHEQ.appendChild(educationDetailsHEQ);

                    var educationResponseHEQ = document.createElement("div");
                    educationResponseHEQ.className = "col-xs-12 col-sm-6";
                    educationResponseHEQ.id = "education_details";
                    educationResponseHEQ.style = "padding:1%";
                    rowBoxHEQ.appendChild(educationResponseHEQ);

                    var educationTitleHEQ = document.createElement("font");
                    educationTitleHEQ.textContent = ("Highest education qualification? ");
                    educationTitleHEQ.style = "font-weight:bold;";
                    educationDetailsHEQ.appendChild(educationTitleHEQ);

                    var educationOptionHEQ = document.createElement("select");
                    educationOptionHEQ.id = "candidateHighestEducation";
                    educationResponseHEQ.appendChild(educationOptionHEQ);

                    //Highest Education Successfully Complete

                    var educationDetailsSuccess = document.createElement("div");
                    educationDetailsSuccess.className = "col-xs-12 col-sm-5";
                    educationDetailsSuccess.id = "education_details";
                    rowBoxSuccess.appendChild(educationDetailsSuccess);

                    var educationResponseSuccess = document.createElement("div");
                    educationResponseSuccess.className = "col-xs-12 col-sm-6";
                    educationResponseSuccess.id = "education_details";
                    educationResponseSuccess.style = "padding-top:3%";
                    rowBoxSuccess.appendChild(educationResponseSuccess);

                    var educationTitleSuccess = document.createElement("font");
                    educationTitleSuccess.textContent = ("Have you successfully completed this course? ");
                    educationTitleSuccess.style = "font-weight:bold;";
                    educationDetailsSuccess.appendChild(educationTitleSuccess);

                    var successYes = document.createElement("input");
                    successYes.type = ("radio");
                    successYes.style = "margin:0 4% 0 0";
                    successYes.id = ("successYes");
                    successYes.name = ("candidateEducationCompletionStatus");
                    successYes.value = (1);
                    educationResponseSuccess.appendChild(successYes);

                    var labelYesSuccess = document.createElement("label");
                    labelYesSuccess.textContent = ("Yes");
                    labelYesSuccess.for = ("successConformationHEQ");
                    educationResponseSuccess.appendChild(labelYesSuccess);

                    var successNo = document.createElement("input");
                    successNo.type = ("radio");
                    successNo.style = "margin:0 4% 0 8%";
                    successNo.id = ("successNo");
                    successNo.name = ("candidateEducationCompletionStatus");
                    successNo.value = (0);
                    educationResponseSuccess.appendChild(successNo);

                    var labelNoSuccess = document.createElement("label");
                    labelNoSuccess.textContent = ("No");
                    labelNoSuccess.for = ("successConformationHEQ");
                    educationResponseSuccess.appendChild(labelNoSuccess);

                    //Highest Education Degree

                    var educationDetailsHED = document.createElement("div");
                    educationDetailsHED.className = "col-xs-12 col-sm-5";
                    educationDetailsHED.id = "education_details";
                    rowBoxHED.appendChild(educationDetailsHED);

                    var educationResponseHED = document.createElement("div");
                    educationResponseHED.className = "col-xs-12 col-sm-6";
                    educationResponseHED.id = "education_details";
                    educationResponseHED.style = "padding:1%";
                    rowBoxHED.appendChild(educationResponseHED);

                    var educationTitleHED = document.createElement("font");
                    educationTitleHED.textContent = ("Highest education degree? ");
                    educationTitleHED.style = "font-weight:bold;";
                    educationDetailsHED.appendChild(educationTitleHED);

                    var educationOptionHED = document.createElement("select");
                    educationOptionHED.id = "candidateHighestDegree";
                    educationResponseHED.appendChild(educationOptionHED);

                    //Last Attended Institute

                    var educationDetailsInstitute = document.createElement("div");
                    educationDetailsInstitute.className = "col-xs-12 col-sm-5";
                    educationDetailsInstitute.style = "padding:2% 3%";
                    rowBoxLastInstitute.appendChild(educationDetailsInstitute);
                    var educationResponseInstitute = document.createElement("div");

                    educationResponseInstitute.className = "col-xs-12 col-sm-6";
                    educationResponseInstitute.style = "padding:1%";
                    rowBoxLastInstitute.appendChild(educationResponseInstitute);

                    var educationtitleInstitute = document.createElement("font");
                    educationtitleInstitute.textContent = ("Last attended education institute?");
                    educationtitleInstitute.style = "margin-top:8px;font-weight:bold";
                    educationDetailsInstitute.appendChild(educationtitleInstitute);

                    var educationtextInstitute = document.createElement("input");
                    educationtextInstitute.className = "form-control";
                    educationtextInstitute.type = ("text");
                    educationtextInstitute.placeholder = ("School/Institute Name");
                    educationtextInstitute.id = ("candidateEducationInstitute");
                    educationResponseInstitute.appendChild(educationtextInstitute);

                    url = "/getAllEducation";
                    fn = function(returnedData) {
                        processEducation(returnedData);
                        url = "";
                    };
                    orderList.appendChild(fifthproperty);
                } else if (rowData.propertyId == 6 && rowData.isMatching == false && rowData.candidateElement == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var sixthproperty = document.createElement("li");
                    sixthproperty.textContent = "Please mention your gender ";
                    sixthproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var genderDetails = document.createElement("div");
                    genderDetails.className = "col-sm-12 col-md-12";
                    genderDetails.id = "gender_details";
                    genderDetails.style = "padding:2% 0;";

                    var colGenderDetailsMale = document.createElement("div");
                    colGenderDetailsMale.className = "col-xs-12 col-sm-3";
                    genderDetails.appendChild(colGenderDetailsMale);

                    var colGenderDetailsFemale = document.createElement("div");
                    colGenderDetailsFemale.className = "col-xs-12 col-sm-3";
                    genderDetails.appendChild(colGenderDetailsFemale);

                    var labelMale = document.createElement("label");
                    labelMale.textContent = ("Male");
                    labelMale.for = ("genderMale");
                    var radioMale = document.createElement("input");
                    radioMale.type = ("radio");
                    radioMale.style = "margin:0 8%";
                    radioMale.id = ("genderMale");
                    radioMale.name = ("gender");
                    radioMale.value = (0);

                    var labelFemale = document.createElement("label");
                    labelFemale.textContent = ("Female");
                    labelFemale.for = ("genderFemale");
                    var radioFemale = document.createElement("input");
                    radioFemale.type = ("radio");
                    radioFemale.style = "margin:0 8%";
                    radioFemale.id = ("genderFemale");
                    radioFemale.name = ("gender");
                    radioFemale.value = (1);

                    colGenderDetailsMale.appendChild(radioMale);
                    colGenderDetailsMale.appendChild(labelMale);
                    colGenderDetailsFemale.appendChild(radioFemale);
                    colGenderDetailsFemale.appendChild(labelFemale);
                    rowBox.appendChild(genderDetails);
                    sixthproperty.appendChild(rowBox);
                    orderList.appendChild(sixthproperty);
                } else if (rowData.propertyId == 7 && rowData.isMatching == false && rowData.candidateElement == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var seventhproperty = document.createElement("li");
                    seventhproperty.textContent = "Please provide your salary details";
                    seventhproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var salaryDetails = document.createElement("div");
                    salaryDetails.className = "col-xs-12 col-sm-5";
                    salaryDetails.id = "salary_details";

                    var salaryResponse = document.createElement("div");
                    salaryResponse.className = "col-xs-12 col-sm-6";
                    salaryResponse.id = "salary_response";
                    salaryResponse.style = "padding:1%";

                    var titleSalary = document.createElement("font");
                    titleSalary.textContent = ("Current/last drawn salary");
                    titleSalary.style = "margin-top:8px;font-weight:bold";
                    salaryDetails.appendChild(titleSalary);

                    var textSalary = document.createElement("input");
                    textSalary.className = "form-control";
                    textSalary.type = ("number");
                    textSalary.placeholder = ("Salary");
                    textSalary.id = ("candidateLastWithdrawnSalary");
                    textSalary.oninput = invalidSalary;
                    salaryResponse.appendChild(textSalary);

                    var salaryInvalid = document.createElement("p");
                    salaryInvalid.id = "invalidSalaryNotification";
                    salaryInvalid.textContent = "Invalid Salary Input Please enter a valid 'Last Withdrawn Salary' (Ex: 15000) in a month";
                    salaryInvalid.style = "color:#ff1744;display:none;margin:1px 0 1px 2px;font-size:12px";
                    salaryResponse.appendChild(salaryInvalid);

                    var inhandText = document.createElement("span");
                    inhandText.className = "label label-success";
                    inhandText.textContent = ("(InHand/Month)");
                    inhandText.style = "margin:8px 16px;font-size:12px";
                    salaryDetails.appendChild(inhandText);

                    rowBox.appendChild(salaryDetails);
                    rowBox.appendChild(salaryResponse);
                    seventhproperty.appendChild(rowBox);
                    orderList.appendChild(seventhproperty);
                } else if (rowData.propertyId == 8 && rowData.isMatching == false && rowData.candidateElementList == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var eigthproperty = document.createElement("li");
                    eigthproperty.textContent = "Which is your home locality? ";
                    eigthproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var localityDetails = document.createElement("div");
                    localityDetails.className = "col-sm-12 col-md-12";
                    localityDetails.id = "locality_details";
                    localityDetails.style = "padding:2%";

                    var titleLocality = document.createElement("p");
                    titleLocality.textContent = ("Locality");
                    titleLocality.style = "margin-left:18px;font-weight:bold";

                    var allLocalityDetail = document.createElement("input");
                    allLocalityDetail.id = "candidateHomeLocality";
                    eigthproperty.appendChild(allLocalityDetail);

                    url = "/getAllLocality";
                    fn = function(returnedData) {
                        processLocality(returnedData);
                        url = "";
                    };

                    titleLocality.appendChild(allLocalityDetail);
                    localityDetails.appendChild(titleLocality);
                    rowBox.appendChild(localityDetails);
                    eigthproperty.appendChild(rowBox);
                    orderList.appendChild(eigthproperty);
                } else if (rowData.propertyId == 9 && rowData.isMatching == false && rowData.candidateElement == null) {
                    propertyIdArray.push(rowData.propertyId);
                    var tenthproperty = document.createElement("li");
                    tenthproperty.textContent = "Time shift preferred";
                    tenthproperty.id = "property_" + rowData.propertyId;

                    var rowBox = document.createElement("div");
                    rowBox.className = "row";

                    var shiftTitle = document.createElement("div");
                    shiftTitle.className = "col-xs-12 col-sm-5";
                    shiftTitle.style = "padding:2% 3%";
                    rowBox.appendChild(shiftTitle);

                    var shiftResponse = document.createElement("div");
                    shiftResponse.className = "col-xs-12 col-sm-6";
                    shiftResponse.style = "padding:1%";
                    rowBox.appendChild(shiftResponse);

                    var shiftText = document.createElement("font");
                    shiftText.textContent = ("Time shift");
                    shiftText.style = "font-weight:bold";
                    shiftTitle.appendChild(shiftText);

                    var shiftOption = document.createElement("select");
                    shiftOption.id = "candidateTimeShiftPref";
                    shiftResponse.appendChild(shiftOption);

                    url = "/getAllShift";
                    fn = function(returnedData) {
                        processTimeShift(returnedData);
                    };

                    tenthproperty.appendChild(rowBox);
                    orderList.appendChild(tenthproperty);
                }
                if (url != null) {
                    try {
                        $.ajax({
                            type: ajax_type,
                            url: url,
                            data: false,
                            async: false,
                            contentType: false,
                            processData: false,
                            success: fn
                        });
                    } catch (exception) {
                        console.log("exception occured!!" + exception);
                    }
                } else {
                    console.log("url null hence call fn");
                    if (typeof fn === "function") {
                        fn();
                        fn = null;
                    }
                }
                if (rowData.propertyId == 5) {
                    try {
                        $.ajax({
                            type: "POST",
                            url: "/getAllDegree",
                            data: false,
                            contentType: false,
                            processData: false,
                            success: processDegree
                        });
                    } catch (exception) {
                        console.log("exception occured!!" + exception);
                    }
                }
            }
        });
        $("#preScreenModal").modal();
    }

}

function interviewButtonCondition(jobPostId) {
    if (jobPostId != null) {
        var interview_api_url = "/support/api/shouldShowInterview/";
        if (interview_api_url == null || jobPostId == null) {
            return
        } else {
            interview_api_url += "?";
            if (jobPostId != null) {
                interview_api_url += "jobPostId=" + jobPostId;
            }
        }
        try {
            $.ajax({
                type: "GET",
                url: interview_api_url,
                data: false,
                content: false,
                processData: false,
                success: function(returnedData) {
                    processInterviewBtn(returnedData, jobPostId);
                }
            });
        } catch (exception) {
            console.log("exception occured!!" + exception);
        }
    }
}

function disableCurrentCompanyOption() {
    if (!$("#currentlyWorking").is(":checked")) {
        var radios = document.getElementsByName('addCurrently_Working');
        for (var i = 0; i < radios.length; i++) {
            radios[i].disabled = true;
            radios[i].checked = false;
        }
        // document.getElementsByName("addCurrently_Working").disabled = true;
        //$("#addCurrentlyWorking").prop("disabled",true);
    } else {
        if ($("#currentlyWorking").is(":checked")) {
            var radios = document.getElementsByName('addCurrently_Working');
            for (var i = 0; i < radios.length; i++) {
                radios[i].disabled = false;
            }
            // $("#addCurrentlyWorking").prop("disabled",false);
        }
    }
}

function enableAddBtn() {
    var id = this.id.split("_")[1];
    if ($("#companyName_" + id).val() == "" || $("#workedJobRole_" + id).val() == "") {
        $("#addCurrentlyWorkingBtn_" + id).prop("disabled", true);
    } else {
        $("#addCurrentlyWorkingBtn_" + id).prop("disabled", false);
    }
}
var companyCount = 1;

function addmoreCompany() {
    var url;
    var fn;
    if (companyCount != 0 && companyCount <= 2) {
        companyCount++;
        var allworkedCompanyDetailsDiv = document.createElement("div");
        allworkedCompanyDetailsDiv.className = "row";
        allworkedCompanyDetailsDiv.id = "row_" + companyCount;
        allworkedCompanyDetailsDiv.style = "margin:4px 0";

        var allCompanyNameCol = document.createElement("div");
        allCompanyNameCol.className = "col-sm-3";
        allCompanyNameCol.id = "companyName";
        allworkedCompanyDetailsDiv.appendChild(allCompanyNameCol);

        var allworkedJobRoleCol = document.createElement("div");
        allworkedJobRoleCol.className = "col-sm-3";
        allworkedJobRoleCol.id = "workedJobRole";
        allworkedCompanyDetailsDiv.appendChild(allworkedJobRoleCol);

        var allWorkedCurrentltyCol = document.createElement("div");
        allWorkedCurrentltyCol.className = "col-sm-4";
        allWorkedCurrentltyCol.id = "workedCurrently";
        allWorkedCurrentltyCol.style = "padding-top:1%;text-align:center";
        allworkedCompanyDetailsDiv.appendChild(allWorkedCurrentltyCol);

        var allWorkedAddMoreCol = document.createElement("div");
        allWorkedAddMoreCol.className = "col-sm-2";
        allworkedCompanyDetailsDiv.appendChild(allWorkedAddMoreCol);

        var addCompanyName = document.createElement("input");
        addCompanyName.className = "form-control";
        addCompanyName.type = ("text");
        addCompanyName.placeholder = ("Company Name");
        addCompanyName.id = ("companyName_" + companyCount);
        allCompanyNameCol.appendChild(addCompanyName);

        var addJobRole = document.createElement("input");
        addJobRole.id = "workedJobRole_" + companyCount;
        addJobRole.onchange = enableAddBtn;
        allworkedJobRoleCol.appendChild(addJobRole);

        var addCurrentlyWorking = document.createElement("input");
        if (!$("#currentlyWorking").is(":checked")) {
            addCurrentlyWorking.disabled = true;
        } else {
            addCurrentlyWorking.disabled = false;
        }

        var addMore = document.createElement("button");
        addMore.className = "form-control";
        addMore.type = "button";
        addMore.setAttribute("disabled", true);
        addMore.id = "addCurrentlyWorkingBtn_" + companyCount;
        addMore.value = "Add";
        addMore.style = "background:#09ac58;color:#fff;font-size:12px";
        addMore.name = "Add";
        addMore.textContent = "Add Company";
        addMore.onclick = addmoreCompany;

        allWorkedAddMoreCol.appendChild(addMore);
        addCurrentlyWorking.type = ("radio");
        addCurrentlyWorking.style = "margin:0 4%";
        addCurrentlyWorking.id = ("addCurrentlyWorking_" + companyCount);
        addCurrentlyWorking.name = ("addCurrently_Working");
        allWorkedCurrentltyCol.appendChild(addCurrentlyWorking);

        var addCurrentlyWorkingLabel = document.createElement("label");
        addCurrentlyWorkingLabel.textContent = ("Is this your current company");
        addCurrentlyWorkingLabel.for = ("addCurrentlyWorking_" + companyCount);
        allWorkedCurrentltyCol.appendChild(addCurrentlyWorkingLabel);

        var previousButton = companyCount - 1;
        $('#companyDetailsCapture').append(allworkedCompanyDetailsDiv)
        $("#addCurrentlyWorkingBtn_" + previousButton).prop("disabled", true);
        url = '/getAllJobs ';
        fn = function(returnedData) {
            processAllJobRole(returnedData, companyCount);
            url = "";
        }
    } else {
        $.notify("Max 3 Addition Allowed", 'error');
    }
    if (url != null) {
        if (jobRoleArray == null || jobRoleArray.length == 0) {
            try {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: false,
                    async: false,
                    contentType: false,
                    processData: false,
                    success: fn
                });
            } catch (exception) {
                console.log("exception occured!!" + exception);
            }
        } else {
            fn(null);
        }

    }
}

function hideExperienceCaptureDiv() {
    if ($("#candidateFresh").is(":checked")) {
        $("#experienceDuration").css("display", "none");
        $("#experienceQuestion").css("display", "none");
        $("#experienceCurrently").css("display", "none");
        $('#companyDetailsCapture').hide();
    }
}

function showExperienceCaptureDiv() {
    if ($("#candidateExp").is(":checked")) {
        $("#experienceDuration").css("display", "block");
        $("#experienceQuestion").css("display", "block");
    }
}

function showExperienceBox() {
    var yearValue = $("#candidateTotalExperienceYear").val();
    var monthValue = $("#candidateTotalExperienceMonth").val();
    if (!isNaN(yearValue) && parseInt(yearValue) > 0 || !isNaN(monthValue) && parseInt(monthValue) > 0) {
        $("#companyDetailsCapture").css("display", "block");
        $("#experienceCurrently").css("display", "block");
    } else {
        $("#companyDetailsCapture").css("display", "none");
        $("#experienceCurrently").css("display", "none");
    }
}

function invalidSalary() {
    var salary = $('#candidateLastWithdrawnSalary').val();
    if (!isNaN(salary) && parseInt(salary) >= 1000 && parseInt(salary) <= 99000) {
        $("#invalidSalaryNotification").css("display", "none");
    } else {
        $("#invalidSalaryNotification").css("display", "block");
    }
}

function processInterviewBtn(returnedData, jobPostId) {
    if (returnedData != null) {
        if (returnedData.status == INTERVIEW_REQUIRED) {
            $("#preScreenInterviewSetBtn").html("Schedule Interview");
        } else {
            $("#preScreenInterviewSetBtn").html("Apply");
        }
    }
}

function submitPreScreen() {
    //console.log("submit prescreen");
}

(function() {
    $("#preScreenInterviewSetBtn").click(function() {
        var okToSubmit = true;
        var okToSubmitList = [];
        var dobCheck;
        var prevCompanyList = [];
        // all non-matching properId is available in propertyIdArray
        var d = {};
        var msg;

        // prep d
        $.each(propertyIdArray, function(index, propId) {
            okToSubmit = true;
            if (propId == 0) {
                var documentList = [];
                $('#document_details').each(function() {
                    $(this).find('input[type=checkbox]').each(function() {
                        var item = {};
                        var id;
                        id = $(this).attr('id').split("_").slice(-1).pop();

                        var isChecked = $('input#idProofCheckbox_' + id).is(':checked');
                        var isValid = validateInput(id, $('input#idProofValue_' + id).val().trim());
                        if (isValid && isChecked) {
                            item["idProofId"] = parseInt(id);
                            item["idNumber"] = $('input#idProofValue_' + id).val().trim();
                        } else if (isChecked && !isValid) {
                            okToSubmit = false;
                            $.notify("Please provide valid document details.", 'error');
                        }

                        if (!jQuery.isEmptyObject(item)) {
                            documentList.push(item);
                        };

                        if (!okToSubmit) {
                            var submit = {
                                propId: propId,
                                message: msg,
                                submissionStatus: okToSubmit
                            };
                            okToSubmitList.push(submit);
                        }
                    });
                });

                // documents
                d["idProofWithIdNumberList"] = documentList;
                //
                // if(documentList.length == 0) {
                //     // won't allow candidate to make submission without provide alteast one doc
                //     $.notify("Please provide your document details", 'error');
                //     okToSubmit = false;
                // }

            } else if (propId == 1) {
                var check;
                var languageMap = [];
                var languageKnown = $('#language_details input:checked').map(function() {
                    check = 0;
                    var id = this.id;
                    var name = this.name;
                    var item = {};
                    var pos;

                    for (var i in languageMap) {
                        if (languageMap[i].id == id) {
                            pos = i;
                            check = 1;
                            break;
                        }
                    }
                    if (check == 0) {
                        item["id"] = id;
                        item["u"] = 0;
                        item["rw"] = 0;
                        item["s"] = 0;
                        if (name == "u")
                            item["u"] = 1;
                        else if (name == "rw")
                            item["rw"] = 1;
                        else
                            item["s"] = 1;
                        languageMap.push(item);
                    } else {
                        if (name == "u")
                            languageMap[pos].u = 1;
                        else if (name == "rw")
                            languageMap[pos].rw = 1;
                        else
                            languageMap[pos].s = 1;
                    }
                }).get();

                d["candidateKnownLanguageList"] = languageMap;

                /*if(languageMap.length == 0) {
                    okToSubmit = false;
                    $.notify("Please provide all known languages", 'error');
                }*/
                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 2) {
                // asset
                var assetArrayList = [];
                $('#assets_details input:checked').each(function() {
                    var id = parseInt($(this).attr('id').split("_").slice(-1).pop());
                    assetArrayList.push(id);
                });

                d["assetIdList"] = assetArrayList;
                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 3) {
                // age submission
                if ($('#dob_day').val() == "Day" || $('#dob_month').val() == "Month" || $('#dob_year').val() == "Year") {
                    okToSubmit = false;
                } else {
                    var selectedDob = $('#dob_year').val() + "-" + $('#dob_month').val() + "-" + $('#dob_day').val();
                }
                if (selectedDob == "") {
                    okToSubmit = false;
                }
                var c_dob = String(selectedDob);
                var selectedDate = new Date(c_dob);
                var toDate = new Date();
                var pastDate = new Date(toDate.setFullYear(toDate.getFullYear() - 18)); // ex: if current year: 2016 || pastDate: 1998
                toDate = new Date(); //reset toDate to current Date
                var zombieYear = new Date(toDate.setFullYear(toDate.getFullYear() - 70)); // ex: if current year: 2016  || zombieYear: 1928
                toDate = new Date(); //reset toDate to current Date
                if (selectedDate >= pastDate) {
                    dobCheck = 0;
                    okToSubmit = false;
                }
                if (selectedDate <= zombieYear) {
                    dobCheck = 0;
                    okToSubmit = false;
                }
                d["candidateDob"] = c_dob;
                if (!okToSubmit) {
                    $.notify("Please provide valid Date of birth", 'error');
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 4) {
                /* calculate total experience in months */
                if (($('input:radio[name="candidateExperience"]:checked').length == 0)) {
                    okToSubmit = false;
                    $.notify("Please select Fresher/Experienced.", 'error');
                }
                var expMonth = parseInt($('#candidateTotalExperienceMonth').val());
                var expYear = parseInt($('#candidateTotalExperienceYear').val());
                var totalExp = expMonth + (12 * expYear);
                var isExpEmpty = ($('#candidateTotalExperienceMonth').val() == 0) && ($('#candidateTotalExperienceYear').val() == 0);
                if ($('input[id=candidateExp]').is(":checked") && isExpEmpty) {
                    $.notify("Please provide your total years of experience", 'error');
                    okToSubmit = false;
                }

                // are you currently working
                if ($('input[id=candidateExp]').is(":checked") && $('#currentlyWorking').is(":checked") &&
                    !$('input[name=addCurrently_Working]').is(":checked")) {
                    $.notify("Please provide your current company details and mark appropriately.", 'error');
                    okToSubmit = false;
                }

                var i = 1;
                prevCompanyList = [];
                for (i; i <= 3; i++) {
                    var item = {};
                    if ($('#companyName_' + i).val() == "" && $('#workedJobRole_' + i).val() > 0) {
                        msg = "please provide company name";
                        $.notify("please provide company name", 'error');
                        okToSubmit = false;
                    }
                    if ($('#companyName_' + i).val() != "" && $('#workedJobRole_' + i).val() < 0) {
                        msg += " | please provide Job Role";

                        $.notify("please provide Job Role", 'error');
                        okToSubmit = false;
                    }
                    if ($('#companyName_' + i).val() != "" && $('#workedJobRole_' + i).val() > 0) {
                        item["companyName"] = $('#companyName_' + i).val();
                        item["jobRoleId"] = $('#workedJobRole_' + i).val();
                        item["current"] = $('#addCurrentlyWorking_' + i).is(":checked");
                    }
                    if (!jQuery.isEmptyObject(item)) {
                        prevCompanyList.push(item);
                    }
                }

                d["candidateTotalExperience"] = totalExp;
                d["pastCompanyList"] = prevCompanyList;
                d["candidateIsEmployed"] = $('#currentlyWorking').is(":checked");
                d["extraDetailAvailable"] = true;

                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }

            } else if (propId == 5) {
                d["candidateEducationLevel"] = $('#candidateHighestEducation').val();
                d["candidateDegree"] = ($('#candidateHighestDegree').val());
                d["candidateEducationInstitute"] = $('#candidateEducationInstitute').val();
                d["candidateEducationCompletionStatus"] = parseInt($('input:radio[name="candidateEducationCompletionStatus"]:checked').val());

                if ($('#candidateHighestEducation').val() == "-1" || $('#candidateHighestEducation').val() > 3 ||
                    $('input:radio[name="candidateEducationCompletionStatus"]:checked').val() == null) {
                    if (($('#candidateHighestDegree').val()) == "-1" ||
                        $('#candidateEducationInstitute').val() == "") {
                        okToSubmit = false;
                        $.notify("Please provide full education details", 'error');

                    }
                }

                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 6) {
                d["candidateGender"] = ($('input:radio[name="gender"]:checked').val());
                if (($('input:radio[name="gender"]:checked').length == 0)) {
                    okToSubmit = false;
                    $.notify("Please provide your gender details", 'error');
                }
                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: msg,
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 7) {
                var salary = $('#candidateLastWithdrawnSalary').val();
                if (!isNaN(salary) && parseInt(salary) >= 1000 && parseInt(salary) <= 100000) {
                    d["candidateLastWithdrawnSalary"] = parseInt($('#candidateLastWithdrawnSalary').val());
                } else {
                    okToSubmit = false;
                    $.notify("Please enter a valid 'Last Withdrawn Salary' per month. (Min: 1000, Max: 1,00,000)", 'error');
                    if (!okToSubmit) {
                        var submit = {
                            propId: propId,
                            message: "Please enter a valid 'Last Withdrawn Salary' per month. (Min: 1000, Max: 1,00,000)",
                            submissionStatus: okToSubmit
                        };
                        okToSubmitList.push(submit);
                    }
                }
            } else if (propId == 8) {
                var lId = $('#candidateHomeLocality').val();
                if (lId == null) {
                    okToSubmit = false;
                    $.notify("Please enter a valid Locality", 'error');
                } else {
                    d["candidateHomeLocality"] = parseInt(lId);
                }
                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: "Please enter a valid Home locality",
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            } else if (propId == 9) {
                var timeShiftPrefId = $('#candidateTimeShiftPref').val();
                if (timeShiftPrefId == "-1") {
                    okToSubmit = false;
                    $.notify("Please enter a valid time/shift preference (ex: Part time, Full time)", 'error');
                } else {
                    d["candidateTimeShiftPref"] = $('#candidateTimeShiftPref').val();
                }
                if (!okToSubmit) {
                    var submit = {
                        propId: propId,
                        message: "Please enter a valid time preference",
                        submissionStatus: okToSubmit
                    };
                    okToSubmitList.push(submit);
                }
            }
        });

        // ajax to submit d
        var isSupport = false;
        if (okToSubmitList.length == 0) {
            // disable apply btn when its okay to submit (i.e submission is validated)..
            $("#preScreenInterviewSetBtn").prop("disabled", true);
            $("#preScreenInterviewSetBtn").click(function() {
                return false
            });
            $("#preScreenInterviewSetBtn").unbind();
            $("#preScreenInterviewSetBtn").removeAttr("onclick");

            try {
                $.ajax({
                    type: "POST",
                    url: "/updateCandidateDetailsViaPreScreen/?propertyIdList=" + propertyIdArray + "&candidateMobile=" + localStorage.getItem("mobile") + "&jobPostId=" + jpId,
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(d),
                    success: function(returnedData) {
                        if (returnedData.status == INTERVIEW_REQUIRED) {
                            $("#preScreenModal").modal('hide');
                            initInterviewModal(candidateId, jpId, isSupport);
                        } else if (returnedData.status == INTERVIEW_NOT_REQUIRED) {
                            $("#preScreenModal").modal('hide');

                            $("#postApplyMsg").html("We have received your job application. You can contact the recruiter directly on " +
                                jobPostInfo.recruiterProfile.recruiterProfileMobile);

                            $("#confirmationModal").modal("show");

                            $.notify("Successfully Submitted Application form. Thanks !", 'success');
                        } else {
                            $.notify("Something went wrong. Please try again !", 'success');
                        }
                    }
                });
            } catch (exception) {
                console.log("exception occured!!" + exception);
            }
            return true;
        }
    });
})();
>>>>>>> 678a02620aa44ab1813fad50f725ff7905ab95f6

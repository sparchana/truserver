<<<<<<< HEAD
function checkOnFilterChange(){app.do.updateOnFilterChange()}function getJob(){return app.render.renderJobRole(),app.allJobRole}function getLocality(){return void 0,app.allLocationArray}function openLogin(){$("#signInPopup").html("Sign In"),document.getElementById("resetCheckUserBtn").disabled=!1,document.getElementById("resetNewPasswordBtn").disabled=!1,$("#form_login_candidate").show(),$("#noUserLogin").hide(),$("#incorrectMsgLogin").hide(),$("#form_forgot_password").hide(),$("#errorMsgReset").hide(),$("#form_password_reset_otp").hide(),$("#form_password_reset_new").hide(),$("#noPasswordLogin").hide()}function openSignUp(){$("#myLoginModal").modal("hide")}function showSort(){countSort+=1,1==countSort&&($("#sortMainBox").show(),$("#filterMainBox").hide()),2==countSort&&($("#sortMainBox").hide(),$("#filterMainBox").hide(),countSort=0)}function showFilter(){countFilter+=1,1==countFilter&&($("#sortMainBox").hide(),$("#filterMainBox").show()),2==countFilter&&($("#filterMainBox").hide(),$("#sortMainBox").hide(),countFilter=0)}var app=function(e){"use strict";function n(e){return!e||0===e.length}String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1)},String.prototype.toTitleCase=function(){return this.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})};var o={D_SEARCH_URL:"jobs-in-bangalore",D_SEARCH_KEYWORD_IDENTIFIER:"jobs-in-bangalore",D_LOCALITY_IDENTIFIER:"near-",D_EDU_IDENTIFIER:"-pass",D_EXP_IDENTIFIER:"-experience",D_JOBS_PER_PAGE:0,D_EDU_ANY:{},D_EXP_ANY:{},D_LOCATION_ALL_BANGALORE:{}},t={urlHistoryArray:[],isNavBarLoaded:!1,isUserLoggedIn:!1,prevUserLoginStatus:null,hasLoginStatusChanged:!1,shouldDoSearch:!0,allJobRole:[],allLocation:[],allLocationArray:[],allEducation:[],allExperience:[],allLanguage:[],allSalaryOptions:[{id:0,name:" Any"},{id:8,name:" More than 8000"},{id:10,name:" More than 10000"},{id:12,name:" More than 12000"},{id:15,name:" More than 15000"},{id:20,name:" More than 20000"}],suggestion:null,currentURL:window.location.pathname,currentSearchURL:window.location.pathname.split("/")[window.location.pathname.split("/").length-2],currentSearchParams:{},currentFilterParams:{selectedGender:null,selectedSalary:0,selectedLanguageIdList:[]},currentSortParams:{sortBy:5},page:1,isPaginationEnabled:!1,bMethods:{init:function(){void 0,t.page=1,t.currentSearchURL!=o.D_SEARCH_URL&&t.do.prepareSearchParamFromURL(),t.render.renderTextSearch(),t.render.renderLocation(),t.render.renderEducation(),t.render.renderExperience(),t.render.renderLanguage(),t.render.renderSalaryFilter(),t.run.urlChangeDetector(),t.do.search(!0,!1),document.getElementById("sortByRelevance").checked=!0},getAllJobRole:function(){return 0==t.allJobRole.length?e.ajax({type:"POST",url:"/getAllJobs"}):new Promise(function(e,n){e(null)})},getAllLocation:function(){return 0==t.allLocation.length?e.ajax({type:"POST",url:"/getAllLocality"}):new Promise(function(e,n){e(null)})},getAllEducation:function(){return 0==t.allEducation.length?e.ajax({type:"POST",url:"/getAllEducation"}):new Promise(function(e,n){e(null)})},getAllExperience:function(){return 0==t.allExperience.length?e.ajax({type:"POST",url:"/getAllExperience"}):new Promise(function(e,n){e(null)})},getAllLanguage:function(){return 0==t.allLanguage.length?e.ajax({type:"POST",url:"/getAllLanguage"}):new Promise(function(e,n){e(null)})}},render:{renderLoaderStart:function(){void 0,e("#backgroundLoader").show(),e("#jobLoaderDiv").show()},renderLoaderStop:function(){void 0,e("#backgroundLoader").hide(),e("#jobLoaderDiv").hide()},renderJobRole:function(){new Promise(function(e,n){t.bMethods.getAllJobRole().then(function(n){null!=n&&n.forEach(function(e){var n=e.jobRoleId,o=e.jobName,a={};a.id=n,a.name=o,t.allJobRole.push(a)}),e()},function(e,o,t){n(t)})})},renderLocation:function(n){if(null!=n)void 0,e("#searchLocation").tokenize({displayDropdownOnFocus:!0,placeholder:"Location",newElements:!0,nbDropdownElements:1e3,maxElements:1}).tokenRemove(e("#searchLocation").val()[0]).tokenAdd(n.localityId,n.localityName);else if(0==e("#searchLocation option[value='1']").length){var a=new Promise(function(e,n){t.bMethods.getAllLocation().then(function(n){null!=n&&n.forEach(function(e){t.allLocation.push(e)}),e()},function(e,o,t){n(t)})});a.then(function(){void 0,o.D_LOCATION_ALL_BANGALORE={id:"0",name:"All Bangalore"};var n=e('<option value="0"></option>').text("All Bangalore");e("#searchLocation").append(n),t.allLocationArray=[],t.allLocation.forEach(function(o){var a=o.localityId,r=o.localityName;n=e("<option value="+a+"></option>").text(r),e("#searchLocation").append(n);var i={};i.id=a,i.name=r,t.allLocationArray.push(i)}),void 0,e("#searchLocation").tokenize({displayDropdownOnFocus:!0,placeholder:"Location",newElements:!0,nbDropdownElements:1e3,maxElements:1}),e("#searchLocation").tokenize().tokenRemove("0"),e("#searchLocation").tokenize().tokenAdd(o.D_LOCATION_ALL_BANGALORE.id,o.D_LOCATION_ALL_BANGALORE.name)}).catch(function(e){void 0})}},renderEducation:function(n){if(null!=n)void 0,e("#searchEducation").tokenize({displayDropdownOnFocus:!0,placeholder:"Education",nbDropdownElements:1e3,maxElements:1}).tokenRemove(e("#searchEducation").val()[0]).tokenAdd(n.educationId,n.educationName);else if(0==e("#searchEducation option[value='1']").length){var a=new Promise(function(e,n){t.bMethods.getAllEducation().then(function(n){null!=n&&n.forEach(function(e){t.allEducation.push(e)}),e()},function(e,o,t){n(t)})});a.then(function(){void 0;var n,a={},r=null;t.allEducation.forEach(function(t){var i=t.educationId,l=t.educationName;n=e("<option value="+i+"></option>").text(l),e("#searchEducation").append(n),null==r&&(r=i),"Any"==l&&(void 0,a={id:i,name:l},o.D_EDU_ANY=a)}),e("#searchEducation").tokenize({displayDropdownOnFocus:!0,placeholder:"Education",newElements:!0,nbDropdownElements:1e3,maxElements:1}),e("#searchEducation").tokenize().tokenRemove(r),e("#searchEducation").tokenize().tokenAdd(o.D_EDU_ANY.id,o.D_EDU_ANY.name)}).catch(function(e){void 0})}},renderExperience:function(n){if(null!=n)e("#searchExperience").tokenize({displayDropdownOnFocus:!0,placeholder:"Experience",nbDropdownElements:1e3,maxElements:1}).tokenRemove(e("#searchExperience").val()[0]).tokenAdd(n.experienceId,n.experienceType);else if(0==e("#searchExperience option[value='1']").length){var a=new Promise(function(e,n){t.bMethods.getAllExperience().then(function(n){null!=n&&n.forEach(function(e){t.allExperience.push(e)}),e()},function(e,o,t){n(t)})});a.then(function(){void 0;var n,a={},r=null;t.allExperience.forEach(function(t){var i=t.experienceId,l=t.experienceType;n=e("<option value="+i+"></option>").text(l),null==r&&(r=i),"Any"==t.experienceType&&(void 0,a={id:i,name:l},o.D_EXP_ANY=a),e("#searchExperience").append(n)}),e("#searchExperience").tokenize({displayDropdownOnFocus:!0,placeholder:"Experience",newElements:!0,nbDropdownElements:1e3,maxElements:1}),e("#searchExperience").tokenize().tokenRemove(r),e("#searchExperience").tokenize().tokenAdd(o.D_EXP_ANY.id,o.D_EXP_ANY.name)}).catch(function(e){void 0})}},renderLanguage:function(){var n=new Promise(function(e,n){t.bMethods.getAllLanguage().then(function(n){null!=n&&n.forEach(function(e){t.allLanguage.push(e)}),e()},function(e,o,t){n(t)})});n.then(function(){void 0;var n=e("#languageFilterDiv");t.allLanguage.forEach(function(e){var o=document.createElement("div");n.append(o);var t=document.createElement("input");t.type="checkbox",t.onclick=function(){checkOnFilterChange()},t.id="lang_"+e.languageId,t.setAttribute("value",e.languageId),o.appendChild(t);var a=document.createElement("label");a.style="font-size: 14px",a.setAttribute("for","lang_"+e.languageId),a.textContent=e.languageName,o.appendChild(a)})}).catch(function(e){void 0})},renderSalaryFilter:function(){void 0;var n=e("#salaryFilterDiv");t.allSalaryOptions.forEach(function(e){var o=document.createElement("div");n.append(o);var t=document.createElement("input");t.type="radio",t.name="salaryFilter",t.id="sal_"+e.id,t.setAttribute("value",e.name),o.appendChild(t);var a=document.createElement("label");a.style="font-size: 14px",a.setAttribute("for","sal_"+e.id),a.textContent=e.name,o.appendChild(a)}),document.getElementById("sal_0").checked=!0},renderTextSearch:function(){var n=e("#searchText");n.val().split(",");return null==t.suggestion&&(t.suggestion=new Awesomplete("input[data-multiple]",{minChars:1,autoFirst:!0,filter:function(e,n){return Awesomplete.FILTER_CONTAINS(e,n.match(/[^,]*$/)[0])},replace:function(e){var n=this.input.value.match(/^.+,\s*|/)[0];this.input.value=n+e+", "}}),e(".awesomplete").css("width","100%")),null==n.val()||n.val().length<3?void void 0:void e.ajax({url:"/ss/?key="+n.val(),type:"GET",dataType:"json"}).success(function(o){var a=[];e.each(o,function(e,o){n.val().toLowerCase().indexOf(o.toLowerCase()+",")>=0||a.push(o)}),t.suggestion.list=a,null!=t.suggestion.list&&0==t.suggestion.list.length})}},do:{fillSearchTextBoxWithKeywords:function(e){var n=e.join(" ")+", ";document.getElementById("searchText").value=n.toTitleCase(),", "==document.getElementById("searchText").value&&(document.getElementById("searchText").value="",document.getElementById("searchText").placeholder="Type company name or job role or title")},search:function(n,o){if(t.render.renderLoaderStart(),!t.shouldDoSearch)return void 0,void t.render.renderLoaderStop();void 0,n&&t.run.basicReset(o);var a={searchParamRequest:t.currentSearchParams,filterParamRequest:t.currentFilterParams,sortParamRequest:t.currentSortParams,currentSearchURL:t.currentSearchURL};void 0,e.ajax({type:"POST",url:"/api/search/?page="+t.page,async:!0,contentType:"application/json; charset=utf-8",data:JSON.stringify(a),success:function(e){t.do.parseSearchResponse(e),t.render.renderLoaderStop()},error:function(e,n,o){void 0,t.render.renderLoaderStop()}})},renderHTMLTitle:function(e){t.htmlTitle=e,document.title=t.htmlTitle},prepNmodifyURL:function(){return t.do.modifyURL(t.do.prepareURL())},modifyURL:function(e){var n={url:"/s/"+e};return null!=history.state&&n.url===history.state.url||(window.history.pushState(n,"Title","/s/"+e),t.urlHistoryArray.push(n)),"/s/"+e},prepareURL:function(){var e=document.getElementById("searchText").value;null==e&&""==e.trim()||(e+="-'"),e+=o.D_SEARCH_KEYWORD_IDENTIFIER,e=e.replace(/[^a-z0-9]+/gi,"-"),e=e.replace(/^(-)+/,"");var n=document.getElementById("searchLocation"),t=n.options[n.selectedIndex];0!=n.value&&null!=t&&(e+="_"+o.D_LOCALITY_IDENTIFIER+t.innerHTML.replace(/\s+/g,"-"));var a=document.getElementById("searchEducation");t=a.options[a.selectedIndex],0!=a.value&&null!=t&&"any"!=t.innerHTML.toLowerCase()&&(e+="_for-"+t.innerHTML.replace(/[^a-z0-9]+/gi,"-")+o.D_EDU_IDENTIFIER);var r=document.getElementById("searchExperience");return t=r.options[r.selectedIndex],0!=r.value&&null!=t&&"any"!=t.innerHTML.toLowerCase()&&(e+="_for-"+t.innerHTML.replace(/[^a-z0-9]+/gi,"-")+o.D_EXP_IDENTIFIER),(e+"/").toLowerCase()},prepareSearchParamFromURL:function(){try{var e=window.location.pathname.split("/"),a=e[e.length-2];if(t.currentSearchParams={},null!=a){if(t.currentSearchURL=a,a.indexOf(o.D_SEARCH_KEYWORD_IDENTIFIER)<0)return void t.do.noJobsFound(!0);t.do.noJobsFound(!1);var r,i=a.split("_");for(r=0;r<i.length;r++)if(!n(i[r])){var l=i[r];l.search(o.D_SEARCH_KEYWORD_IDENTIFIER)!=-1?(l=l.replace(o.D_SEARCH_KEYWORD_IDENTIFIER,""),l=l.trim(),l.length>0&&(l=l.split("-"),t.currentSearchParams.keywordList=l)):l.search(o.D_LOCALITY_IDENTIFIER)!=-1?(l=l.replace(o.D_LOCALITY_IDENTIFIER,""),n(l)||(t.currentSearchParams.locationName=l.replace(/[^a-z0-9]+/gi," ").trim())):l.search(o.D_EDU_IDENTIFIER)!=-1?(l=l.replace(o.D_EDU_IDENTIFIER,""),l=l.replace("for",""),l=l.trim(),n(l)||(t.currentSearchParams.educationText=l.replace(/[^a-z0-9]+/gi," ").trim())):l.search(o.D_EXP_IDENTIFIER)!=-1&&(l=l.replace(o.D_EXP_IDENTIFIER,""),l=l.replace("for",""),n(l)||(t.currentSearchParams.experienceText=l.replace(/[^a-z0-9]+/gi," ").trim()))}}}catch(e){void 0}},noJobsFound:function(n){n?(e("#noJobsDiv").show(),e("#job_cards_inc").hide(),e("#jobCardControl").hide(),t.shouldDoSearch=!1):(e("#noJobsDiv").hide(),e("#job_cards_inc").show(),e("#jobCardControl").show(),t.shouldDoSearch=!0),e("#hotJobs").html(""),t.render.renderLoaderStop()},parseSearchResponse:function(n){if(void 0,null!=n){if(t.isUserLoggedIn=n.isUserLoggedIn,null==t.prevUserLoginStatus&&(t.prevUserLoginStatus=t.isUserLoggedIn),t.prevUserLoginStatus!=t.isUserLoggedIn&&(t.prevUserLoginStatus=t.isUserLoggedIn,t.hasLoginStatusChanged=!0),t.isNavBarLoaded&&!t.hasLoginStatusChanged||(t.hasLoginStatusChanged=!1,t.isUserLoggedIn?e("#nav_bar_inc").load("/navBarLoggedIn"):e("#nav_bar_inc").load("/navBar"),t.isNavBarLoaded=!0),t.render.renderLocation(n.searchParams.locality),t.render.renderEducation(n.searchParams.education),t.render.renderExperience(n.searchParams.experience),t.mark.selectedLanguageFilter(n.filterParams.languageList),t.mark.selectedGenderFilter(n.filterParams.gender),t.do.fillSearchTextBoxWithKeywords(n.searchParams.searchKeywords),void 0,n.isURLInvalid)return void t.do.noJobsFound(!0);t.do.noJobsFound(!1),n.htmlTitle&&t.do.renderHTMLTitle(n.htmlTitle);var a=n.results.allJobPost,r=Object.keys(a).length;if(r>0){0==o.D_JOBS_PER_PAGE&&(o.D_JOBS_PER_PAGE=parseInt(n.results.jobsPerPage),void 0);var i=Math.floor(parseInt(n.results.totalJobs)/o.D_JOBS_PER_PAGE),l=parseInt(n.results.totalJobs)%o.D_JOBS_PER_PAGE;l>0&&i++,void 0,t.isPaginationEnabled||t.do.pagination(i),e("#job_cards_inc").show(),e("#jobCardControl").show(),e("#hotJobs").html("");var c=e("#hotJobs"),s=document.createElement("div");s.id="backgroundLoader",c.append(s),e("#jobLoaderDiv").hide(),e("#noJobsDiv").hide();t.currentSearchURL.capitalizeFirstLetter().replace(/[^a-z0-9]+/gi," ");t.do.createAndAppendDivider(" Showing "+parseInt(5*(t.page-1)+1)+"-"+parseInt(5*(t.page-1)+parseInt(a.length))+" of "+n.results.totalJobs+" jobs matching your search"),genNewJobCard(a,c)}else e("#job_cards_inc").hide(),e("#jobCardControl").hide(),e("#jobLoaderDiv").hide(),e("#noJobsDiv").show();return t.do.modifyURL(t.do.prepareURL())}e(".first").hide(),e(".last").hide(),e(".prev a").html("<<"),e(".next a").html(">>")},pagination:function(n){void 0,e("#jobCardControl").twbsPagination("destroy"),e("#jobCardControl").twbsPagination({totalPages:n,visiblePages:5,onPageClick:function(n,o){o>0&&(void 0,t.page=o),t.isPaginationEnabled&&t.do.search(!1,!0),e(".page-link").click(function(){e("html, body").animate({scrollTop:e("#job_cards_inc").offset().top-100},800)}),e(".first").hide(),e(".last").hide(),e(".prev a").html("<<"),e(".next a").html(">>")}}),t.isPaginationEnabled=!0},createAndAppendDivider:function(n){var o=e("#hotJobs"),t=document.createElement("div");t.id="hotJobItemDivider",t.style="padding:1% 2% 1% 1%",o.append(t);var a=document.createElement("span");a.setAttribute("display","inline-block"),a.textContent=n,t.appendChild(a)},updateOnFilterChange:function(){void 0,t.currentFilterParams.selectedLanguageIdList=[],e("#languageFilterDiv input:checked").each(function(){void 0,t.currentFilterParams.selectedLanguageIdList.push(parseInt(e(this).attr("value")))}),t.currentFilterParams.selectedLanguageIdList.length>0?e("#language_filter").show():e("#language_filter").hide(),t.do.search(!0,!0)},updateGenderFilter:function(n){e("#gender_filter").show(),t.currentFilterParams.selectedGender=n,void 0,t.do.search(!0,!0)},updateSalaryFilter:function(n){e("#salary_filter").show(),t.currentFilterParams.selectedSalary=1e3*parseInt(n),void 0,t.do.search(!0,!0)},updateSortBy:function(e){t.currentSortParams.sortBy=parseInt(e),void 0,t.do.search(!0,!0)},resetFilters:function(){void 0,e("#gender_filter").hide(),e("#salary_filter").hide(),e("#language_filter").hide(),e("input:checkbox").removeAttr("checked"),e("input:radio").removeAttr("checked"),document.getElementById("sortByRelevance").checked=!0,document.getElementById("sal_0").checked=!0,t.currentFilterParams.selectedGender=null,t.currentFilterParams.selectedLanguageIdList=[],t.currentSortParams.sortBy=5,t.do.search(!0,!0)}},mark:{selectedLanguageFilter:function(e){null!=e&&0!=e.length&&e.forEach(function(e){document.getElementById("lang_"+e.languageId).checked=!0})},selectedGenderFilter:function(e){null!=e&&2!=e&&(document.getElementById("gender_"+e).checked=!0)}},run:{validateEducation:function(e){return null!=e?e.educationName:"NA"},validateWorkShift:function(e){return null==e?"":e.timeShiftName?e.timeShiftName:void 0},searchValidation:function(){},urlValidation:function(){},urlChangeDetector:function(){window.history&&window.history.pushState&&e(window).on("popstate",function(){t.urlHistoryArray.pop(),void 0,0==t.urlHistoryArray.length?history.back():(t.do.prepareSearchParamFromURL(),t.do.search(!1,!1))})},validateGender:function(e){return null==e||2==e?"Any":0==e?"Male":1==e?"Female":""},validateMaxAge:function(e){return null==e?"":e},basicReset:function(n){void 0,n&&e("html, body").animate({scrollTop:e("#job_cards_inc").offset().top-100},800),t.page=1,t.isPaginationEnabled=!1,null==e("#searchLocation").val()&&e("#searchLocation").tokenize({displayDropdownOnFocus:!0,placeholder:"Location",nbDropdownElements:1e3,maxElements:1}).tokenAdd(o.D_LOCATION_ALL_BANGALORE.id,o.D_LOCATION_ALL_BANGALORE.name),null==e("#searchEducation").val()&&e("#searchEducation").tokenize({displayDropdownOnFocus:!0,placeholder:"Education",nbDropdownElements:1e3,maxElements:1}).tokenAdd(o.D_EDU_ANY.id,o.D_EDU_ANY.name),null==e("#searchExperience").val()&&e("#searchExperience").tokenize({displayDropdownOnFocus:!0,placeholder:"Experience",nbDropdownElements:1e3,maxElements:1}).tokenAdd(o.D_EXP_ANY.id,o.D_EXP_ANY.name)}},parse:{createdOnDate:function(e){var n=new Date(e),o=new Date,a=t.parse.daysDiff(n,o);return a>90?" 3 months ago":n.getDate()==o.getUTCDate()?" Today":a+" days ago"},daysDiff:function(e,n){return Math.round((n-e)/864e5)}}};return e("#job_cards_inc").load("/jobPostCardView"),t.bMethods.init(),document.getElementById("resetFilters").addEventListener("click",function(){t.do.resetFilters()}),document.getElementById("searchBtn").addEventListener("click",function(){t.page=1,t.currentURL=t.do.prepNmodifyURL(),t.do.prepareSearchParamFromURL(),t.do.search(!0,!1)}),document.getElementById("scrollToTop").addEventListener("click",function(){e("body").scrollTop(0)}),e("#searchText").on("keyup",function(e){e.keyCode>=32&&e.keyCode<=47||13==e.keyCode||t.render.renderTextSearch()}),e("input[name=filterGender]:radio").change(function(){t.do.updateGenderFilter(this.value),void 0}),e("input[name=salaryFilter]:radio").change(function(){t.do.updateSalaryFilter(this.id.split("_")[1]),void 0}),e("input[name=sortBy]:radio").change(function(){t.do.updateSortBy(this.value),void 0}),e("#footer_inc").load("/footer"),t}(jQuery),countSort=0,countFilter=0;
=======
/*
 * truSearch: TruJobs Search plugin
 * Version 1.0.0
 *
 * Copyright (c) 2016 TruJobs.in (http://trujobs.in)
 *
 * Created by zero on 23/12/16.
 *
 */

var app = (function($) {
    'use strict';

    String.prototype.capitalizeFirstLetter = function() {
        return this.charAt(0).toUpperCase() + this.slice(1);
    };

    String.prototype.toTitleCase = function() {
        return this.replace(/\w\S*/g, function(txt) {
            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
        });
    };
    var DEFAULT_VALUES = {
        D_SEARCH_URL: "jobs-in-bangalore",
        D_SEARCH_KEYWORD_IDENTIFIER: "jobs-in-bangalore",
        D_LOCALITY_IDENTIFIER: "near-",
        D_EDU_IDENTIFIER: "-pass",
        D_EXP_IDENTIFIER: "-experience",
        D_JOBS_PER_PAGE: 0,
        D_EDU_ANY: {},
        D_EXP_ANY: {},
        D_LOCATION_ALL_BANGALORE: {}
    };
    var app = {
        urlHistoryArray: [],
        isNavBarLoaded: false,
        isUserLoggedIn: false,
        prevUserLoginStatus: null,
        hasLoginStatusChanged: false,
        shouldDoSearch: true,
        allJobRole: [],
        allLocation: [],
        allLocationArray: [],
        allEducation: [],
        allExperience: [],
        allLanguage: [],
        allSalaryOptions: [{
                id: 0,
                name: " Any"
            }, {
                id: 8,
                name: " More than 8000"
            }, // value = val * 1000
            {
                id: 10,
                name: " More than 10000"
            }, {
                id: 12,
                name: " More than 12000"
            }, {
                id: 15,
                name: " More than 15000"
            }, {
                id: 20,
                name: " More than 20000"
            }
        ],
        suggestion: null,
        currentURL: window.location.pathname,
        currentSearchURL: window.location.pathname.split('/')[window.location.pathname.split('/').length - 2],
        currentSearchParams: {},
        currentFilterParams: {
            selectedGender: null,
            selectedSalary: 0, // any
            selectedLanguageIdList: []
        },
        currentSortParams: {
            sortBy: 5 // default set to sort by relevance
        },
        page: 1,
        isPaginationEnabled: false,

        // basic getter/setter types method
        bMethods: {
            init: function() {
                console.log("init");
                app.page = 1;
                if (!(app.currentSearchURL == DEFAULT_VALUES.D_SEARCH_URL)) {
                    app.do.prepareSearchParamFromURL();
                }
                app.render.renderTextSearch();
                app.render.renderLocation();
                app.render.renderEducation();
                app.render.renderExperience();

                // render filter paramas
                app.render.renderLanguage();
                app.render.renderSalaryFilter();
                app.run.urlChangeDetector();

                app.do.search(true, false);

                document.getElementById('sortByRelevance').checked = true;
            },
            getAllJobRole: function() {
                //ajax call and save data to allJobRole
                if (app.allJobRole.length == 0) {
                    return $.ajax({
                        type: 'POST',
                        url: '/getAllJobs'
                    });
                } else {
                    // new promise says its already there
                    return new Promise(function(resolve, reject) {
                        resolve(null);
                    });
                }
            },
            getAllLocation: function() {
                //ajax call || its a promise
                if (app.allLocation.length == 0) {
                    return $.ajax({
                        type: 'POST',
                        url: '/getAllLocality'
                    });
                } else {
                    // new promise says its already there
                    return new Promise(function(resolve, reject) {
                        resolve(null);
                    });
                }
            },
            getAllEducation: function() {
                //ajax call and save data to allEducation
                if (app.allEducation.length == 0) {
                    return $.ajax({
                        type: 'POST',
                        url: '/getAllEducation'
                    });
                } else {
                    // new promise says its already there
                    return new Promise(function(resolve, reject) {
                        resolve(null);
                    });
                }
            },
            getAllExperience: function() {
                //ajax call and save data to allExperience
                if (app.allExperience.length == 0) {
                    return $.ajax({
                        type: 'POST',
                        url: '/getAllExperience'
                    });
                } else {
                    // new promise says its already there
                    return new Promise(function(resolve, reject) {
                        resolve(null);
                    });
                }
            },
            getAllLanguage: function() {
                //ajax call and save data to allExperience
                if (app.allLanguage.length == 0) {
                    return $.ajax({
                        type: 'POST',
                        url: '/getAllLanguage'
                    });
                } else {
                    // new promise says its already there
                    return new Promise(function(resolve, reject) {
                        resolve(null);
                    });
                }
            }
        },
        // basic ui rendering methods
        render: {
            renderLoaderStart: function() {
                console.log("start loader");
                $("#backgroundLoader").show();
                $("#jobLoaderDiv").show();
            },
            renderLoaderStop: function() {
                console.log("stop loader");
                $("#backgroundLoader").hide();
                $("#jobLoaderDiv").hide();
            },
            renderJobRole: function() {
                var promise = new Promise(function(resolve, reject) {
                    app.bMethods.getAllJobRole().then(
                        function(returnedData) {
                            if (returnedData != null) {
                                returnedData.forEach(function(jobRole) {
                                    var id = jobRole.jobRoleId;
                                    var name = jobRole.jobName;
                                    var item = {};
                                    item["id"] = id;
                                    item["name"] = name;
                                    app.allJobRole.push(item);
                                });
                            }
                            resolve();
                        },
                        function(xhr, state, error) {
                            reject(error);
                        }
                    );
                });

            },
            renderLocation: function(locality) {
                if (locality != null) {
                    console.log('re render with localityname; ' + locality.localityName);
                    $('#searchLocation').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Location",
                        newElements: true,
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenRemove($('#searchLocation').val()[0]).tokenAdd(locality.localityId, locality.localityName);
                }
                // this if check prevents static token suggestion from being duplicated
                else if ($("#searchLocation option[value='1']").length == 0) {
                    var promise = new Promise(function(resolve, reject) {
                        app.bMethods.getAllLocation().then(
                            function(returnedData) {
                                if (returnedData != null) {
                                    returnedData.forEach(function(locality) {
                                        app.allLocation.push(locality);
                                    });
                                }
                                resolve();
                            },
                            function(xhr, state, error) {
                                reject(error);
                            }
                        );
                    });

                    promise.then(function() {
                        console.log("render location");
                        DEFAULT_VALUES.D_LOCATION_ALL_BANGALORE = {
                            id: "0",
                            name: "All Bangalore"
                        };
                        var option = $('<option value="0"></option>').text("All Bangalore");
                        $('#searchLocation').append(option);

                        app.allLocationArray = [];
                        app.allLocation.forEach(function(locality) {
                            var id = locality.localityId;
                            var name = locality.localityName;
                            option = $('<option value=' + id + '></option>').text(name);
                            $('#searchLocation').append(option);

                            var item = {};
                            item["id"] = id;
                            item["name"] = name;
                            app.allLocationArray.push(item);
                        });

                        console.log("app.allLocation size: " + app.allLocation.length);
                        $('#searchLocation').tokenize({
                            displayDropdownOnFocus: true,
                            placeholder: "Location",
                            newElements: true,
                            nbDropdownElements: 1000,
                            maxElements: 1
                        });

                        $('#searchLocation').tokenize().tokenRemove('0');
                        $('#searchLocation').tokenize().tokenAdd(DEFAULT_VALUES.D_LOCATION_ALL_BANGALORE.id, DEFAULT_VALUES.D_LOCATION_ALL_BANGALORE.name);

                    }).catch(function(fromReject) {
                        console.log(fromReject);
                    });
                }
            },
            renderEducation: function(education) {

                if (education != null) {
                    console.log('re render with education; ' + education.educationName);
                    $('#searchEducation').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Education",
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenRemove($('#searchEducation').val()[0]).tokenAdd(education.educationId, education.educationName);
                }
                // this if check prevents static token suggestion from being duplicated
                else if ($("#searchEducation option[value='1']").length == 0) {

                    var promise = new Promise(function(resolve, reject) {
                        app.bMethods.getAllEducation().then(
                            function(returnedData) {
                                if (returnedData != null) {
                                    returnedData.forEach(function(education) {
                                        app.allEducation.push(education);
                                    });
                                }
                                resolve();
                            },
                            function(xhr, state, error) {
                                reject(error);
                            }
                        );
                    });

                    promise.then(function() {
                        console.log("render education");
                        var option;
                        var first = {};
                        var initId = null;
                        app.allEducation.forEach(function(education) {
                            var id = education.educationId;
                            var name = education.educationName;
                            option = $('<option value=' + id + '></option>').text(name);
                            $('#searchEducation').append(option);

                            if (initId == null) {
                                initId = id;
                            }

                            if (name == "Any") {
                                console.log("found any");
                                first = {
                                    'id': id,
                                    'name': name
                                };
                                DEFAULT_VALUES.D_EDU_ANY = first;
                            }
                        });

                        $('#searchEducation').tokenize({
                            displayDropdownOnFocus: true,
                            placeholder: "Education",
                            newElements: true,
                            nbDropdownElements: 1000,
                            maxElements: 1
                        });

                        $('#searchEducation').tokenize().tokenRemove(initId);
                        $('#searchEducation').tokenize().tokenAdd(DEFAULT_VALUES.D_EDU_ANY.id, DEFAULT_VALUES.D_EDU_ANY.name);
                    }).catch(function(fromReject) {
                        console.log(fromReject);
                    });
                }

            },
            renderExperience: function(experience) {

                if (experience != null) {

                    $('#searchExperience').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Experience",
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenRemove($('#searchExperience').val()[0]).tokenAdd(experience.experienceId, experience.experienceType);
                }
                // this if check prevents static token suggestion from being duplicated
                else if ($("#searchExperience option[value='1']").length == 0) {

                    var promise = new Promise(function(resolve, reject) {
                        app.bMethods.getAllExperience().then(
                            function(returnedData) {
                                if (returnedData != null) {
                                    returnedData.forEach(function(experience) {
                                        app.allExperience.push(experience);
                                    });
                                }
                                resolve();
                            },
                            function(xhr, state, error) {
                                reject(error);
                            }
                        );
                    });

                    promise.then(function() {
                        console.log("render experience");
                        var option;
                        var first = {};
                        var initId = null;

                        app.allExperience.forEach(function(experience) {
                            var id = experience.experienceId;
                            var name = experience.experienceType;
                            option = $('<option value=' + id + '></option>').text(name);

                            if (initId == null) {
                                initId = id;
                            }

                            if (experience.experienceType == "Any") {
                                console.log("found any");
                                first = {
                                    'id': id,
                                    'name': name
                                };
                                DEFAULT_VALUES.D_EXP_ANY = first;
                            }

                            $('#searchExperience').append(option);
                        });

                        $('#searchExperience').tokenize({
                            displayDropdownOnFocus: true,
                            placeholder: "Experience",
                            newElements: true,
                            nbDropdownElements: 1000,
                            maxElements: 1
                        });

                        $('#searchExperience').tokenize().tokenRemove(initId);
                        $('#searchExperience').tokenize().tokenAdd(DEFAULT_VALUES.D_EXP_ANY.id, DEFAULT_VALUES.D_EXP_ANY.name);

                    }).catch(function(fromReject) {
                        console.log(fromReject);
                    });
                }

            },
            // render filter
            renderLanguage: function() {
                var promise = new Promise(function(resolve, reject) {
                    app.bMethods.getAllLanguage().then(
                        function(returnedData) {
                            if (returnedData != null) {
                                returnedData.forEach(function(language) {
                                    app.allLanguage.push(language);
                                });
                            }
                            resolve();
                        },
                        function(xhr, state, error) {
                            reject(error);
                        }
                    );
                });

                promise.then(function() {
                    console.log("render language filter");

                    var parent = $("#languageFilterDiv");

                    app.allLanguage.forEach(function(language) {

                        var mainDiv = document.createElement("div");
                        parent.append(mainDiv);

                        var languageInput = document.createElement("input");
                        languageInput.type = "checkbox";
                        languageInput.onclick = function() {
                            checkOnFilterChange();
                        };
                        languageInput.id = "lang_" + language.languageId;
                        languageInput.setAttribute("value", language.languageId);
                        mainDiv.appendChild(languageInput);

                        var languageLabel = document.createElement("label");
                        languageLabel.style = "font-size: 14px";
                        languageLabel.setAttribute("for", "lang_" + language.languageId);
                        languageLabel.textContent = language.languageName;
                        mainDiv.appendChild(languageLabel);

                    });

                }).catch(function(fromReject) {
                    console.log(fromReject);
                });

            },
            renderSalaryFilter: function() {

                console.log("render salary filter");

                var parent = $("#salaryFilterDiv");
                app.allSalaryOptions.forEach(function(salary) {

                    var mainDiv = document.createElement("div");
                    parent.append(mainDiv);

                    var salaryInput = document.createElement("input");
                    salaryInput.type = "radio";
                    salaryInput.name = "salaryFilter";


                    salaryInput.id = "sal_" + salary.id;
                    salaryInput.setAttribute("value", salary.name);
                    mainDiv.appendChild(salaryInput);

                    var salaryLabel = document.createElement("label");
                    salaryLabel.style = "font-size: 14px";
                    salaryLabel.setAttribute("for", "sal_" + salary.id);
                    salaryLabel.textContent = salary.name;
                    mainDiv.appendChild(salaryLabel);

                });

                document.getElementById('sal_0').checked = true;
            },
            renderTextSearch: function() {
                var input = $("#searchText");
                var numberOfKeywords = input.val().split(",");
                if (app.suggestion == null) {
                    app.suggestion = new Awesomplete('input[data-multiple]', {
                        minChars: 1,
                        autoFirst: true,
                        filter: function(text, input) {
                            return Awesomplete.FILTER_CONTAINS(text, input.match(/[^,]*$/)[0]);
                        },

                        replace: function(text) {
                            var before = this.input.value.match(/^.+,\s*|/)[0];
                            this.input.value = before + text + ", ";
                        }
                    });

                    $('.awesomplete').css('width', '100%');
                }
                if ((input.val() == null || input.val().length < 3)) {
                    console.log("no need to get suggestion");
                    return;
                }


                $.ajax({
                    url: '/ss/?key=' + input.val(),
                    type: 'GET',
                    dataType: 'json'
                }).success(function(data) {
                    var list = [];
                    $.each(data, function(key, value) {
                        if (!(input.val().toLowerCase().indexOf(value.toLowerCase() + ",") >= 0)) {
                            list.push(value);
                        }
                    });
                    app.suggestion.list = list;
                    if (app.suggestion.list != null && app.suggestion.list.length == 0) {
                        // when no suggestions are returned. do something here...
                    }
                });

            }
        },
        // action perform methods
        do: {
            fillSearchTextBoxWithKeywords: function(keywordList) {
                var searchBoxText = keywordList.join(" ") + ", ";
                document.getElementById("searchText").value = searchBoxText.toTitleCase();
                if (document.getElementById("searchText").value == ", ") {
                    document.getElementById("searchText").value = "";
                    document.getElementById("searchText").placeholder = "Type company name or job role or title";
                }
            },
            search: function(isBasicResetRequired, shouldScrollToTop) {
                app.render.renderLoaderStart();
                if (!app.shouldDoSearch) {
                    console.log("no search!");
                    app.render.renderLoaderStop();
                    return;
                }
                console.log("do search ");
                if (isBasicResetRequired) {
                    app.run.basicReset(shouldScrollToTop);
                }


                // ajax call
                var d = {
                    searchParamRequest: app.currentSearchParams,
                    filterParamRequest: app.currentFilterParams,
                    sortParamRequest: app.currentSortParams,
                    currentSearchURL: app.currentSearchURL
                };

                console.log("/api/search/?page=" + app.page);
                $.ajax({
                    type: "POST",
                    url: "/api/search/?page=" + app.page,
                    async: true,
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(d),
                    success: function(returnedData) {
                        app.do.parseSearchResponse(returnedData);
                        app.render.renderLoaderStop();
                    },
                    error: function(xhr, a, message) {
                        console.log("error: " + message);
                        app.render.renderLoaderStop();
                    }
                });
            },
            renderHTMLTitle: function(htmlTitle) {
                app.htmlTitle = htmlTitle;
                document.title = app.htmlTitle;
            },
            prepNmodifyURL: function() {
                return app.do.modifyURL(app.do.prepareURL());
            },
            modifyURL: function(url) {
                // TODO ideally this should change after the result is returned
                var stateObj = {
                    url: "/s/" + url
                };
                if (!(history.state != null && stateObj.url === history.state.url)) {
                    window.history.pushState(stateObj, "Title", "/s/" + url);
                    app.urlHistoryArray.push(stateObj);
                }
                return "/s/" + url;
            },
            prepareURL: function() {
                var _searchStr = document.getElementById("searchText").value;

                if (_searchStr != null || _searchStr.trim() != "") {
                    _searchStr += "-'";
                }
                // forced in-bangalore
                _searchStr += DEFAULT_VALUES.D_SEARCH_KEYWORD_IDENTIFIER;

                // replace all  all non-alphanumeric characters
                _searchStr = _searchStr.replace(/[^a-z0-9]+/gi, '-');

                // replace first occurance of -
                _searchStr = _searchStr.replace(/^(-)+/, "");

                var _location = document.getElementById("searchLocation");
                var _text = _location.options[_location.selectedIndex];
                if (_location.value != 0 && _text != null) {
                    _searchStr += "_" + DEFAULT_VALUES.D_LOCALITY_IDENTIFIER + _text.innerHTML.replace(/\s+/g, '-');
                }

                var _education = document.getElementById("searchEducation");
                _text = _education.options[_education.selectedIndex];

                if (_education.value != 0 && _text != null && _text.innerHTML.toLowerCase() != "any") {
                    _searchStr += "_for-" + _text.innerHTML.replace(/[^a-z0-9]+/gi, '-') + DEFAULT_VALUES.D_EDU_IDENTIFIER;
                }

                var _experience = document.getElementById("searchExperience");
                _text = _experience.options[_experience.selectedIndex];
                if (_experience.value != 0 && _text != null && _text.innerHTML.toLowerCase() != "any") {
                    _searchStr += "_for-" + _text.innerHTML.replace(/[^a-z0-9]+/gi, '-') + DEFAULT_VALUES.D_EXP_IDENTIFIER;
                }

                return (_searchStr + "/").toLowerCase();
            },
            prepareSearchParamFromURL: function() {

                // interprets url and create search params
                try {
                    var url = window.location.pathname.split('/');
                    var _searchUrl = url[url.length - 2];

                    app.currentSearchParams = {};
                    if (_searchUrl != null) {
                        app.currentSearchURL = _searchUrl;
                        if (_searchUrl.indexOf(DEFAULT_VALUES.D_SEARCH_KEYWORD_IDENTIFIER) < 0) {
                            // redirect to 404
                            // window.location = "/pageNotFound" ;
                            app.do.noJobsFound(true);
                            return;
                        } else {
                            app.do.noJobsFound(false);
                        }

                        var list = _searchUrl.split('_');
                        // run identifier on this array;
                        var i;
                        for (i = 0; i < list.length; i++) {
                            if (isEmpty(list[i])) {
                                continue;
                            }
                            var _param = list[i];
                            if (_param.search(DEFAULT_VALUES.D_SEARCH_KEYWORD_IDENTIFIER) != -1) {
                                _param = _param.replace(DEFAULT_VALUES.D_SEARCH_KEYWORD_IDENTIFIER, '');
                                _param = _param.trim();
                                if (_param.length > 0) {
                                    _param = _param.split('-');
                                    app.currentSearchParams["keywordList"] = _param;
                                }
                            } else if (_param.search(DEFAULT_VALUES.D_LOCALITY_IDENTIFIER) != -1) {
                                _param = _param.replace(DEFAULT_VALUES.D_LOCALITY_IDENTIFIER, '');
                                if (!isEmpty(_param)) {
                                    app.currentSearchParams["locationName"] = _param.replace(/[^a-z0-9]+/gi, ' ').trim();
                                }
                            } else if (_param.search(DEFAULT_VALUES.D_EDU_IDENTIFIER) != -1) {
                                _param = _param.replace(DEFAULT_VALUES.D_EDU_IDENTIFIER, '');
                                _param = _param.replace("for", '');
                                _param = _param.trim();
                                if (!isEmpty(_param)) {
                                    app.currentSearchParams["educationText"] = _param.replace(/[^a-z0-9]+/gi, ' ').trim();
                                }
                            } else if (_param.search(DEFAULT_VALUES.D_EXP_IDENTIFIER) != -1) {
                                _param = _param.replace(DEFAULT_VALUES.D_EXP_IDENTIFIER, '');
                                _param = _param.replace("for", '');
                                if (!isEmpty(_param)) {
                                    app.currentSearchParams["experienceText"] = _param.replace(/[^a-z0-9]+/gi, ' ').trim();
                                }
                            }
                        }
                    }
                } catch (exception) {
                    console.log("exception in interpreting url: " + exception.stack);
                }
            },
            noJobsFound: function(data) {
                if (data) {
                    $('#noJobsDiv').show();
                    $('#job_cards_inc').hide();
                    $('#jobCardControl').hide();
                    app.shouldDoSearch = false;
                } else {
                    $('#noJobsDiv').hide();

                    $('#job_cards_inc').show();
                    $('#jobCardControl').show();
                    app.shouldDoSearch = true;
                }
                $("#hotJobs").html("");

                app.render.renderLoaderStop();

                return;
            },
            parseSearchResponse: function(data) {
                console.log(data);
                // form result, and render it in card
                // pagination is required

                if (data != null) {

                    app.isUserLoggedIn = data.isUserLoggedIn;
                    if (app.prevUserLoginStatus == null) {
                        app.prevUserLoginStatus = app.isUserLoggedIn;
                    }
                    if (app.prevUserLoginStatus != app.isUserLoggedIn) {
                        app.prevUserLoginStatus = app.isUserLoggedIn;
                        app.hasLoginStatusChanged = true;
                    }
                    if (!app.isNavBarLoaded || app.hasLoginStatusChanged) {
                        app.hasLoginStatusChanged = false;
                        if (app.isUserLoggedIn) {
                            $('#nav_bar_inc').load('/navBarLoggedIn');
                        } else {
                            $('#nav_bar_inc').load('/navBar');
                        }
                        app.isNavBarLoaded = true;
                    }

                    // append search params to the UI
                    app.render.renderLocation(data.searchParams.locality);
                    app.render.renderEducation(data.searchParams.education);
                    app.render.renderExperience(data.searchParams.experience);

                    app.mark.selectedLanguageFilter(data.filterParams.languageList);
                    app.mark.selectedGenderFilter(data.filterParams.gender);
                    app.do.fillSearchTextBoxWithKeywords(data.searchParams.searchKeywords);

                    console.log("data.isURLInvalid: " + data.isURLInvalid);
                    if (data.isURLInvalid) {
                        app.do.noJobsFound(true);
                        return;
                    } else {
                        app.do.noJobsFound(false);
                    }

                    if (data.htmlTitle) {
                        app.do.renderHTMLTitle(data.htmlTitle);
                    }

                    var _jobPostList = data.results.allJobPost;
                    var _jobPostCount = Object.keys(_jobPostList).length;
                    if (_jobPostCount > 0) {
                        if (DEFAULT_VALUES.D_JOBS_PER_PAGE == 0) {
                            DEFAULT_VALUES.D_JOBS_PER_PAGE = parseInt(data.results.jobsPerPage);
                            console.log("max row" + DEFAULT_VALUES.D_JOBS_PER_PAGE);
                        }
                        var _numberOfPages = Math.floor(parseInt(data.results.totalJobs) / DEFAULT_VALUES.D_JOBS_PER_PAGE);
                        var _rem = parseInt(data.results.totalJobs) % DEFAULT_VALUES.D_JOBS_PER_PAGE;
                        if (_rem > 0) {
                            _numberOfPages++;
                        }
                        console.log("no of pages : " + _numberOfPages);
                        if (!app.isPaginationEnabled) {
                            app.do.pagination(_numberOfPages);
                        }

                        $('#job_cards_inc').show();
                        $('#jobCardControl').show();

                        $("#hotJobs").html("");
                        var _parent = $("#hotJobs");
                        //returnedData.reverse();

                        var loaderBackgroundDiv = document.createElement("div");
                        loaderBackgroundDiv.id = "backgroundLoader";
                        _parent.append(loaderBackgroundDiv);

                        $("#jobLoaderDiv").hide();
                        $('#noJobsDiv').hide();

                        var jobSearchTitle = app.currentSearchURL.capitalizeFirstLetter().replace(/[^a-z0-9]+/gi, ' ');

                        app.do.createAndAppendDivider(" Showing " + parseInt((app.page - 1) * 5 + 1) + "-" + parseInt((app.page - 1) * 5 + parseInt(_jobPostList.length)) + " of " + data.results.totalJobs + " jobs matching your search");
                        // var _isDividerPresent = false;

                        genNewJobCard(_jobPostList, _parent);

                    } else {
                        // no jobs found
                        // reset current job card and navigator

                        $('#job_cards_inc').hide();
                        $('#jobCardControl').hide();

                        $("#jobLoaderDiv").hide();
                        $('#noJobsDiv').show();

                    }

                    return app.do.modifyURL(app.do.prepareURL());

                }

                $(".first").hide();
                $(".last").hide();
                $(".prev a").html("<<");
                $(".next a").html(">>");
            },
            pagination: function(noOfPages) {
                // this boolean prevents from looping into pagination when search is triggered
                console.log("render page navigator | noOfPages: " + noOfPages);
                // c.f http://esimakin.github.io/twbs-pagination/
                // ' Call destroy method and then initialize it with new options.'
                $('#jobCardControl').twbsPagination('destroy');
                $('#jobCardControl').twbsPagination({
                    totalPages: noOfPages,
                    visiblePages: 5,
                    onPageClick: function(event, page) {
                        if (page > 0) {
                            console.log("page: " + page);
                            app.page = page;

                        }
                        if (app.isPaginationEnabled) {
                            app.do.search(false, true);
                        }
                        $(".page-link").click(function() {
                            $('html, body').animate({
                                scrollTop: $("#job_cards_inc").offset().top - 100
                            }, 800);
                        });
                        $(".first").hide();
                        $(".last").hide();
                        $(".prev a").html("<<");
                        $(".next a").html(">>");

                    }
                });
                app.isPaginationEnabled = true;
            },
            createAndAppendDivider: function(title) {
                var parent = $("#hotJobs");

                var mainDiv = document.createElement("div");
                mainDiv.id = "hotJobItemDivider";
                mainDiv.style = "padding:1% 2% 1% 1%";
                parent.append(mainDiv);

                // var otherJobIcon = document.createElement("img");
                // otherJobIcon.src = "/assets/common/img/suitcase.png";
                // otherJobIcon.style = "width: 42px; margin: 8px";
                // otherJobIcon.setAttribute("display", "inline-block");
                // mainDiv.appendChild(otherJobIcon);

                var hotJobItem = document.createElement("span");
                hotJobItem.setAttribute("display", "inline-block");
                hotJobItem.textContent = title;
                mainDiv.appendChild(hotJobItem);

            },
            updateOnFilterChange: function() {
                console.log("update language filter");
                //language filter
                app.currentFilterParams.selectedLanguageIdList = [];
                $('#languageFilterDiv input:checked').each(function() {
                    console.log("added id: " + parseInt($(this).attr('value')));
                    app.currentFilterParams.selectedLanguageIdList.push(parseInt($(this).attr('value')));
                });
                if (app.currentFilterParams.selectedLanguageIdList.length > 0) {
                    $("#language_filter").show();
                } else {
                    $("#language_filter").hide();
                }

                app.do.search(true, true);
            },
            updateGenderFilter: function(genderId) {
                $("#gender_filter").show();
                app.currentFilterParams.selectedGender = genderId;

                console.log(genderId);

                app.do.search(true, true);
            },
            updateSalaryFilter: function(salaryId) {
                $("#salary_filter").show();
                app.currentFilterParams.selectedSalary = parseInt(salaryId) * 1000;

                console.log("salary gt : " + salaryId);

                app.do.search(true, true);
            },
            updateSortBy: function(value) {
                /*
                 5 sort by salary relevance
                 2 sort by datePosted : newest on top
                 3 sort by salary high to low
                 4 sort by salary low to high
                 */
                // current its assumed that on server the value  2, 3, 4, 5 are defined in same way

                app.currentSortParams.sortBy = parseInt(value);

                console.log("sort by : " + value);

                app.do.search(true, true);
            },
            resetFilters: function() {
                console.log("reset filter");
                $("#gender_filter").hide();
                $("#salary_filter").hide();
                $("#language_filter").hide();


                $('input:checkbox').removeAttr('checked');
                $('input:radio').removeAttr('checked');

                document.getElementById('sortByRelevance').checked = true;
                document.getElementById('sal_0').checked = true;

                app.currentFilterParams.selectedGender = null;
                app.currentFilterParams.selectedLanguageIdList = [];
                app.currentSortParams.sortBy = 5; // default set to sort by relevance

                app.do.search(true, true);
            }
        },
        // ui filter marking
        mark: {
            selectedLanguageFilter: function(languageList) {
                if (languageList == null || languageList.length == 0) {
                    return;
                }

                languageList.forEach(function(language) {
                    document.getElementById('lang_' + language.languageId).checked = true;
                });

            },
            selectedGenderFilter: function(id) {
                if (id == null || id == 2) {
                    return;
                }
                document.getElementById('gender_' + id).checked = true;

            }
        },
        // action validator methods
        run: {
            validateEducation: function(education) {
                if (education != null) {
                    return education.educationName;
                } else {
                    return "NA"
                }
            },
            validateWorkShift: function(jobPostShift) {
                if (jobPostShift == null) {
                    return "";
                } else if (jobPostShift.timeShiftName) {
                    return jobPostShift.timeShiftName;
                }
            },
            searchValidation: function() {

            },
            urlValidation: function() {

            },
            urlChangeDetector: function() {
                if (window.history && window.history.pushState) {

                    $(window).on('popstate', function() {
                        app.urlHistoryArray.pop();
                        // history.back();
                        console.log('back ur: ' + window.location.pathname);
                        if (app.urlHistoryArray.length == 0) {
                            history.back();
                        } else {
                            app.do.prepareSearchParamFromURL();
                            app.do.search(false, false);
                        }
                    });

                }
            },
            validateGender: function(gender) {
                if (gender == null || gender == 2) {
                    return "Any";
                } else if (gender == 0) {
                    return "Male";
                } else if (gender == 1) {
                    return "Female";
                }
                return "";
            },
            validateMaxAge: function(age) {
                if (age == null) {
                    return "";
                } else {
                    return age;
                }
            },
            basicReset: function(scrollTop) {
                console.log("basic reset");
                if (scrollTop) {
                    $('html, body').animate({
                        scrollTop: $("#job_cards_inc").offset().top - 100
                    }, 800);
                }
                app.page = 1;
                app.isPaginationEnabled = false;


                if ($('#searchLocation').val() == null) {
                    $('#searchLocation').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Location",
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenAdd(DEFAULT_VALUES.D_LOCATION_ALL_BANGALORE.id,
                        DEFAULT_VALUES.D_LOCATION_ALL_BANGALORE.name);
                }
                if ($('#searchEducation').val() == null) {
                    $('#searchEducation').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Education",
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenAdd(DEFAULT_VALUES.D_EDU_ANY.id,
                        DEFAULT_VALUES.D_EDU_ANY.name);
                }

                if ($('#searchExperience').val() == null) {
                    $('#searchExperience').tokenize({
                        displayDropdownOnFocus: true,
                        placeholder: "Experience",
                        nbDropdownElements: 1000,
                        maxElements: 1
                    }).tokenAdd(DEFAULT_VALUES.D_EXP_ANY.id,
                        DEFAULT_VALUES.D_EXP_ANY.name);
                }

            }
        },
        parse: {
            createdOnDate: function(timestamp) {
                var jobDate = new Date(timestamp);
                var currentDate = new Date();

                var daysDiff = app.parse.daysDiff(jobDate, currentDate);

                if (daysDiff > 90) {
                    return " 3 months ago";
                } else if (jobDate.getDate() == currentDate.getUTCDate()) {
                    return " Today";
                } else {
                    return daysDiff + " days ago";
                }

            },
            daysDiff: function(firstDate, secondDate) {

                return Math.round((secondDate - firstDate) / (1000 * 60 * 60 * 24));
            }
        }
    };

    // loading card view elements here
    $('#job_cards_inc').load('/jobPostCardView');

    // control flow
    app.bMethods.init();

    // resetFilters even listeners
    document.getElementById("resetFilters").addEventListener("click", function() {
        app.do.resetFilters();
    });

    // search click listener
    document.getElementById("searchBtn").addEventListener("click", function() {
        app.page = 1; // reset page to 1 for new search
        app.currentURL = app.do.prepNmodifyURL();
        app.do.prepareSearchParamFromURL();
        app.do.search(true, false);
    });

    // scroll to top listener
    document.getElementById("scrollToTop").addEventListener("click", function() {
        $('body').scrollTop(0);
    });

    // this detect the typing even on the search bar
    $('#searchText').on('keyup', function(event) {
        // remove action on key press of special char ASCII value and enter
        if (!(event.keyCode >= 32 && event.keyCode <= 47) && (event.keyCode != 13)) {
            app.render.renderTextSearch();
        }
    });

    // gender filter listner
    $("input[name=filterGender]:radio").change(function() {
        app.do.updateGenderFilter(this.value);
        console.log("gender filter ");
    });

    // salary filter listner
    $("input[name=salaryFilter]:radio").change(function() {
        app.do.updateSalaryFilter(this.id.split("_")[1]);
        console.log("salary  filter id: " + this.id.split("_")[1]);
    });

    // sort listener
    $("input[name=sortBy]:radio").change(function() {
        app.do.updateSortBy(this.value);
        console.log("sort by");
    });

    // public methods
    function isEmpty(str) {
        return (!str || 0 === str.length);
    }

    /* render footer */
    $('#footer_inc').load('/footer');

    return app;
}(jQuery));


// exposed methods

function checkOnFilterChange() {
    app.do.updateOnFilterChange();
}


function getJob() {
    app.render.renderJobRole();
    return app.allJobRole;
};

function getLocality() {
    console.log("all locality size: " + app.allLocationArray.length);
    return app.allLocationArray;
};

/* register box */
/*$(window).scroll(function(){
 console.log(app.isUserLoggedIn);
 if(!app.isUserLoggedIn){
 var w = window.innerWidth;
 if ($(this).scrollTop() > 350) {
 $('.registerBox').fadeIn();
 if(w > 400){
 $('.registerBox').css("width","120px");
 }
 else{
 $('.registerBox').css("width","100%");
 }
 } else {
 $('.registerBox').fadeOut();
 $('.registerBox').css("width","50px");
 }
 }
 });*/


// for nav bar imports
function openLogin() {
    $("#signInPopup").html("Sign In");
    document.getElementById("resetCheckUserBtn").disabled = false;
    document.getElementById("resetNewPasswordBtn").disabled = false;
    $('#form_login_candidate').show();
    $('#noUserLogin').hide();
    $('#incorrectMsgLogin').hide();
    $('#form_forgot_password').hide();
    $('#errorMsgReset').hide();
    $('#form_password_reset_otp').hide();
    $('#form_password_reset_new').hide();
    $('#noPasswordLogin').hide();
}

function openSignUp() {
    $("#myLoginModal").modal("hide");
}
//search bar animation effect code

var countSort = 0;

function showSort() {
    countSort = countSort + 1;
    if (countSort == 1) {
        $('#sortMainBox').show();
        $('#filterMainBox').hide();
    }
    if (countSort == 2) {
        $('#sortMainBox').hide();
        $('#filterMainBox').hide();
        countSort = 0;
    }
}
var countFilter = 0;

function showFilter() {
    countFilter = countFilter + 1;
    if (countFilter == 1) {
        $('#sortMainBox').hide();
        $('#filterMainBox').show();
    }
    if (countFilter == 2) {
        $('#filterMainBox').hide();
        $('#sortMainBox').hide();
        countFilter = 0;
    }

}
>>>>>>> rmp-employee
